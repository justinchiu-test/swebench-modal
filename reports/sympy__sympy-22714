[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-22714", "base_commit": "3ff4717b6aef6086e78f01cdfa06f64ae23aed7e", "patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -152,7 +152,7 @@ def __new__(cls, *args, **kwargs):\n                         'warn' or 'ignore'.'''))\n         if any(coords[dim:]):\n             raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any(a.is_number and im(a) for a in coords):\n+        if any(a.is_number and im(a).is_zero is False for a in coords):\n             raise ValueError('Imaginary coordinates are not permitted.')\n         if not all(isinstance(a, Expr) for a in coords):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n", "test_patch": "diff --git a/sympy/geometry/tests/test_point.py b/sympy/geometry/tests/test_point.py\n--- a/sympy/geometry/tests/test_point.py\n+++ b/sympy/geometry/tests/test_point.py\n@@ -1,5 +1,6 @@\n from sympy.core.basic import Basic\n from sympy.core.numbers import (I, Rational, pi)\n+from sympy.core.parameters import evaluate\n from sympy.core.singleton import S\n from sympy.core.symbol import Symbol\n from sympy.core.sympify import sympify\n@@ -452,6 +453,12 @@ def test__normalize_dimension():\n         Point(1, 2, 0), Point(3, 4, 0)]\n \n \n+def test_issue_22684():\n+    # Used to give an error\n+    with evaluate(False):\n+        Point(1, 2)\n+\n+\n def test_direction_cosine():\n     p1 = Point3D(0, 0, 0)\n     p2 = Point3D(1, 1, 1)\n", "problem_statement": "simpify gives `Imaginary coordinates are not permitted.` with evaluate(False)\n## Issue\r\n`with evaluate(False)` crashes unexpectedly with `Point2D`\r\n\r\n## Code\r\n```python\r\nimport sympy as sp\r\nwith sp.evaluate(False):\r\n  sp.S('Point2D(Integer(1),Integer(2))')\r\n```\r\n\r\n## Error\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/avinash/.local/lib/python3.8/site-packages/sympy/core/sympify.py\", line 472, in sympify\r\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\r\n  File \"/home/avinash/.local/lib/python3.8/site-packages/sympy/parsing/sympy_parser.py\", line 1026, in parse_expr\r\n    raise e from ValueError(f\"Error from parse_expr with transformed code: {code!r}\")\r\n  File \"/home/avinash/.local/lib/python3.8/site-packages/sympy/parsing/sympy_parser.py\", line 1017, in parse_expr\r\n    rv = eval_expr(code, local_dict, global_dict)\r\n  File \"/home/avinash/.local/lib/python3.8/site-packages/sympy/parsing/sympy_parser.py\", line 911, in eval_expr\r\n    expr = eval(\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/avinash/.local/lib/python3.8/site-packages/sympy/geometry/point.py\", line 912, in __new__\r\n    args = Point(*args, **kwargs)\r\n  File \"/home/avinash/.local/lib/python3.8/site-packages/sympy/geometry/point.py\", line 153, in __new__\r\n    raise ValueError('Imaginary coordinates are not permitted.')\r\nValueError: Imaginary coordinates are not permitted.\r\n```\r\n\r\nHowever, it works without `with evaluate(False)`. Both of following commands work\r\n```python\r\nsp.S('Point2D(Integer(1),Integer(2))')\r\nsp.S('Point2D(Integer(1),Integer(2))', evaluate=False)\r\n```\n", "hints_text": "", "created_at": "2021-12-19T18:54:36Z", "version": "1.10", "FAIL_TO_PASS": "[\"test_issue_22684\"]", "PASS_TO_PASS": "[\"test_point\", \"test_point3D\", \"test_Point2D\", \"test_issue_9214\", \"test_issue_11617\", \"test_transform\", \"test_concyclic_doctest_bug\", \"test_arguments\", \"test_unit\", \"test_dot\", \"test__normalize_dimension\"]", "environment_setup_commit": "fd40404e72921b9e52a5f9582246e4a6cd96c431"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/geometry/point.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 3ff4717b6aef6086e78f01cdfa06f64ae23aed7e\nMerge: c43550c31e 096a8d153a\nAuthor: Oscar Gustafsson <oscar.gustafsson@gmail.com>\nDate:   Sun Dec 19 19:58:20 2021 +0100\n\n    Merge pull request #22665 from oscargus/printingimprovements3\n    \n    Fixed printing of all(?) quantum states and more\n\ndiff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 73c20334d0..11bad7ff9c 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -152,7 +152,7 @@ def __new__(cls, *args, **kwargs):\n                         'warn' or 'ignore'.'''))\n         if any(coords[dim:]):\n             raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any(a.is_number and im(a) for a in coords):\n+        if any(a.is_number and im(a).is_zero is False for a in coords):\n             raise ValueError('Imaginary coordinates are not permitted.')\n         if not all(isinstance(a, Expr) for a in coords):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.10.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.10.dev0\n    Uninstalling sympy-1.10.dev0:\n      Successfully uninstalled sympy-1.10.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        8528462\nhash randomization: off\n\nsympy/geometry/tests/test_point.py[13] \ntest_point ok\ntest_point3D ok\ntest_Point2D ok\ntest_issue_9214 ok\ntest_issue_11617 ok\ntest_transform ok\ntest_concyclic_doctest_bug ok\ntest_arguments ok\ntest_unit ok\ntest_dot ok\ntest__normalize_dimension ok\ntest_issue_22684 ok\ntest_direction_cosine ok                                                    [OK]\n\n\n================== tests finished: 13 passed, in 4.77 seconds ==================\n", {"test_point": "PASSED", "test_point3D": "PASSED", "test_Point2D": "PASSED", "test_issue_9214": "PASSED", "test_issue_11617": "PASSED", "test_transform": "PASSED", "test_concyclic_doctest_bug": "PASSED", "test_arguments": "PASSED", "test_unit": "PASSED", "test_dot": "PASSED", "test__normalize_dimension": "PASSED", "test_issue_22684": "PASSED"}]