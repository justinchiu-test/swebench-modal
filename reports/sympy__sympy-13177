[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-13177", "base_commit": "662cfb818e865f580e18b59efbb3540c34232beb", "patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -39,7 +39,8 @@ def doit(p, q):\n             if p.is_infinite or q.is_infinite or p is nan or q is nan:\n                 return nan\n             if (p == q or p == -q or\n-                    p.is_Pow and p.exp.is_Integer and p.base == q or\n+                    p.is_Pow and p.exp.is_integer and p.base == q and q.is_integer\n+                    and p.exp.is_positive or\n                     p.is_integer and q == 1):\n                 return S.Zero\n \n", "test_patch": "diff --git a/sympy/core/tests/test_numbers.py b/sympy/core/tests/test_numbers.py\n--- a/sympy/core/tests/test_numbers.py\n+++ b/sympy/core/tests/test_numbers.py\n@@ -8,6 +8,7 @@\n from sympy.core.logic import fuzzy_not\n from sympy.core.numbers import (igcd, ilcm, igcdex, seterr, _intcache,\n     igcd2, igcd_lehmer, mpf_norm, comp, mod_inverse)\n+from sympy.core.mod import Mod\n from sympy.utilities.decorator import conserve_mpmath_dps\n from sympy.utilities.iterables import permutations\n from sympy.utilities.pytest import XFAIL, raises\n@@ -121,6 +122,20 @@ def test_mod():\n     assert Integer(10) % 4 == Integer(2)\n     assert 15 % Integer(4) == Integer(3)\n \n+    h = Symbol('h')\n+    m = h ** 2 % h\n+    k = h ** -2 % h\n+    l = Symbol('l', integer=True)\n+    p = Symbol('p', integer=True, positive=True)\n+    q = Symbol('q', integer=True, negative=True)\n+\n+    assert m == h * (h % 1)\n+    assert k == Mod(h ** -2, h, evaluate=False)\n+    assert Mod(l ** p, l) == 0\n+    assert Mod(l ** 2, l) == 0\n+    assert (l ** q % l) == Mod(l ** q, l, evaluate=False)\n+    assert (l ** -2 % l) == Mod(l ** -2, l, evaluate=False)\n+\n \n def test_divmod():\n     assert divmod(S(12), S(8)) == Tuple(1, 4)\n", "problem_statement": "Mod(x**2, x) is not (always) 0\nWhen the base is not an integer, `x**2 % x` is not 0. The base is not tested to be an integer in Mod's eval logic:\r\n\r\n```\r\nif (p == q or p == -q or\r\n        p.is_Pow and p.exp.is_Integer and p.base == q or\r\n        p.is_integer and q == 1):\r\n    return S.Zero\r\n```\r\n\r\nso\r\n\r\n```\r\n>>> Mod(x**2, x)\r\n0\r\n```\r\nbut\r\n```\r\n>>> x = S(1.5)\r\n>>> Mod(x**2, x)\r\n0.75\r\n```\n", "hints_text": "Even if `p.base` is an integer, the exponent must also be positive.\r\n\r\n```\r\nif (p == q or p == -q or p.is_integer and q == 1 or\r\n        p.base == q and q.is_integer and p.is_Pow and p.exp.is_Integer\r\n        and p.exp.is_positive):\r\n    return S.Zero\r\n```\r\n\r\nbecause\r\n\r\n```\r\n>>> 2**-2 % S(2)\r\n1/4\r\n```\nI would like to work on this. \nOne would need just a slight change in the order of the properties, \r\n\r\n\r\n            p.is_Pow and p.base == q and q.is_integer and p.exp.is_Integer\r\n            and p.exp.is_positive):\r\n            return S.Zero\r\n\r\ninstead of\r\n\r\n        p.base == q and q.is_integer and p.is_Pow and p.exp.is_Integer\r\n        and p.exp.is_positive):\r\n        return S.Zero\r\n\r\n\r\notherwise one gets an Attribute error:'Symbol' object has no attribute 'base' from\r\n>>> Mod(x**2, x).\r\n", "created_at": "2017-08-22T20:28:20Z", "version": "1.1", "FAIL_TO_PASS": "[\"test_mod\", \"test_mod_inverse\"]", "PASS_TO_PASS": "[\"test_integers_cache\", \"test_seterr\", \"test_divmod\", \"test_igcd\", \"test_igcd_lehmer\", \"test_igcd2\", \"test_ilcm\", \"test_igcdex\", \"test_Integer_new\", \"test_Rational_new\", \"test_Number_new\", \"test_Rational_cmp\", \"test_Float\", \"test_float_mpf\", \"test_Float_RealElement\", \"test_Float_default_to_highprec_from_str\", \"test_Float_eval\", \"test_Float_issue_2107\", \"test_Infinity\", \"test_Infinity_2\", \"test_Mul_Infinity_Zero\", \"test_Div_By_Zero\", \"test_Infinity_inequations\", \"test_NaN\", \"test_special_numbers\", \"test_powers\", \"test_integer_nthroot_overflow\", \"test_isqrt\", \"test_powers_Rational\", \"test_powers_Float\", \"test_abs1\", \"test_accept_int\", \"test_dont_accept_str\", \"test_int\", \"test_long\", \"test_real_bug\", \"test_bug_sqrt\", \"test_pi_Pi\", \"test_no_len\", \"test_issue_3321\", \"test_issue_3692\", \"test_issue_3423\", \"test_issue_3449\", \"test_Integer_factors\", \"test_Rational_factors\", \"test_issue_4107\", \"test_IntegerInteger\", \"test_Rational_gcd_lcm_cofactors\", \"test_Float_gcd_lcm_cofactors\", \"test_issue_4611\", \"test_conversion_to_mpmath\", \"test_relational\", \"test_Integer_as_index\", \"test_Rational_int\", \"test_zoo\", \"test_issue_4122\", \"test_GoldenRatio_expand\", \"test_as_content_primitive\", \"test_hashing_sympy_integers\", \"test_issue_4172\", \"test_Catalan_EulerGamma_prec\", \"test_Float_eq\", \"test_int_NumberSymbols\", \"test_issue_6640\", \"test_issue_6349\", \"test_mpf_norm\", \"test_latex\", \"test_issue_7742\", \"test_Float_idempotence\", \"test_comp\", \"test_issue_9491\", \"test_issue_10063\", \"test_issue_10020\", \"test_invert_numbers\", \"test_golden_ratio_rewrite_as_sqrt\", \"test_comparisons_with_unknown_type\"]", "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/core/mod.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 662cfb818e865f580e18b59efbb3540c34232beb\nMerge: a391177e57 bdda0131b8\nAuthor: Kalevi Suominen <jksuom@gmail.com>\nDate:   Tue Aug 22 19:12:28 2017 +0300\n\n    Merge pull request #13119 from valglad/perm_to_fp\n    \n    group theory: PermutationGroup methods for FpGroup\n\ndiff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex 11c800704b..3aa94d4ac2 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -39,7 +39,8 @@ def doit(p, q):\n             if p.is_infinite or q.is_infinite or p is nan or q is nan:\n                 return nan\n             if (p == q or p == -q or\n-                    p.is_Pow and p.exp.is_Integer and p.base == q or\n+                    p.is_Pow and p.exp.is_integer and p.base == q and q.is_integer\n+                    and p.exp.is_positive or\n                     p.is_integer and q == 1):\n                 return S.Zero\n \nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.1.2.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.1.2.dev0\n    Uninstalling sympy-1.1.2.dev0:\n      Successfully uninstalled sympy-1.1.2.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nrandom seed:        59743175\nhash randomization: off\n\nsympy/core/tests/test_numbers.py[82] \ntest_integers_cache ok\ntest_seterr ok\ntest_mod ok\ntest_divmod ok\ntest_igcd ok\ntest_igcd_lehmer ok\ntest_igcd2 ok\ntest_ilcm ok\ntest_igcdex ok\ntest_Integer_new ok\ntest_Rational_new ok\ntest_Number_new ok\ntest_Rational_cmp ok\ntest_Float ok\ntest_float_mpf ok\ntest_Float_RealElement ok\ntest_Float_default_to_highprec_from_str ok\ntest_Float_eval ok\ntest_Float_issue_2107 ok\ntest_Infinity ok\ntest_Infinity_2 ok\ntest_Mul_Infinity_Zero ok\ntest_Div_By_Zero ok\ntest_Infinity_inequations ok\ntest_NaN ok\ntest_special_numbers ok\ntest_powers ok\ntest_integer_nthroot_overflow ok\ntest_isqrt ok\ntest_powers_Integer ok\ntest_powers_Rational ok\ntest_powers_Float ok\ntest_abs1 ok\ntest_accept_int ok\ntest_dont_accept_str ok\ntest_int ok\ntest_long ok\ntest_real_bug ok\ntest_bug_sqrt ok\ntest_pi_Pi ok\ntest_no_len ok\ntest_issue_3321 ok\ntest_issue_3692 ok\ntest_issue_3423 ok\ntest_issue_3449 ok\ntest_Integer_factors ok\ntest_Rational_factors ok\ntest_issue_4107 ok\ntest_IntegerInteger ok\ntest_Rational_gcd_lcm_cofactors ok\ntest_Float_gcd_lcm_cofactors ok\ntest_issue_4611 ok\ntest_conversion_to_mpmath ok\ntest_relational ok\ntest_Integer_as_index ok\ntest_Rational_int ok\ntest_zoo ok\ntest_issue_4122 ok\ntest_GoldenRatio_expand ok\ntest_as_content_primitive ok\ntest_hashing_sympy_integers ok\ntest_issue_4172 ok\ntest_mpmath_issues f\ntest_Catalan_EulerGamma_prec ok\ntest_Float_eq ok\ntest_int_NumberSymbols ok\ntest_issue_6640 ok\ntest_issue_6349 ok\ntest_mpf_norm ok\ntest_latex ok\ntest_issue_7742 ok\ntest_simplify_AlgebraicNumber ok\ntest_Float_idempotence ok\ntest_comp ok\ntest_issue_9491 ok\ntest_issue_10063 ok\ntest_issue_10020 ok\ntest_invert_numbers ok\ntest_mod_inverse ok\ntest_golden_ratio_rewrite_as_sqrt ok\ntest_comparisons_with_unknown_type ok\ntest_NumberSymbol_comparison ok                                             [OK]\n\n\n======== tests finished: 81 passed, 1 expected to fail, in 1.66 seconds ========\n", {"test_integers_cache": "PASSED", "test_seterr": "PASSED", "test_mod": "PASSED", "test_divmod": "PASSED", "test_igcd": "PASSED", "test_igcd_lehmer": "PASSED", "test_igcd2": "PASSED", "test_ilcm": "PASSED", "test_igcdex": "PASSED", "test_Integer_new": "PASSED", "test_Rational_new": "PASSED", "test_Number_new": "PASSED", "test_Rational_cmp": "PASSED", "test_Float": "PASSED", "test_float_mpf": "PASSED", "test_Float_RealElement": "PASSED", "test_Float_default_to_highprec_from_str": "PASSED", "test_Float_eval": "PASSED", "test_Float_issue_2107": "PASSED", "test_Infinity": "PASSED", "test_Infinity_2": "PASSED", "test_Mul_Infinity_Zero": "PASSED", "test_Div_By_Zero": "PASSED", "test_Infinity_inequations": "PASSED", "test_NaN": "PASSED", "test_special_numbers": "PASSED", "test_powers": "PASSED", "test_integer_nthroot_overflow": "PASSED", "test_isqrt": "PASSED", "test_powers_Integer": "PASSED", "test_powers_Rational": "PASSED", "test_powers_Float": "PASSED", "test_abs1": "PASSED", "test_accept_int": "PASSED", "test_dont_accept_str": "PASSED", "test_int": "PASSED", "test_long": "PASSED", "test_real_bug": "PASSED", "test_bug_sqrt": "PASSED", "test_pi_Pi": "PASSED", "test_no_len": "PASSED", "test_issue_3321": "PASSED", "test_issue_3692": "PASSED", "test_issue_3423": "PASSED", "test_issue_3449": "PASSED", "test_Integer_factors": "PASSED", "test_Rational_factors": "PASSED", "test_issue_4107": "PASSED", "test_IntegerInteger": "PASSED", "test_Rational_gcd_lcm_cofactors": "PASSED", "test_Float_gcd_lcm_cofactors": "PASSED", "test_issue_4611": "PASSED", "test_conversion_to_mpmath": "PASSED", "test_relational": "PASSED", "test_Integer_as_index": "PASSED", "test_Rational_int": "PASSED", "test_zoo": "PASSED", "test_issue_4122": "PASSED", "test_GoldenRatio_expand": "PASSED", "test_as_content_primitive": "PASSED", "test_hashing_sympy_integers": "PASSED", "test_issue_4172": "PASSED", "test_Catalan_EulerGamma_prec": "PASSED", "test_Float_eq": "PASSED", "test_int_NumberSymbols": "PASSED", "test_issue_6640": "PASSED", "test_issue_6349": "PASSED", "test_mpf_norm": "PASSED", "test_latex": "PASSED", "test_issue_7742": "PASSED", "test_simplify_AlgebraicNumber": "PASSED", "test_Float_idempotence": "PASSED", "test_comp": "PASSED", "test_issue_9491": "PASSED", "test_issue_10063": "PASSED", "test_issue_10020": "PASSED", "test_invert_numbers": "PASSED", "test_mod_inverse": "PASSED", "test_golden_ratio_rewrite_as_sqrt": "PASSED", "test_comparisons_with_unknown_type": "PASSED"}]