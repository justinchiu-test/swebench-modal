[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-14774", "base_commit": "8fc63c2d71752389a44367b8ef4aba8a91af6a45", "patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -740,7 +740,7 @@ def _print_Function(self, expr, exp=None):\n                 len(args) == 1 and \\\n                 not self._needs_function_brackets(expr.args[0])\n \n-            inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acot\"]\n+            inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acsc\", \"asec\", \"acot\"]\n \n             # If the function is an inverse trig function, handle the style\n             if func in inv_trig_table:\n", "test_patch": "diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -6,7 +6,7 @@\n     Lambda, LaplaceTransform, Limit, Matrix, Max, MellinTransform, Min, Mul,\n     Order, Piecewise, Poly, ring, field, ZZ, Pow, Product, Range, Rational,\n     RisingFactorial, rootof, RootSum, S, Shi, Si, SineTransform, Subs,\n-    Sum, Symbol, ImageSet, Tuple, Union, Ynm, Znm, arg, asin, Mod,\n+    Sum, Symbol, ImageSet, Tuple, Union, Ynm, Znm, arg, asin, acsc, Mod,\n     assoc_laguerre, assoc_legendre, beta, binomial, catalan, ceiling, Complement,\n     chebyshevt, chebyshevu, conjugate, cot, coth, diff, dirichlet_eta, euler,\n     exp, expint, factorial, factorial2, floor, gamma, gegenbauer, hermite,\n@@ -305,6 +305,8 @@ def test_latex_functions():\n     assert latex(asin(x**2), inv_trig_style=\"power\",\n                  fold_func_brackets=True) == \\\n         r\"\\sin^{-1} {x^{2}}\"\n+    assert latex(acsc(x), inv_trig_style=\"full\") == \\\n+        r\"\\operatorname{arccsc}{\\left (x \\right )}\"\n \n     assert latex(factorial(k)) == r\"k!\"\n     assert latex(factorial(-k)) == r\"\\left(- k\\right)!\"\n", "problem_statement": "Latex printer does not support full inverse trig function names for acsc and asec\nFor example\r\n`latex(asin(x), inv_trig_style=\"full\")` works as expected returning `'\\\\arcsin{\\\\left (x \\\\right )}'`\r\nBut `latex(acsc(x), inv_trig_style=\"full\")` gives `'\\\\operatorname{acsc}{\\\\left (x \\\\right )}'` instead of `'\\\\operatorname{arccsc}{\\\\left (x \\\\right )}'`\r\n\r\nA fix seems to be to change line 743 of sympy/printing/latex.py from\r\n`inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acot\"]` to\r\n`inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acsc\", \"asec\", \"acot\"]`\n", "hints_text": "", "created_at": "2018-06-05T08:03:47Z", "version": "1.1", "FAIL_TO_PASS": "[\"test_latex_functions\"]", "PASS_TO_PASS": "[\"test_printmethod\", \"test_latex_basic\", \"test_latex_builtins\", \"test_latex_SingularityFunction\", \"test_latex_cycle\", \"test_latex_permutation\", \"test_latex_Float\", \"test_latex_vector_expressions\", \"test_latex_symbols\", \"test_function_subclass_different_name\", \"test_hyper_printing\", \"test_latex_bessel\", \"test_latex_fresnel\", \"test_latex_brackets\", \"test_latex_indexed\", \"test_latex_derivatives\", \"test_latex_subs\", \"test_latex_integrals\", \"test_latex_sets\", \"test_latex_SetExpr\", \"test_latex_Range\", \"test_latex_sequences\", \"test_latex_FourierSeries\", \"test_latex_FormalPowerSeries\", \"test_latex_intervals\", \"test_latex_AccumuBounds\", \"test_latex_emptyset\", \"test_latex_commutator\", \"test_latex_union\", \"test_latex_symmetric_difference\", \"test_latex_Complement\", \"test_latex_Complexes\", \"test_latex_productset\", \"test_latex_Naturals\", \"test_latex_Naturals0\", \"test_latex_Integers\", \"test_latex_ImageSet\", \"test_latex_ConditionSet\", \"test_latex_ComplexRegion\", \"test_latex_Contains\", \"test_latex_sum\", \"test_latex_product\", \"test_latex_limits\", \"test_latex_log\", \"test_issue_3568\", \"test_latex\", \"test_latex_dict\", \"test_latex_list\", \"test_latex_rational\", \"test_latex_inverse\", \"test_latex_DiracDelta\", \"test_latex_Heaviside\", \"test_latex_KroneckerDelta\", \"test_latex_LeviCivita\", \"test_mode\", \"test_latex_Piecewise\", \"test_latex_Matrix\", \"test_latex_matrix_with_functions\", \"test_latex_NDimArray\", \"test_latex_mul_symbol\", \"test_latex_issue_4381\", \"test_latex_issue_4576\", \"test_latex_pow_fraction\", \"test_noncommutative\", \"test_latex_order\", \"test_latex_Lambda\", \"test_latex_PolyElement\", \"test_latex_FracElement\", \"test_latex_Poly\", \"test_latex_Poly_order\", \"test_latex_ComplexRootOf\", \"test_latex_RootSum\", \"test_settings\", \"test_latex_numbers\", \"test_latex_euler\", \"test_lamda\", \"test_custom_symbol_names\", \"test_matAdd\", \"test_matMul\", \"test_latex_MatrixSlice\", \"test_latex_RandomDomain\", \"test_PrettyPoly\", \"test_integral_transforms\", \"test_categories\", \"test_Modules\", \"test_QuotientRing\", \"test_Tr\", \"test_Adjoint\", \"test_Hadamard\", \"test_ZeroMatrix\", \"test_boolean_args_order\", \"test_imaginary\", \"test_builtins_without_args\", \"test_latex_greek_functions\", \"test_translate\", \"test_other_symbols\", \"test_modifiers\", \"test_greek_symbols\", \"test_builtin_no_args\", \"test_issue_6853\", \"test_Mul\", \"test_Pow\", \"test_issue_7180\", \"test_issue_8409\", \"test_issue_7117\", \"test_issue_2934\", \"test_issue_10489\", \"test_issue_12886\", \"test_issue_13651\", \"test_latex_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_MatrixSymbol_printing\", \"test_Quaternion_latex_printing\", \"test_TensorProduct_printing\"]", "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/printing/latex.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 8fc63c2d71752389a44367b8ef4aba8a91af6a45\nMerge: b98d3c427e 7e099e9f43\nAuthor: Kalevi Suominen <jksuom@gmail.com>\nDate:   Mon Jun 4 13:58:04 2018 +0300\n\n    Merge pull request #14772 from Eight1911/master\n    \n    minor efficiency fix in _legendre\n\ndiff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex a3ead157c1..f3b7669e96 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -740,7 +740,7 @@ def _print_Function(self, expr, exp=None):\n                 len(args) == 1 and \\\n                 not self._needs_function_brackets(expr.args[0])\n \n-            inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acot\"]\n+            inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acsc\", \"asec\", \"acot\"]\n \n             # If the function is an inverse trig function, handle the style\n             if func in inv_trig_table:\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.1.2.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.1.2.dev0\n    Uninstalling sympy-1.1.2.dev0:\n      Successfully uninstalled sympy-1.1.2.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        96445200\nhash randomization: off\n\nsympy/printing/tests/test_latex.py[121] \ntest_printmethod ok\ntest_latex_basic ok\ntest_latex_builtins ok\ntest_latex_SingularityFunction ok\ntest_latex_cycle ok\ntest_latex_permutation ok\ntest_latex_Float ok\ntest_latex_vector_expressions ok\ntest_latex_symbols ok\ntest_latex_symbols_failing f\ntest_latex_functions ok\ntest_function_subclass_different_name ok\ntest_hyper_printing ok\ntest_latex_bessel ok\ntest_latex_fresnel ok\ntest_latex_brackets ok\ntest_latex_indexed ok\ntest_latex_derivatives ok\ntest_latex_subs ok\ntest_latex_integrals ok\ntest_latex_sets ok\ntest_latex_SetExpr ok\ntest_latex_Range ok\ntest_latex_sequences ok\ntest_latex_FourierSeries ok\ntest_latex_FormalPowerSeries ok\ntest_latex_intervals ok\ntest_latex_AccumuBounds ok\ntest_latex_emptyset ok\ntest_latex_commutator ok\ntest_latex_union ok\ntest_latex_symmetric_difference ok\ntest_latex_Complement ok\ntest_latex_Complexes ok\ntest_latex_productset ok\ntest_latex_Naturals ok\ntest_latex_Naturals0 ok\ntest_latex_Integers ok\ntest_latex_ImageSet ok\ntest_latex_ConditionSet ok\ntest_latex_ComplexRegion ok\ntest_latex_Contains ok\ntest_latex_sum ok\ntest_latex_product ok\ntest_latex_limits ok\ntest_latex_log ok\ntest_issue_3568 ok\ntest_latex ok\ntest_latex_dict ok\ntest_latex_list ok\ntest_latex_rational ok\ntest_latex_inverse ok\ntest_latex_DiracDelta ok\ntest_latex_Heaviside ok\ntest_latex_KroneckerDelta ok\ntest_latex_LeviCivita ok\ntest_mode ok\ntest_latex_Piecewise ok\ntest_latex_Matrix ok\ntest_latex_matrix_with_functions ok\ntest_latex_NDimArray ok\ntest_latex_mul_symbol ok\ntest_latex_issue_4381 ok\ntest_latex_issue_4576 ok\ntest_latex_pow_fraction ok\ntest_noncommutative ok\ntest_latex_order ok\ntest_latex_Lambda ok\ntest_latex_PolyElement ok\ntest_latex_FracElement ok\ntest_latex_Poly ok\ntest_latex_Poly_order ok\ntest_latex_ComplexRootOf ok\ntest_latex_RootSum ok\ntest_settings ok\ntest_latex_numbers ok\ntest_latex_euler ok\ntest_lamda ok\ntest_custom_symbol_names ok\ntest_matAdd ok\ntest_matMul ok\ntest_latex_MatrixSlice ok\ntest_latex_RandomDomain ok\ntest_PrettyPoly ok\ntest_integral_transforms ok\ntest_PolynomialRingBase ok\ntest_categories ok\ntest_Modules ok\ntest_QuotientRing ok\ntest_Tr ok\ntest_Adjoint ok\ntest_Hadamard ok\ntest_ZeroMatrix ok\ntest_boolean_args_order ok\ntest_imaginary ok\ntest_builtins_without_args ok\ntest_latex_greek_functions ok\ntest_translate ok\ntest_other_symbols ok\ntest_modifiers ok\ntest_greek_symbols ok\ntest_builtin_without_args_mismatched_names f\ntest_builtin_no_args ok\ntest_issue_6853 ok\ntest_Mul ok\ntest_Pow ok\ntest_issue_7180 ok\ntest_issue_8409 ok\ntest_issue_8470 E\ntest_issue_7117 ok\ntest_issue_2934 ok\ntest_issue_10489 ok\ntest_issue_12886 ok\ntest_issue_13559 E\ntest_issue_13651 ok\ntest_latex_UnevaluatedExpr ok\ntest_MatrixElement_printing ok\ntest_MatrixSymbol_printing ok\ntest_Quaternion_latex_printing ok\ntest_TensorProduct_printing ok\ntest_WedgeProduct_printing ok                                             [FAIL]\n\n\n________________________________________________________________________________\n______________ sympy/printing/tests/test_latex.py:test_issue_8470 ______________\n  File \"/testbed/sympy/printing/tests/test_latex.py\", line 1668, in test_issue_8470\n    e = parse_expr(\"-B*A\", evaluate=False)\n  File \"/testbed/sympy/parsing/sympy_parser.py\", line 948, in parse_expr\n    code = compile(evaluateFalse(code), '<string>', 'eval')\nValueError: Name node can't be used with 'False' constant\n________________________________________________________________________________\n_____________ sympy/printing/tests/test_latex.py:test_issue_13559 ______________\n  File \"/testbed/sympy/printing/tests/test_latex.py\", line 1701, in test_issue_13559\n    expr = parse_expr('5/1', evaluate=False)\n  File \"/testbed/sympy/parsing/sympy_parser.py\", line 948, in parse_expr\n    code = compile(evaluateFalse(code), '<string>', 'eval')\nValueError: Name node can't be used with 'False' constant\n\n tests finished: 117 passed, 2 expected to fail, 2 exceptions, in 2.28 seconds =\nDO *NOT* COMMIT!\n", {"sympy/printing/tests/test_latex.py:test_issue_8470": "FAILED", "sympy/printing/tests/test_latex.py:test_issue_13559": "FAILED", "test_printmethod": "PASSED", "test_latex_basic": "PASSED", "test_latex_builtins": "PASSED", "test_latex_SingularityFunction": "PASSED", "test_latex_cycle": "PASSED", "test_latex_permutation": "PASSED", "test_latex_Float": "PASSED", "test_latex_vector_expressions": "PASSED", "test_latex_symbols": "PASSED", "test_latex_functions": "PASSED", "test_function_subclass_different_name": "PASSED", "test_hyper_printing": "PASSED", "test_latex_bessel": "PASSED", "test_latex_fresnel": "PASSED", "test_latex_brackets": "PASSED", "test_latex_indexed": "PASSED", "test_latex_derivatives": "PASSED", "test_latex_subs": "PASSED", "test_latex_integrals": "PASSED", "test_latex_sets": "PASSED", "test_latex_SetExpr": "PASSED", "test_latex_Range": "PASSED", "test_latex_sequences": "PASSED", "test_latex_FourierSeries": "PASSED", "test_latex_FormalPowerSeries": "PASSED", "test_latex_intervals": "PASSED", "test_latex_AccumuBounds": "PASSED", "test_latex_emptyset": "PASSED", "test_latex_commutator": "PASSED", "test_latex_union": "PASSED", "test_latex_symmetric_difference": "PASSED", "test_latex_Complement": "PASSED", "test_latex_Complexes": "PASSED", "test_latex_productset": "PASSED", "test_latex_Naturals": "PASSED", "test_latex_Naturals0": "PASSED", "test_latex_Integers": "PASSED", "test_latex_ImageSet": "PASSED", "test_latex_ConditionSet": "PASSED", "test_latex_ComplexRegion": "PASSED", "test_latex_Contains": "PASSED", "test_latex_sum": "PASSED", "test_latex_product": "PASSED", "test_latex_limits": "PASSED", "test_latex_log": "PASSED", "test_issue_3568": "PASSED", "test_latex": "PASSED", "test_latex_dict": "PASSED", "test_latex_list": "PASSED", "test_latex_rational": "PASSED", "test_latex_inverse": "PASSED", "test_latex_DiracDelta": "PASSED", "test_latex_Heaviside": "PASSED", "test_latex_KroneckerDelta": "PASSED", "test_latex_LeviCivita": "PASSED", "test_mode": "PASSED", "test_latex_Piecewise": "PASSED", "test_latex_Matrix": "PASSED", "test_latex_matrix_with_functions": "PASSED", "test_latex_NDimArray": "PASSED", "test_latex_mul_symbol": "PASSED", "test_latex_issue_4381": "PASSED", "test_latex_issue_4576": "PASSED", "test_latex_pow_fraction": "PASSED", "test_noncommutative": "PASSED", "test_latex_order": "PASSED", "test_latex_Lambda": "PASSED", "test_latex_PolyElement": "PASSED", "test_latex_FracElement": "PASSED", "test_latex_Poly": "PASSED", "test_latex_Poly_order": "PASSED", "test_latex_ComplexRootOf": "PASSED", "test_latex_RootSum": "PASSED", "test_settings": "PASSED", "test_latex_numbers": "PASSED", "test_latex_euler": "PASSED", "test_lamda": "PASSED", "test_custom_symbol_names": "PASSED", "test_matAdd": "PASSED", "test_matMul": "PASSED", "test_latex_MatrixSlice": "PASSED", "test_latex_RandomDomain": "PASSED", "test_PrettyPoly": "PASSED", "test_integral_transforms": "PASSED", "test_PolynomialRingBase": "PASSED", "test_categories": "PASSED", "test_Modules": "PASSED", "test_QuotientRing": "PASSED", "test_Tr": "PASSED", "test_Adjoint": "PASSED", "test_Hadamard": "PASSED", "test_ZeroMatrix": "PASSED", "test_boolean_args_order": "PASSED", "test_imaginary": "PASSED", "test_builtins_without_args": "PASSED", "test_latex_greek_functions": "PASSED", "test_translate": "PASSED", "test_other_symbols": "PASSED", "test_modifiers": "PASSED", "test_greek_symbols": "PASSED", "test_builtin_no_args": "PASSED", "test_issue_6853": "PASSED", "test_Mul": "PASSED", "test_Pow": "PASSED", "test_issue_7180": "PASSED", "test_issue_8409": "PASSED", "test_issue_8470": "ERROR", "test_issue_7117": "PASSED", "test_issue_2934": "PASSED", "test_issue_10489": "PASSED", "test_issue_12886": "PASSED", "test_issue_13559": "ERROR", "test_issue_13651": "PASSED", "test_latex_UnevaluatedExpr": "PASSED", "test_MatrixElement_printing": "PASSED", "test_MatrixSymbol_printing": "PASSED", "test_Quaternion_latex_printing": "PASSED", "test_TensorProduct_printing": "PASSED"}]