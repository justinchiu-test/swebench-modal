[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-18621", "base_commit": "b17ef6effe278d5b861d65896cc53442a6370d8f", "patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -301,7 +301,7 @@ def blocks(self):\n         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)\n                         for j in range(len(mats))]\n                         for i in range(len(mats))]\n-        return ImmutableDenseMatrix(data)\n+        return ImmutableDenseMatrix(data, evaluate=False)\n \n     @property\n     def shape(self):\n", "test_patch": "diff --git a/sympy/matrices/expressions/tests/test_blockmatrix.py b/sympy/matrices/expressions/tests/test_blockmatrix.py\n--- a/sympy/matrices/expressions/tests/test_blockmatrix.py\n+++ b/sympy/matrices/expressions/tests/test_blockmatrix.py\n@@ -110,6 +110,10 @@ def test_issue_17624():\n     assert block_collapse(b * b) == BlockMatrix([[a**2, z], [z, z]])\n     assert block_collapse(b * b * b) == BlockMatrix([[a**3, z], [z, z]])\n \n+def test_issue_18618():\n+    A = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n+    assert A == Matrix(BlockDiagMatrix(A))\n+\n def test_BlockMatrix_trace():\n     A, B, C, D = [MatrixSymbol(s, 3, 3) for s in 'ABCD']\n     X = BlockMatrix([[A, B], [C, D]])\n", "problem_statement": "BlockDiagMatrix with one element cannot be converted to regular Matrix\nCreating a BlockDiagMatrix with one Matrix element will raise if trying to convert it back to a regular Matrix:\r\n\r\n```python\r\nM = sympy.Matrix([[1, 2], [3, 4]])\r\nD = sympy.BlockDiagMatrix(M)\r\nB = sympy.Matrix(D)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-37-5b65c1f8f23e>\", line 3, in <module>\r\n    B = sympy.Matrix(D)\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/dense.py\", line 430, in __new__\r\n    return cls._new(*args, **kwargs)\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/dense.py\", line 442, in _new\r\n    rows, cols, flat_list = cls._handle_creation_inputs(*args, **kwargs)\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/matrices.py\", line 2528, in _handle_creation_inputs\r\n    return args[0].rows, args[0].cols, args[0].as_explicit()._mat\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/expressions/matexpr.py\", line 340, in as_explicit\r\n    for i in range(self.rows)])\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/expressions/matexpr.py\", line 340, in <listcomp>\r\n    for i in range(self.rows)])\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/expressions/matexpr.py\", line 339, in <listcomp>\r\n    for j in range(self.cols)]\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/expressions/matexpr.py\", line 289, in __getitem__\r\n    return self._entry(i, j)\r\n\r\n  File \"/home/rikard/.local/lib/python3.7/site-packages/sympy/matrices/expressions/blockmatrix.py\", line 248, in _entry\r\n    return self.blocks[row_block, col_block][i, j]\r\n\r\nTypeError: 'One' object is not subscriptable\r\n```\r\n\r\nInstead having two elements will work as expected:\r\n\r\n```python\r\nM = sympy.Matrix([[1, 2], [3, 4]])\r\nD = sympy.BlockDiagMatrix(M, M)\r\nB = sympy.Matrix(D)\r\n```\r\n\r\n```\r\nMatrix([\r\n[1, 2, 0, 0],\r\n[3, 4, 0, 0],\r\n[0, 0, 1, 2],\r\n[0, 0, 3, 4]])\r\n```\r\nThis issue exists for sympy 1.5.1 but not for sympy 1.4\n", "hints_text": "```diff\r\ndiff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\r\nindex 11aebbc59f..b821c42845 100644\r\n--- a/sympy/matrices/expressions/blockmatrix.py\r\n+++ b/sympy/matrices/expressions/blockmatrix.py\r\n@@ -301,7 +301,7 @@ def blocks(self):\r\n         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)\r\n                         for j in range(len(mats))]\r\n                         for i in range(len(mats))]\r\n-        return ImmutableDenseMatrix(data)\r\n+        return ImmutableDenseMatrix(data, evaluate=False)\r\n\r\n     @property\r\n     def shape(self):\r\n```\r\n\r\nOkay, someone should do the workaround and add some tests about the issue.\ni will submit a pr today.", "created_at": "2020-02-10T05:36:30Z", "version": "1.6", "FAIL_TO_PASS": "[\"test_issue_18618\"]", "PASS_TO_PASS": "[\"test_bc_matmul\", \"test_bc_matadd\", \"test_bc_transpose\", \"test_bc_dist_diag\", \"test_block_plus_ident\", \"test_BlockMatrix\", \"test_block_collapse_explicit_matrices\", \"test_issue_17624\", \"test_BlockMatrix_trace\", \"test_BlockMatrix_Determinant\", \"test_squareBlockMatrix\", \"test_BlockDiagMatrix\", \"test_blockcut\", \"test_reblock_2x2\", \"test_deblock\"]", "environment_setup_commit": "28b41c73c12b70d6ad9f6e45109a80649c4456da"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/matrices/expressions/blockmatrix.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit b17ef6effe278d5b861d65896cc53442a6370d8f\nMerge: 928864c6cd c8d0984979\nAuthor: Chris Smith <smichr@gmail.com>\nDate:   Sun Feb 9 14:36:06 2020 -0600\n\n    Merge pull request #18597 from Smit-create/14815\n    \n    sqrt(x).is_negative returns False instead of None\n\ndiff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 11aebbc59f..b821c42845 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -301,7 +301,7 @@ def blocks(self):\n         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)\n                         for j in range(len(mats))]\n                         for i in range(len(mats))]\n-        return ImmutableDenseMatrix(data)\n+        return ImmutableDenseMatrix(data, evaluate=False)\n \n     @property\n     def shape(self):\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.6.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.6.dev0\n    Uninstalling sympy-1.6.dev0:\n      Successfully uninstalled sympy-1.6.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        64079787\nhash randomization: off\n\nsympy/matrices/expressions/tests/test_blockmatrix.py[17] \ntest_bc_matmul ok\ntest_bc_matadd ok\ntest_bc_transpose ok\ntest_bc_dist_diag ok\ntest_block_plus_ident ok\ntest_BlockMatrix ok\ntest_block_collapse_explicit_matrices ok\ntest_issue_17624 ok\ntest_issue_18618 ok\ntest_BlockMatrix_trace ok\ntest_BlockMatrix_Determinant ok\ntest_squareBlockMatrix ok\ntest_BlockDiagMatrix ok\ntest_blockcut ok\ntest_reblock_2x2 ok\ntest_deblock ok\ntest_block_collapse_type ok                                                 [OK]\n\n\n================== tests finished: 17 passed, in 0.33 seconds ==================\n", {"test_bc_matmul": "PASSED", "test_bc_matadd": "PASSED", "test_bc_transpose": "PASSED", "test_bc_dist_diag": "PASSED", "test_block_plus_ident": "PASSED", "test_BlockMatrix": "PASSED", "test_block_collapse_explicit_matrices": "PASSED", "test_issue_17624": "PASSED", "test_issue_18618": "PASSED", "test_BlockMatrix_trace": "PASSED", "test_BlockMatrix_Determinant": "PASSED", "test_squareBlockMatrix": "PASSED", "test_BlockDiagMatrix": "PASSED", "test_blockcut": "PASSED", "test_reblock_2x2": "PASSED", "test_deblock": "PASSED"}]