[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-20212", "base_commit": "a106f4782a9dbe7f8fd16030f15401d977e03ae9", "patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -291,6 +291,8 @@ def __new__(cls, b, e, evaluate=None):\n             ).warn()\n \n         if evaluate:\n+            if b is S.Zero and e is S.NegativeInfinity:\n+                return S.ComplexInfinity\n             if e is S.ComplexInfinity:\n                 return S.NaN\n             if e is S.Zero:\n", "test_patch": "diff --git a/sympy/core/tests/test_power.py b/sympy/core/tests/test_power.py\n--- a/sympy/core/tests/test_power.py\n+++ b/sympy/core/tests/test_power.py\n@@ -266,6 +266,9 @@ def test_zero():\n     assert 0**(2*x*y) == 0**(x*y)\n     assert 0**(-2*x*y) == S.ComplexInfinity**(x*y)\n \n+    #Test issue 19572\n+    assert 0 ** -oo is zoo\n+    assert power(0, -oo) is zoo\n \n def test_pow_as_base_exp():\n     x = Symbol('x')\n", "problem_statement": "0**-oo produces 0, the documentation says it should produce zoo\nUsing SymPy 1.5.1, evaluate `0**-oo` produces `0`.\r\n\r\nThe documentation for the Pow class states that it should return `ComplexInfinity`, aka `zoo`\r\n\r\n| expr | value | reason |\r\n| :-- | :-- | :--|\r\n| `0**-oo` | `zoo` | This is not strictly true, as 0**oo may be oscillating between positive and negative values or rotating in the complex plane. It is convenient, however, when the base is positive.|\r\n\n", "hints_text": "", "created_at": "2020-10-06T11:34:13Z", "version": "1.7", "FAIL_TO_PASS": "[\"test_zero\"]", "PASS_TO_PASS": "[\"test_rational\", \"test_large_rational\", \"test_negative_real\", \"test_expand\", \"test_issue_3449\", \"test_issue_3866\", \"test_negative_one\", \"test_issue_4362\", \"test_Pow_Expr_args\", \"test_Pow_signs\", \"test_power_with_noncommutative_mul_as_base\", \"test_power_rewrite_exp\", \"test_pow_as_base_exp\", \"test_nseries\", \"test_issue_6100_12942_4473\", \"test_issue_6208\", \"test_issue_6990\", \"test_issue_6068\", \"test_issue_6782\", \"test_issue_6653\", \"test_issue_6429\", \"test_issue_7638\", \"test_issue_8582\", \"test_issue_8650\", \"test_issue_13914\", \"test_better_sqrt\", \"test_issue_2993\", \"test_issue_17450\", \"test_issue_18190\", \"test_issue_14815\", \"test_issue_18509\", \"test_issue_18762\"]", "environment_setup_commit": "cffd4e0f86fefd4802349a9f9b19ed70934ea354"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/core/power.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit a106f4782a9dbe7f8fd16030f15401d977e03ae9\nMerge: 49ef62b662 c4fb61e409\nAuthor: Gagandeep Singh <singh.23@iitj.ac.in>\nDate:   Tue Oct 6 10:51:42 2020 +0530\n\n    Merge pull request #20195 from Maelstrom6/mc_communication_classes\n    \n    Added Communication Classes to Discrete Markov Chains\n\ndiff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 984398c760..85d1d2e892 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -291,6 +291,8 @@ def __new__(cls, b, e, evaluate=None):\n             ).warn()\n \n         if evaluate:\n+            if b is S.Zero and e is S.NegativeInfinity:\n+                return S.ComplexInfinity\n             if e is S.ComplexInfinity:\n                 return S.NaN\n             if e is S.Zero:\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.7.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.7.dev0\n    Uninstalling sympy-1.7.dev0:\n      Successfully uninstalled sympy-1.7.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        50992945\nhash randomization: off\n\nsympy/core/tests/test_power.py[34] \ntest_rational ok\ntest_large_rational ok\ntest_negative_real ok\ntest_expand ok\ntest_issue_3449 ok\ntest_issue_3866 ok\ntest_negative_one ok\ntest_issue_4362 ok\ntest_Pow_Expr_args ok\ntest_Pow_signs ok\ntest_power_with_noncommutative_mul_as_base ok\ntest_power_rewrite_exp ok\ntest_zero ok\ntest_pow_as_base_exp ok\ntest_nseries ok\ntest_issue_6100_12942_4473 ok\ntest_issue_6208 ok\ntest_issue_6990 ok\ntest_issue_6068 ok\ntest_issue_6782 ok\ntest_issue_6653 ok\ntest_issue_6429 ok\ntest_issue_7638 ok\ntest_issue_8582 ok\ntest_issue_8650 ok\ntest_issue_13914 ok\ntest_better_sqrt ok\ntest_issue_2993 ok\ntest_issue_17450 ok\ntest_issue_18190 ok\ntest_issue_14815 ok\ntest_issue_18509 ok\ntest_issue_18762 ok\ntest_power_dispatcher ok                                                    [OK]\n\n\n================= tests finished: 34 passed, in 19.97 seconds ==================\n", {"test_rational": "PASSED", "test_large_rational": "PASSED", "test_negative_real": "PASSED", "test_expand": "PASSED", "test_issue_3449": "PASSED", "test_issue_3866": "PASSED", "test_negative_one": "PASSED", "test_issue_4362": "PASSED", "test_Pow_Expr_args": "PASSED", "test_Pow_signs": "PASSED", "test_power_with_noncommutative_mul_as_base": "PASSED", "test_power_rewrite_exp": "PASSED", "test_zero": "PASSED", "test_pow_as_base_exp": "PASSED", "test_nseries": "PASSED", "test_issue_6100_12942_4473": "PASSED", "test_issue_6208": "PASSED", "test_issue_6990": "PASSED", "test_issue_6068": "PASSED", "test_issue_6782": "PASSED", "test_issue_6653": "PASSED", "test_issue_6429": "PASSED", "test_issue_7638": "PASSED", "test_issue_8582": "PASSED", "test_issue_8650": "PASSED", "test_issue_13914": "PASSED", "test_better_sqrt": "PASSED", "test_issue_2993": "PASSED", "test_issue_17450": "PASSED", "test_issue_18190": "PASSED", "test_issue_14815": "PASSED", "test_issue_18509": "PASSED", "test_issue_18762": "PASSED"}]