[{"repo": "pytest-dev/pytest", "instance_id": "pytest-dev__pytest-8365", "base_commit": "4964b468c83c06971eb743fbc57cc404f760c573", "patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -115,7 +115,12 @@ def getbasetemp(self) -> Path:\n             # use a sub-directory in the temproot to speed-up\n             # make_numbered_dir() call\n             rootdir = temproot.joinpath(f\"pytest-of-{user}\")\n-            rootdir.mkdir(exist_ok=True)\n+            try:\n+                rootdir.mkdir(exist_ok=True)\n+            except OSError:\n+                # getuser() likely returned illegal characters for the platform, use unknown back off mechanism\n+                rootdir = temproot.joinpath(\"pytest-of-unknown\")\n+                rootdir.mkdir(exist_ok=True)\n             basetemp = make_numbered_dir_with_cleanup(\n                 prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT\n             )\n", "test_patch": "diff --git a/testing/test_tmpdir.py b/testing/test_tmpdir.py\n--- a/testing/test_tmpdir.py\n+++ b/testing/test_tmpdir.py\n@@ -11,6 +11,7 @@\n import pytest\n from _pytest import pathlib\n from _pytest.config import Config\n+from _pytest.monkeypatch import MonkeyPatch\n from _pytest.pathlib import cleanup_numbered_dir\n from _pytest.pathlib import create_cleanup_lock\n from _pytest.pathlib import make_numbered_dir\n@@ -445,3 +446,14 @@ def test(tmp_path):\n     # running a second time and ensure we don't crash\n     result = pytester.runpytest(\"--basetemp=tmp\")\n     assert result.ret == 0\n+\n+\n+def test_tmp_path_factory_handles_invalid_dir_characters(\n+    tmp_path_factory: TempPathFactory, monkeypatch: MonkeyPatch\n+) -> None:\n+    monkeypatch.setattr(\"getpass.getuser\", lambda: \"os/<:*?;>agnostic\")\n+    # _basetemp / _given_basetemp are cached / set in parallel runs, patch them\n+    monkeypatch.setattr(tmp_path_factory, \"_basetemp\", None)\n+    monkeypatch.setattr(tmp_path_factory, \"_given_basetemp\", None)\n+    p = tmp_path_factory.getbasetemp()\n+    assert \"pytest-of-unknown\" in str(p)\n", "problem_statement": "tmpdir creation fails when the username contains illegal characters for directory names\n`tmpdir`, `tmpdir_factory` and `tmp_path_factory` rely on `getpass.getuser()` for determining the `basetemp` directory. I found that the user name returned by `getpass.getuser()` may return characters that are not allowed for directory names. This may lead to errors while creating the temporary directory.\r\n\r\nThe situation in which I reproduced this issue was while being logged in through an ssh connection into my Windows 10 x64 Enterprise version (1909) using an OpenSSH_for_Windows_7.7p1 server. In this configuration the command `python -c \"import getpass; print(getpass.getuser())\"` returns my domain username e.g. `contoso\\john_doe` instead of `john_doe` as when logged in regularly using a local session.\r\n\r\nWhen trying to create a temp directory in pytest through e.g. `tmpdir_factory.mktemp('foobar')` this fails with the following error message:\r\n```\r\nself = WindowsPath('C:/Users/john_doe/AppData/Local/Temp/pytest-of-contoso/john_doe')\r\nmode = 511, parents = False, exist_ok = True\r\n\r\n    def mkdir(self, mode=0o777, parents=False, exist_ok=False):\r\n        \"\"\"\r\n        Create a new directory at this given path.\r\n        \"\"\"\r\n        if self._closed:\r\n            self._raise_closed()\r\n        try:\r\n>           self._accessor.mkdir(self, mode)\r\nE           FileNotFoundError: [WinError 3] The system cannot find the path specified: 'C:\\\\Users\\\\john_doe\\\\AppData\\\\Local\\\\Temp\\\\pytest-of-contoso\\\\john_doe'\r\n\r\nC:\\Python38\\lib\\pathlib.py:1266: FileNotFoundError\r\n```\r\n\r\nI could also reproduce this without the complicated ssh/windows setup with pytest 6.2.2 using the following commands from a `cmd`:\r\n```bat\r\necho def test_tmpdir(tmpdir):>test_tmp.py\r\necho   pass>>test_tmp.py\r\nset LOGNAME=contoso\\john_doe\r\npy.test test_tmp.py\r\n```\r\n\r\nThanks for having a look at this!\n", "hints_text": "Thanks for the report @pborsutzki!", "created_at": "2021-02-22T20:26:35Z", "version": "6.3", "FAIL_TO_PASS": "[\"testing/test_tmpdir.py::test_tmp_path_factory_handles_invalid_dir_characters\"]", "PASS_TO_PASS": "[\"testing/test_tmpdir.py::TestTempdirHandler::test_mktemp\", \"testing/test_tmpdir.py::TestTempdirHandler::test_tmppath_relative_basetemp_absolute\", \"testing/test_tmpdir.py::test_get_user_uid_not_found\", \"testing/test_tmpdir.py::TestNumberedDir::test_make\", \"testing/test_tmpdir.py::TestNumberedDir::test_cleanup_lock_create\", \"testing/test_tmpdir.py::TestNumberedDir::test_lock_register_cleanup_removal\", \"testing/test_tmpdir.py::TestNumberedDir::test_cleanup_keep\", \"testing/test_tmpdir.py::TestNumberedDir::test_cleanup_locked\", \"testing/test_tmpdir.py::TestNumberedDir::test_cleanup_ignores_symlink\", \"testing/test_tmpdir.py::TestNumberedDir::test_removal_accepts_lock\", \"testing/test_tmpdir.py::TestRmRf::test_rm_rf\", \"testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_file\", \"testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_directory\", \"testing/test_tmpdir.py::TestRmRf::test_on_rm_rf_error\", \"testing/test_tmpdir.py::test_tmpdir_equals_tmp_path\", \"testing/test_tmpdir.py::test_tmpdir_fixture\", \"testing/test_tmpdir.py::TestConfigTmpdir::test_getbasetemp_custom_removes_old\", \"testing/test_tmpdir.py::test_mktemp[mypath-True]\", \"testing/test_tmpdir.py::test_mktemp[/mypath1-False]\", \"testing/test_tmpdir.py::test_mktemp[./mypath1-True]\", \"testing/test_tmpdir.py::test_mktemp[../mypath3-False]\", \"testing/test_tmpdir.py::test_mktemp[../../mypath4-False]\", \"testing/test_tmpdir.py::test_mktemp[mypath5/..-False]\", \"testing/test_tmpdir.py::test_mktemp[mypath6/../mypath6-True]\", \"testing/test_tmpdir.py::test_mktemp[mypath7/../mypath7/..-False]\", \"testing/test_tmpdir.py::test_tmpdir_always_is_realpath\", \"testing/test_tmpdir.py::test_tmp_path_always_is_realpath\", \"testing/test_tmpdir.py::test_tmpdir_too_long_on_parametrization\", \"testing/test_tmpdir.py::test_tmpdir_factory\", \"testing/test_tmpdir.py::test_tmpdir_fallback_tox_env\", \"testing/test_tmpdir.py::test_tmpdir_fallback_uid_not_found\", \"testing/test_tmpdir.py::test_basetemp_with_read_only_files\"]", "environment_setup_commit": "634312b14a45db8d60d72016e01294284e3a18d4"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   src/_pytest/tmpdir.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 4964b468c83c06971eb743fbc57cc404f760c573\nMerge: a44dcf5ec e6012612b\nAuthor: Ran Benita <ran@unusedvar.com>\nDate:   Sat Feb 20 17:19:54 2021 +0200\n\n    Merge pull request #8354 from feanil/patch-1\n    \n    Remove a redundant paragraph\n\ndiff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 29c7e19d7..47729ae5f 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -115,7 +115,12 @@ class TempPathFactory:\n             # use a sub-directory in the temproot to speed-up\n             # make_numbered_dir() call\n             rootdir = temproot.joinpath(f\"pytest-of-{user}\")\n-            rootdir.mkdir(exist_ok=True)\n+            try:\n+                rootdir.mkdir(exist_ok=True)\n+            except OSError:\n+                # getuser() likely returned illegal characters for the platform, use unknown back off mechanism\n+                rootdir = temproot.joinpath(\"pytest-of-unknown\")\n+                rootdir.mkdir(exist_ok=True)\n             basetemp = make_numbered_dir_with_cleanup(\n                 prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT\n             )\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: attrs>=19.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==6.3.0.dev202+g4964b468c.d20220101) (23.1.0)\nRequirement already satisfied: iniconfig in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==6.3.0.dev202+g4964b468c.d20220101) (2.0.0)\nRequirement already satisfied: packaging in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==6.3.0.dev202+g4964b468c.d20220101) (23.1)\nRequirement already satisfied: pluggy<1.0.0a1,>=0.12 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==6.3.0.dev202+g4964b468c.d20220101) (0.13.1)\nRequirement already satisfied: py>=1.8.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==6.3.0.dev202+g4964b468c.d20220101) (1.11.0)\nRequirement already satisfied: toml in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==6.3.0.dev202+g4964b468c.d20220101) (0.10.2)\nBuilding wheels for collected packages: pytest\n  Building editable for pytest (pyproject.toml): started\n  Building editable for pytest (pyproject.toml): finished with status 'done'\n  Created wheel for pytest: filename=pytest-6.3.0.dev202+g4964b468c.d20220101-0.editable-py3-none-any.whl size=5258 sha256=71ea15b8bf334e42c60d0c7f3f1ea129cd5b84d09d83e81f0dafddb762e96a18\n  Stored in directory: /tmp/pip-ephem-wheel-cache-qui3tzfq/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4\nSuccessfully built pytest\nInstalling collected packages: pytest\n  Attempting uninstall: pytest\n    Found existing installation: pytest 6.3.0.dev202+g4964b468c\n    Uninstalling pytest-6.3.0.dev202+g4964b468c:\n      Successfully uninstalled pytest-6.3.0.dev202+g4964b468c\nSuccessfully installed pytest-6.3.0.dev202+g4964b468c.d20220101\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /testbed, configfile: pyproject.toml\ncollected 34 items\n\ntesting/test_tmpdir.py ...s..............................                [100%]\n\n==================================== PASSES ====================================\n______________________ TestNumberedDir.test_cleanup_keep _______________________\n----------------------------- Captured stdout call -----------------------------\n/tmp/pytest-of-root/pytest-0/test_cleanup_keep0/fun-8 /tmp/pytest-of-root/pytest-0/test_cleanup_keep0/fun-9\n_____________________________ test_tmpdir_fixture ______________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmpdir_fixture0\ncollected 1 item\n\ntmpdir_fixture.py .                                                      [100%]\n\n============================== 1 passed in 0.01s ===============================\n_____________ TestConfigTmpdir.test_getbasetemp_custom_removes_old _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_getbasetemp_custom_removes_old0\ncollected 1 item\n\ntest_getbasetemp_custom_removes_old.py .                                 [100%]\n\n============================== 1 passed in 0.00s ===============================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_getbasetemp_custom_removes_old0\ncollected 1 item\n\ntest_getbasetemp_custom_removes_old.py .                                 [100%]\n\n============================== 1 passed in 0.01s ===============================\n___________________________ test_mktemp[mypath-True] ___________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp1\ncollected 1 item\n\ntest_mktemp.py .                                                         [100%]\n\n============================== 1 passed in 0.00s ===============================\n_________________________ test_mktemp[/mypath1-False] __________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp2\ncollected 1 item\n\ntest_mktemp.py F                                                         [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_abs_path _________________________________\n\ntmpdir_factory = TempdirFactory(_tmppath_factory=TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp2/m...acing.TagTracerSub object at 0x7f5b5ffa3250>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp2/mytemp')))\n\n    def test_abs_path(tmpdir_factory):\n>       tmpdir_factory.mktemp('/mypath1', numbered=False)\n\ntest_mktemp.py:2: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/testbed/src/_pytest/tmpdir.py:149: in mktemp\n    return py.path.local(self._tmppath_factory.mktemp(basename, numbered).resolve())\n/testbed/src/_pytest/tmpdir.py:93: in mktemp\n    basename = self._ensure_relative_to_basetemp(basename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp2/mytemp'), _trace=<pluggy._tracing.TagTracerSub object at 0x7f5b5ffa3250>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp2/mytemp'))\nbasename = '/mypath1'\n\n    def _ensure_relative_to_basetemp(self, basename: str) -> str:\n        basename = os.path.normpath(basename)\n        if (self.getbasetemp() / basename).resolve().parent != self.getbasetemp():\n>           raise ValueError(f\"{basename} is not a normalized and relative path\")\nE           ValueError: /mypath1 is not a normalized and relative path\n\n/testbed/src/_pytest/tmpdir.py:75: ValueError\n=========================== short test summary info ============================\nFAILED test_mktemp.py::test_abs_path - ValueError: /mypath1 is not a normaliz...\n============================== 1 failed in 0.02s ===============================\n_________________________ test_mktemp[./mypath1-True] __________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp3\ncollected 1 item\n\ntest_mktemp.py .                                                         [100%]\n\n============================== 1 passed in 0.01s ===============================\n________________________ test_mktemp[../mypath3-False] _________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp4\ncollected 1 item\n\ntest_mktemp.py F                                                         [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_abs_path _________________________________\n\ntmpdir_factory = TempdirFactory(_tmppath_factory=TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp4/m...acing.TagTracerSub object at 0x7f5b5ff5e2e0>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp4/mytemp')))\n\n    def test_abs_path(tmpdir_factory):\n>       tmpdir_factory.mktemp('../mypath3', numbered=False)\n\ntest_mktemp.py:2: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/testbed/src/_pytest/tmpdir.py:149: in mktemp\n    return py.path.local(self._tmppath_factory.mktemp(basename, numbered).resolve())\n/testbed/src/_pytest/tmpdir.py:93: in mktemp\n    basename = self._ensure_relative_to_basetemp(basename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp4/mytemp'), _trace=<pluggy._tracing.TagTracerSub object at 0x7f5b5ff5e2e0>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp4/mytemp'))\nbasename = '../mypath3'\n\n    def _ensure_relative_to_basetemp(self, basename: str) -> str:\n        basename = os.path.normpath(basename)\n        if (self.getbasetemp() / basename).resolve().parent != self.getbasetemp():\n>           raise ValueError(f\"{basename} is not a normalized and relative path\")\nE           ValueError: ../mypath3 is not a normalized and relative path\n\n/testbed/src/_pytest/tmpdir.py:75: ValueError\n=========================== short test summary info ============================\nFAILED test_mktemp.py::test_abs_path - ValueError: ../mypath3 is not a normal...\n============================== 1 failed in 0.01s ===============================\n_______________________ test_mktemp[../../mypath4-False] _______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp5\ncollected 1 item\n\ntest_mktemp.py F                                                         [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_abs_path _________________________________\n\ntmpdir_factory = TempdirFactory(_tmppath_factory=TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp5/m...acing.TagTracerSub object at 0x7f5b5fec9640>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp5/mytemp')))\n\n    def test_abs_path(tmpdir_factory):\n>       tmpdir_factory.mktemp('../../mypath4', numbered=False)\n\ntest_mktemp.py:2: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/testbed/src/_pytest/tmpdir.py:149: in mktemp\n    return py.path.local(self._tmppath_factory.mktemp(basename, numbered).resolve())\n/testbed/src/_pytest/tmpdir.py:93: in mktemp\n    basename = self._ensure_relative_to_basetemp(basename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp5/mytemp'), _trace=<pluggy._tracing.TagTracerSub object at 0x7f5b5fec9640>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp5/mytemp'))\nbasename = '../../mypath4'\n\n    def _ensure_relative_to_basetemp(self, basename: str) -> str:\n        basename = os.path.normpath(basename)\n        if (self.getbasetemp() / basename).resolve().parent != self.getbasetemp():\n>           raise ValueError(f\"{basename} is not a normalized and relative path\")\nE           ValueError: ../../mypath4 is not a normalized and relative path\n\n/testbed/src/_pytest/tmpdir.py:75: ValueError\n=========================== short test summary info ============================\nFAILED test_mktemp.py::test_abs_path - ValueError: ../../mypath4 is not a nor...\n============================== 1 failed in 0.01s ===============================\n________________________ test_mktemp[mypath5/..-False] _________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp6\ncollected 1 item\n\ntest_mktemp.py F                                                         [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_abs_path _________________________________\n\ntmpdir_factory = TempdirFactory(_tmppath_factory=TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp6/m...acing.TagTracerSub object at 0x7f5b5fe13c70>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp6/mytemp')))\n\n    def test_abs_path(tmpdir_factory):\n>       tmpdir_factory.mktemp('mypath5/..', numbered=False)\n\ntest_mktemp.py:2: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/testbed/src/_pytest/tmpdir.py:149: in mktemp\n    return py.path.local(self._tmppath_factory.mktemp(basename, numbered).resolve())\n/testbed/src/_pytest/tmpdir.py:93: in mktemp\n    basename = self._ensure_relative_to_basetemp(basename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp6/mytemp'), _trace=<pluggy._tracing.TagTracerSub object at 0x7f5b5fe13c70>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp6/mytemp'))\nbasename = '.'\n\n    def _ensure_relative_to_basetemp(self, basename: str) -> str:\n        basename = os.path.normpath(basename)\n        if (self.getbasetemp() / basename).resolve().parent != self.getbasetemp():\n>           raise ValueError(f\"{basename} is not a normalized and relative path\")\nE           ValueError: . is not a normalized and relative path\n\n/testbed/src/_pytest/tmpdir.py:75: ValueError\n=========================== short test summary info ============================\nFAILED test_mktemp.py::test_abs_path - ValueError: . is not a normalized and ...\n============================== 1 failed in 0.01s ===============================\n_____________________ test_mktemp[mypath6/../mypath6-True] _____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp7\ncollected 1 item\n\ntest_mktemp.py .                                                         [100%]\n\n============================== 1 passed in 0.00s ===============================\n___________________ test_mktemp[mypath7/../mypath7/..-False] ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_mktemp8\ncollected 1 item\n\ntest_mktemp.py F                                                         [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_abs_path _________________________________\n\ntmpdir_factory = TempdirFactory(_tmppath_factory=TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp8/m...acing.TagTracerSub object at 0x7f5b5fdcbb20>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp8/mytemp')))\n\n    def test_abs_path(tmpdir_factory):\n>       tmpdir_factory.mktemp('mypath7/../mypath7/..', numbered=False)\n\ntest_mktemp.py:2: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/testbed/src/_pytest/tmpdir.py:149: in mktemp\n    return py.path.local(self._tmppath_factory.mktemp(basename, numbered).resolve())\n/testbed/src/_pytest/tmpdir.py:93: in mktemp\n    basename = self._ensure_relative_to_basetemp(basename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = TempPathFactory(_given_basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp8/mytemp'), _trace=<pluggy._tracing.TagTracerSub object at 0x7f5b5fdcbb20>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-0/test_mktemp8/mytemp'))\nbasename = '.'\n\n    def _ensure_relative_to_basetemp(self, basename: str) -> str:\n        basename = os.path.normpath(basename)\n        if (self.getbasetemp() / basename).resolve().parent != self.getbasetemp():\n>           raise ValueError(f\"{basename} is not a normalized and relative path\")\nE           ValueError: . is not a normalized and relative path\n\n/testbed/src/_pytest/tmpdir.py:75: ValueError\n=========================== short test summary info ============================\nFAILED test_mktemp.py::test_abs_path - ValueError: . is not a normalized and ...\n============================== 1 failed in 0.01s ===============================\n________________________ test_tmpdir_always_is_realpath ________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmpdir_always_is_realpath0\ncollected 1 item\n\ntest_tmpdir_always_is_realpath.py .\n\n============================== 1 passed in 0.01s ===============================\n_______________________ test_tmp_path_always_is_realpath _______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmp_path_always_is_realpath0\ncollected 1 item\n\ntest_tmp_path_always_is_realpath.py .                                    [100%]\n\n============================== 1 passed in 0.01s ===============================\n___________________ test_tmpdir_too_long_on_parametrization ____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmpdir_too_long_on_parametrization0\ncollected 1 item\n\ntest_tmpdir_too_long_on_parametrization.py .                             [100%]\n\n============================== 1 passed in 0.01s ===============================\n_____________________________ test_tmpdir_factory ______________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmpdir_factory0\ncollected 1 item\n\ntest_tmpdir_factory.py .                                                 [100%]\n\n============================== 1 passed in 0.01s ===============================\n_________________________ test_tmpdir_fallback_tox_env _________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmpdir_fallback_tox_env0\ncollected 1 item\n\ntest_tmpdir_fallback_tox_env.py .                                        [100%]\n\n============================== 1 passed in 0.01s ===============================\n______________________ test_tmpdir_fallback_uid_not_found ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_tmpdir_fallback_uid_not_found0\ncollected 1 item\n\ntest_tmpdir_fallback_uid_not_found.py .                                  [100%]\n\n============================== 1 passed in 0.01s ===============================\n______________________ test_basetemp_with_read_only_files ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_basetemp_with_read_only_files0\ncollected 1 item\n\ntest_basetemp_with_read_only_files.py .                                  [100%]\n\n============================== 1 passed in 0.01s ===============================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-6.3.0.dev202+g4964b468c.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_basetemp_with_read_only_files0\ncollected 1 item\n\ntest_basetemp_with_read_only_files.py .                                  [100%]\n\n============================== 1 passed in 0.01s ===============================\n=========================== short test summary info ============================\nPASSED testing/test_tmpdir.py::TestTempdirHandler::test_mktemp\nPASSED testing/test_tmpdir.py::TestTempdirHandler::test_tmppath_relative_basetemp_absolute\nPASSED testing/test_tmpdir.py::test_get_user_uid_not_found\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_make\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_cleanup_lock_create\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_lock_register_cleanup_removal\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_cleanup_keep\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_cleanup_locked\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_cleanup_ignores_symlink\nPASSED testing/test_tmpdir.py::TestNumberedDir::test_removal_accepts_lock\nPASSED testing/test_tmpdir.py::TestRmRf::test_rm_rf\nPASSED testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_file\nPASSED testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_directory\nPASSED testing/test_tmpdir.py::TestRmRf::test_on_rm_rf_error\nPASSED testing/test_tmpdir.py::test_tmpdir_equals_tmp_path\nPASSED testing/test_tmpdir.py::test_tmp_path_factory_handles_invalid_dir_characters\nPASSED testing/test_tmpdir.py::test_tmpdir_fixture\nPASSED testing/test_tmpdir.py::TestConfigTmpdir::test_getbasetemp_custom_removes_old\nPASSED testing/test_tmpdir.py::test_mktemp[mypath-True]\nPASSED testing/test_tmpdir.py::test_mktemp[/mypath1-False]\nPASSED testing/test_tmpdir.py::test_mktemp[./mypath1-True]\nPASSED testing/test_tmpdir.py::test_mktemp[../mypath3-False]\nPASSED testing/test_tmpdir.py::test_mktemp[../../mypath4-False]\nPASSED testing/test_tmpdir.py::test_mktemp[mypath5/..-False]\nPASSED testing/test_tmpdir.py::test_mktemp[mypath6/../mypath6-True]\nPASSED testing/test_tmpdir.py::test_mktemp[mypath7/../mypath7/..-False]\nPASSED testing/test_tmpdir.py::test_tmpdir_always_is_realpath\nPASSED testing/test_tmpdir.py::test_tmp_path_always_is_realpath\nPASSED testing/test_tmpdir.py::test_tmpdir_too_long_on_parametrization\nPASSED testing/test_tmpdir.py::test_tmpdir_factory\nPASSED testing/test_tmpdir.py::test_tmpdir_fallback_tox_env\nPASSED testing/test_tmpdir.py::test_tmpdir_fallback_uid_not_found\nPASSED testing/test_tmpdir.py::test_basetemp_with_read_only_files\nSKIPPED [1] testing/test_tmpdir.py:239: win only\n======================== 33 passed, 1 skipped in 0.55s =========================\n", {"test_mktemp.py::test_abs_path": "FAILED", "testing/test_tmpdir.py::TestTempdirHandler::test_mktemp": "PASSED", "testing/test_tmpdir.py::TestTempdirHandler::test_tmppath_relative_basetemp_absolute": "PASSED", "testing/test_tmpdir.py::test_get_user_uid_not_found": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_make": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_lock_create": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_lock_register_cleanup_removal": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_keep": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_locked": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_ignores_symlink": "PASSED", "testing/test_tmpdir.py::TestNumberedDir::test_removal_accepts_lock": "PASSED", "testing/test_tmpdir.py::TestRmRf::test_rm_rf": "PASSED", "testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_file": "PASSED", "testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_directory": "PASSED", "testing/test_tmpdir.py::TestRmRf::test_on_rm_rf_error": "PASSED", "testing/test_tmpdir.py::test_tmpdir_equals_tmp_path": "PASSED", "testing/test_tmpdir.py::test_tmp_path_factory_handles_invalid_dir_characters": "PASSED", "testing/test_tmpdir.py::test_tmpdir_fixture": "PASSED", "testing/test_tmpdir.py::TestConfigTmpdir::test_getbasetemp_custom_removes_old": "PASSED", "testing/test_tmpdir.py::test_mktemp[mypath-True]": "PASSED", "testing/test_tmpdir.py::test_mktemp[/mypath1-False]": "PASSED", "testing/test_tmpdir.py::test_mktemp[./mypath1-True]": "PASSED", "testing/test_tmpdir.py::test_mktemp[../mypath3-False]": "PASSED", "testing/test_tmpdir.py::test_mktemp[../../mypath4-False]": "PASSED", "testing/test_tmpdir.py::test_mktemp[mypath5/..-False]": "PASSED", "testing/test_tmpdir.py::test_mktemp[mypath6/../mypath6-True]": "PASSED", "testing/test_tmpdir.py::test_mktemp[mypath7/../mypath7/..-False]": "PASSED", "testing/test_tmpdir.py::test_tmpdir_always_is_realpath": "PASSED", "testing/test_tmpdir.py::test_tmp_path_always_is_realpath": "PASSED", "testing/test_tmpdir.py::test_tmpdir_too_long_on_parametrization": "PASSED", "testing/test_tmpdir.py::test_tmpdir_factory": "PASSED", "testing/test_tmpdir.py::test_tmpdir_fallback_tox_env": "PASSED", "testing/test_tmpdir.py::test_tmpdir_fallback_uid_not_found": "PASSED", "testing/test_tmpdir.py::test_basetemp_with_read_only_files": "PASSED", "[1]": "SKIPPED"}]