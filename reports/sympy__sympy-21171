[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-21171", "base_commit": "aa22709cb7df2d7503803d4b2c0baa7aa21440b6", "patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1968,10 +1968,12 @@ def _print_DiracDelta(self, expr, exp=None):\n             tex = r\"\\left(%s\\right)^{%s}\" % (tex, exp)\n         return tex\n \n-    def _print_SingularityFunction(self, expr):\n+    def _print_SingularityFunction(self, expr, exp=None):\n         shift = self._print(expr.args[0] - expr.args[1])\n         power = self._print(expr.args[2])\n         tex = r\"{\\left\\langle %s \\right\\rangle}^{%s}\" % (shift, power)\n+        if exp is not None:\n+            tex = r\"{\\left({\\langle %s \\rangle}^{%s}\\right)}^{%s}\" % (shift, power, exp)\n         return tex\n \n     def _print_Heaviside(self, expr, exp=None):\n", "test_patch": "diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -214,6 +214,19 @@ def test_latex_SingularityFunction():\n     assert latex(SingularityFunction(x, 4, -1)) == \\\n         r\"{\\left\\langle x - 4 \\right\\rangle}^{-1}\"\n \n+    assert latex(SingularityFunction(x, 4, 5)**3) == \\\n+        r\"{\\left({\\langle x - 4 \\rangle}^{5}\\right)}^{3}\"\n+    assert latex(SingularityFunction(x, -3, 4)**3) == \\\n+        r\"{\\left({\\langle x + 3 \\rangle}^{4}\\right)}^{3}\"\n+    assert latex(SingularityFunction(x, 0, 4)**3) == \\\n+        r\"{\\left({\\langle x \\rangle}^{4}\\right)}^{3}\"\n+    assert latex(SingularityFunction(x, a, n)**3) == \\\n+        r\"{\\left({\\langle - a + x \\rangle}^{n}\\right)}^{3}\"\n+    assert latex(SingularityFunction(x, 4, -2)**3) == \\\n+        r\"{\\left({\\langle x - 4 \\rangle}^{-2}\\right)}^{3}\"\n+    assert latex((SingularityFunction(x, 4, -1)**3)**3) == \\\n+        r\"{\\left({\\langle x - 4 \\rangle}^{-1}\\right)}^{9}\"\n+\n \n def test_latex_cycle():\n     assert latex(Cycle(1, 2, 4)) == r\"\\left( 1\\; 2\\; 4\\right)\"\n", "problem_statement": "_print_SingularityFunction() got an unexpected keyword argument 'exp'\nOn a Jupyter Notebook cell, type the following:\r\n\r\n```python\r\nfrom sympy import *\r\nfrom sympy.physics.continuum_mechanics import Beam\r\n# Young's modulus\r\nE = symbols(\"E\")\r\n# length of the beam\r\nL = symbols(\"L\")\r\n# concentrated load at the end tip of the beam\r\nF = symbols(\"F\")\r\n# square cross section\r\nB, H = symbols(\"B, H\")\r\nI = B * H**3 / 12\r\n# numerical values (material: steel)\r\nd = {B: 1e-02, H: 1e-02, E: 210e09, L: 0.2, F: 100}\r\n\r\nb2 = Beam(L, E, I)\r\nb2.apply_load(-F, L / 2, -1)\r\nb2.apply_support(0, \"fixed\")\r\nR0, M0 = symbols(\"R_0, M_0\")\r\nb2.solve_for_reaction_loads(R0, M0)\r\n```\r\n\r\nThen:\r\n\r\n```\r\nb2.shear_force()\r\n```\r\n\r\nThe following error appears:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n/usr/local/lib/python3.8/dist-packages/IPython/core/formatters.py in __call__(self, obj)\r\n    343             method = get_real_method(obj, self.print_method)\r\n    344             if method is not None:\r\n--> 345                 return method()\r\n    346             return None\r\n    347         else:\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/interactive/printing.py in _print_latex_png(o)\r\n    184         \"\"\"\r\n    185         if _can_print(o):\r\n--> 186             s = latex(o, mode=latex_mode, **settings)\r\n    187             if latex_mode == 'plain':\r\n    188                 s = '$\\\\displaystyle %s$' % s\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in __call__(self, *args, **kwargs)\r\n    371 \r\n    372     def __call__(self, *args, **kwargs):\r\n--> 373         return self.__wrapped__(*args, **kwargs)\r\n    374 \r\n    375     @property\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in latex(expr, **settings)\r\n   2913 \r\n   2914     \"\"\"\r\n-> 2915     return LatexPrinter(settings).doprint(expr)\r\n   2916 \r\n   2917 \r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in doprint(self, expr)\r\n    252 \r\n    253     def doprint(self, expr):\r\n--> 254         tex = Printer.doprint(self, expr)\r\n    255 \r\n    256         if self._settings['mode'] == 'plain':\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in doprint(self, expr)\r\n    289     def doprint(self, expr):\r\n    290         \"\"\"Returns printer's representation for expr (as a string)\"\"\"\r\n--> 291         return self._str(self._print(expr))\r\n    292 \r\n    293     def _print(self, expr, **kwargs):\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in _print_Add(self, expr, order)\r\n    381             else:\r\n    382                 tex += \" + \"\r\n--> 383             term_tex = self._print(term)\r\n    384             if self._needs_add_brackets(term):\r\n    385                 term_tex = r\"\\left(%s\\right)\" % term_tex\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in _print_Mul(self, expr)\r\n    565             # use the original expression here, since fraction() may have\r\n    566             # altered it when producing numer and denom\r\n--> 567             tex += convert(expr)\r\n    568 \r\n    569         else:\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in convert(expr)\r\n    517                                isinstance(x.base, Quantity)))\r\n    518 \r\n--> 519                 return convert_args(args)\r\n    520 \r\n    521         def convert_args(args):\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in convert_args(args)\r\n    523 \r\n    524                 for i, term in enumerate(args):\r\n--> 525                     term_tex = self._print(term)\r\n    526 \r\n    527                     if self._needs_mul_brackets(term, first=(i == 0),\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in _print_Add(self, expr, order)\r\n    381             else:\r\n    382                 tex += \" + \"\r\n--> 383             term_tex = self._print(term)\r\n    384             if self._needs_add_brackets(term):\r\n    385                 term_tex = r\"\\left(%s\\right)\" % term_tex\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in _print_Mul(self, expr)\r\n    569         else:\r\n    570             snumer = convert(numer)\r\n--> 571             sdenom = convert(denom)\r\n    572             ldenom = len(sdenom.split())\r\n    573             ratio = self._settings['long_frac_ratio']\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in convert(expr)\r\n    505         def convert(expr):\r\n    506             if not expr.is_Mul:\r\n--> 507                 return str(self._print(expr))\r\n    508             else:\r\n    509                 if self.order not in ('old', 'none'):\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in _print_Add(self, expr, order)\r\n    381             else:\r\n    382                 tex += \" + \"\r\n--> 383             term_tex = self._print(term)\r\n    384             if self._needs_add_brackets(term):\r\n    385                 term_tex = r\"\\left(%s\\right)\" % term_tex\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/latex.py in _print_Pow(self, expr)\r\n    649         else:\r\n    650             if expr.base.is_Function:\r\n--> 651                 return self._print(expr.base, exp=self._print(expr.exp))\r\n    652             else:\r\n    653                 tex = r\"%s^{%s}\"\r\n\r\n/usr/local/lib/python3.8/dist-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)\r\n    327                 printmethod = '_print_' + cls.__name__\r\n    328                 if hasattr(self, printmethod):\r\n--> 329                     return getattr(self, printmethod)(expr, **kwargs)\r\n    330             # Unknown object, fall back to the emptyPrinter.\r\n    331             return self.emptyPrinter(expr)\r\n\r\nTypeError: _print_SingularityFunction() got an unexpected keyword argument 'exp'\r\n```\n", "hints_text": "Could you provide a fully working example? Copying and pasting your code leaves a number of non-defined variables. Thanks for the report.\n@moorepants Sorry for that, I've just updated the code in the original post.\nThis is the string printed version from `b2..shear_force()`:\r\n\r\n```\r\nOut[5]: -F*SingularityFunction(x, L/2, 0) + (F*SingularityFunction(L, 0, -1)*SingularityFunction(L, L/2, 1)/(SingularityFunction(L, 0, -1)*SingularityFunction(L, 0, 1) - SingularityFunction(L, 0, 0)**2) - F*SingularityFunction(L, 0, 0)*SingularityFunction(L, L/2, 0)/(SingularityFunction(L, 0, -1)*SingularityFunction(L, 0, 1) - SingularityFunction(L, 0, 0)**2))*SingularityFunction(x, 0, 0) + (-F*SingularityFunction(L, 0, 0)*SingularityFunction(L, L/2, 1)/(SingularityFunction(L, 0, -1)*SingularityFunction(L, 0, 1) - SingularityFunction(L, 0, 0)**2) + F*SingularityFunction(L, 0, 1)*SingularityFunction(L, L/2, 0)/(SingularityFunction(L, 0, -1)*SingularityFunction(L, 0, 1) - SingularityFunction(L, 0, 0)**2))*SingularityFunction(x, 0, -1)\r\n```\nYes works correctly if you print the string. It throws the error when you display the expression on a jupyter notebook with latex\nIt errors on this term: `SingularityFunction(L, 0, 0)**2`. For some reasons the latex printer fails on printing a singularity function raised to a power.", "created_at": "2021-03-26T07:48:35Z", "version": "1.8", "FAIL_TO_PASS": "[\"test_latex_SingularityFunction\"]", "PASS_TO_PASS": "[\"test_printmethod\", \"test_latex_basic\", \"test_latex_builtins\", \"test_latex_cycle\", \"test_latex_permutation\", \"test_latex_Float\", \"test_latex_vector_expressions\", \"test_latex_symbols\", \"test_latex_functions\", \"test_function_subclass_different_name\", \"test_hyper_printing\", \"test_latex_bessel\", \"test_latex_fresnel\", \"test_latex_brackets\", \"test_latex_indexed\", \"test_latex_derivatives\", \"test_latex_subs\", \"test_latex_integrals\", \"test_latex_sets\", \"test_latex_SetExpr\", \"test_latex_Range\", \"test_latex_sequences\", \"test_latex_FourierSeries\", \"test_latex_FormalPowerSeries\", \"test_latex_intervals\", \"test_latex_AccumuBounds\", \"test_latex_emptyset\", \"test_latex_universalset\", \"test_latex_commutator\", \"test_latex_union\", \"test_latex_intersection\", \"test_latex_symmetric_difference\", \"test_latex_Complement\", \"test_latex_productset\", \"test_set_operators_parenthesis\", \"test_latex_Complexes\", \"test_latex_Naturals\", \"test_latex_Naturals0\", \"test_latex_Integers\", \"test_latex_ImageSet\", \"test_latex_ConditionSet\", \"test_latex_ComplexRegion\", \"test_latex_Contains\", \"test_latex_sum\", \"test_latex_product\", \"test_latex_limits\", \"test_latex_log\", \"test_issue_3568\", \"test_latex\", \"test_latex_dict\", \"test_latex_list\", \"test_latex_rational\", \"test_latex_inverse\", \"test_latex_DiracDelta\", \"test_latex_Heaviside\", \"test_latex_KroneckerDelta\", \"test_latex_LeviCivita\", \"test_mode\", \"test_latex_mathieu\", \"test_latex_Piecewise\", \"test_latex_Matrix\", \"test_latex_matrix_with_functions\", \"test_latex_NDimArray\", \"test_latex_mul_symbol\", \"test_latex_issue_4381\", \"test_latex_issue_4576\", \"test_latex_pow_fraction\", \"test_noncommutative\", \"test_latex_order\", \"test_latex_Lambda\", \"test_latex_PolyElement\", \"test_latex_FracElement\", \"test_latex_Poly\", \"test_latex_Poly_order\", \"test_latex_ComplexRootOf\", \"test_latex_RootSum\", \"test_settings\", \"test_latex_numbers\", \"test_latex_euler\", \"test_lamda\", \"test_custom_symbol_names\", \"test_matAdd\", \"test_matMul\", \"test_latex_MatrixSlice\", \"test_latex_RandomDomain\", \"test_PrettyPoly\", \"test_integral_transforms\", \"test_PolynomialRingBase\", \"test_categories\", \"test_Modules\", \"test_QuotientRing\", \"test_Tr\", \"test_Adjoint\", \"test_Transpose\", \"test_Hadamard\", \"test_ElementwiseApplyFunction\", \"test_ZeroMatrix\", \"test_OneMatrix\", \"test_Identity\", \"test_boolean_args_order\", \"test_imaginary\", \"test_builtins_without_args\", \"test_latex_greek_functions\", \"test_translate\", \"test_other_symbols\", \"test_modifiers\", \"test_greek_symbols\", \"test_fancyset_symbols\", \"test_builtin_no_args\", \"test_issue_6853\", \"test_Mul\", \"test_Pow\", \"test_issue_7180\", \"test_issue_8409\", \"test_issue_8470\", \"test_issue_15439\", \"test_issue_2934\", \"test_issue_10489\", \"test_issue_12886\", \"test_issue_13559\", \"test_issue_13651\", \"test_latex_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_MatrixSymbol_printing\", \"test_KroneckerProduct_printing\", \"test_Series_printing\", \"test_TransferFunction_printing\", \"test_Parallel_printing\", \"test_Feedback_printing\", \"test_Quaternion_latex_printing\", \"test_TensorProduct_printing\", \"test_WedgeProduct_printing\", \"test_issue_9216\", \"test_latex_printer_tensor\", \"test_multiline_latex\", \"test_issue_15353\", \"test_trace\", \"test_print_basic\", \"test_MatrixSymbol_bold\", \"test_AppliedPermutation\", \"test_PermutationMatrix\", \"test_imaginary_unit\", \"test_text_re_im\", \"test_latex_diffgeom\", \"test_unit_printing\", \"test_issue_17092\", \"test_latex_decimal_separator\", \"test_Str\", \"test_latex_escape\", \"test_emptyPrinter\", \"test_global_settings\", \"test_pickleable\"]", "environment_setup_commit": "3ac1464b8840d5f8b618a654f9fbf09c452fe969"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/printing/latex.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit aa22709cb7df2d7503803d4b2c0baa7aa21440b6\nMerge: ed83ca093f 785ebfce10\nAuthor: JSS95 <52185322+JSS95@users.noreply.github.com>\nDate:   Thu Mar 25 14:38:14 2021 +0900\n\n    Merge pull request #21123 from habitzreuter/fix_docs_newline\n    \n    Add missing new line in documentation style guide\n\ndiff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 43f9e6ad8d..e9d404021e 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1968,10 +1968,12 @@ def _print_DiracDelta(self, expr, exp=None):\n             tex = r\"\\left(%s\\right)^{%s}\" % (tex, exp)\n         return tex\n \n-    def _print_SingularityFunction(self, expr):\n+    def _print_SingularityFunction(self, expr, exp=None):\n         shift = self._print(expr.args[0] - expr.args[1])\n         power = self._print(expr.args[2])\n         tex = r\"{\\left\\langle %s \\right\\rangle}^{%s}\" % (shift, power)\n+        if exp is not None:\n+            tex = r\"{\\left({\\langle %s \\rangle}^{%s}\\right)}^{%s}\" % (shift, power, exp)\n         return tex\n \n     def _print_Heaviside(self, expr, exp=None):\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.8.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.8.dev0\n    Uninstalling sympy-1.8.dev0:\n      Successfully uninstalled sympy-1.8.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        93278197\nhash randomization: off\n\nsympy/printing/tests/test_latex.py[156] \ntest_printmethod ok\ntest_latex_basic ok\ntest_latex_builtins ok\ntest_latex_SingularityFunction ok\ntest_latex_cycle ok\ntest_latex_permutation ok\ntest_latex_Float ok\ntest_latex_vector_expressions ok\ntest_latex_symbols ok\ntest_latex_symbols_failing f\ntest_latex_functions ok\ntest_function_subclass_different_name ok\ntest_hyper_printing ok\ntest_latex_bessel ok\ntest_latex_fresnel ok\ntest_latex_brackets ok\ntest_latex_indexed ok\ntest_latex_derivatives ok\ntest_latex_subs ok\ntest_latex_integrals ok\ntest_latex_sets ok\ntest_latex_SetExpr ok\ntest_latex_Range ok\ntest_latex_sequences ok\ntest_latex_FourierSeries ok\ntest_latex_FormalPowerSeries ok\ntest_latex_intervals ok\ntest_latex_AccumuBounds ok\ntest_latex_emptyset ok\ntest_latex_universalset ok\ntest_latex_commutator ok\ntest_latex_union ok\ntest_latex_intersection ok\ntest_latex_symmetric_difference ok\ntest_latex_Complement ok\ntest_latex_productset ok\ntest_set_operators_parenthesis ok\ntest_latex_Complexes ok\ntest_latex_Naturals ok\ntest_latex_Naturals0 ok\ntest_latex_Integers ok\ntest_latex_ImageSet ok\ntest_latex_ConditionSet ok\ntest_latex_ComplexRegion ok\ntest_latex_Contains ok\ntest_latex_sum ok\ntest_latex_product ok\ntest_latex_limits ok\ntest_latex_log ok\ntest_issue_3568 ok\ntest_latex ok\ntest_latex_dict ok\ntest_latex_list ok\ntest_latex_rational ok\ntest_latex_inverse ok\ntest_latex_DiracDelta ok\ntest_latex_Heaviside ok\ntest_latex_KroneckerDelta ok\ntest_latex_LeviCivita ok\ntest_mode ok\ntest_latex_mathieu ok\ntest_latex_Piecewise ok\ntest_latex_Matrix ok\ntest_latex_matrix_with_functions ok\ntest_latex_NDimArray ok\ntest_latex_mul_symbol ok\ntest_latex_issue_4381 ok\ntest_latex_issue_4576 ok\ntest_latex_pow_fraction ok\ntest_noncommutative ok\ntest_latex_order ok\ntest_latex_Lambda ok\ntest_latex_PolyElement ok\ntest_latex_FracElement ok\ntest_latex_Poly ok\ntest_latex_Poly_order ok\ntest_latex_ComplexRootOf ok\ntest_latex_RootSum ok\ntest_settings ok\ntest_latex_numbers ok\ntest_latex_euler ok\ntest_lamda ok\ntest_custom_symbol_names ok\ntest_matAdd ok\ntest_matMul ok\ntest_latex_MatrixSlice ok\ntest_latex_RandomDomain ok\ntest_PrettyPoly ok\ntest_integral_transforms ok\ntest_PolynomialRingBase ok\ntest_categories ok\ntest_Modules ok\ntest_QuotientRing ok\ntest_Tr ok\ntest_Adjoint ok\ntest_Transpose ok\ntest_Hadamard ok\ntest_ElementwiseApplyFunction ok\ntest_ZeroMatrix ok\ntest_OneMatrix ok\ntest_Identity ok\ntest_boolean_args_order ok\ntest_imaginary ok\ntest_builtins_without_args ok\ntest_latex_greek_functions ok\ntest_translate ok\ntest_other_symbols ok\ntest_modifiers ok\ntest_greek_symbols ok\ntest_fancyset_symbols ok\ntest_builtin_without_args_mismatched_names f\ntest_builtin_no_args ok\ntest_issue_6853 ok\ntest_Mul ok\ntest_Pow ok\ntest_issue_7180 ok\ntest_issue_8409 ok\ntest_issue_8470 ok\ntest_issue_15439 ok\ntest_issue_2934 ok\ntest_issue_10489 ok\ntest_issue_12886 ok\ntest_issue_13559 ok\ntest_issue_13651 ok\ntest_latex_UnevaluatedExpr ok\ntest_MatrixElement_printing ok\ntest_MatrixSymbol_printing ok\ntest_KroneckerProduct_printing ok\ntest_Series_printing ok\ntest_TransferFunction_printing ok\ntest_Parallel_printing ok\ntest_Feedback_printing ok\ntest_Quaternion_latex_printing ok\ntest_TensorProduct_printing ok\ntest_WedgeProduct_printing ok\ntest_issue_9216 ok\ntest_latex_printer_tensor ok\ntest_multiline_latex ok\ntest_issue_15353 ok\ntest_trace ok\ntest_print_basic ok\ntest_MatrixSymbol_bold ok\ntest_AppliedPermutation ok\ntest_PermutationMatrix ok\ntest_imaginary_unit ok\ntest_text_re_im ok\ntest_latex_diffgeom ok\ntest_unit_printing ok\ntest_issue_17092 ok\ntest_latex_decimal_separator ok\ntest_Str ok\ntest_latex_escape ok\ntest_emptyPrinter ok\ntest_global_settings ok\ntest_pickleable ok\ntest_printing_latex_array_expressions ok                                    [OK]\n\n\n======= tests finished: 154 passed, 2 expected to fail, in 2.50 seconds ========\n", {"test_printmethod": "PASSED", "test_latex_basic": "PASSED", "test_latex_builtins": "PASSED", "test_latex_SingularityFunction": "PASSED", "test_latex_cycle": "PASSED", "test_latex_permutation": "PASSED", "test_latex_Float": "PASSED", "test_latex_vector_expressions": "PASSED", "test_latex_symbols": "PASSED", "test_latex_functions": "PASSED", "test_function_subclass_different_name": "PASSED", "test_hyper_printing": "PASSED", "test_latex_bessel": "PASSED", "test_latex_fresnel": "PASSED", "test_latex_brackets": "PASSED", "test_latex_indexed": "PASSED", "test_latex_derivatives": "PASSED", "test_latex_subs": "PASSED", "test_latex_integrals": "PASSED", "test_latex_sets": "PASSED", "test_latex_SetExpr": "PASSED", "test_latex_Range": "PASSED", "test_latex_sequences": "PASSED", "test_latex_FourierSeries": "PASSED", "test_latex_FormalPowerSeries": "PASSED", "test_latex_intervals": "PASSED", "test_latex_AccumuBounds": "PASSED", "test_latex_emptyset": "PASSED", "test_latex_universalset": "PASSED", "test_latex_commutator": "PASSED", "test_latex_union": "PASSED", "test_latex_intersection": "PASSED", "test_latex_symmetric_difference": "PASSED", "test_latex_Complement": "PASSED", "test_latex_productset": "PASSED", "test_set_operators_parenthesis": "PASSED", "test_latex_Complexes": "PASSED", "test_latex_Naturals": "PASSED", "test_latex_Naturals0": "PASSED", "test_latex_Integers": "PASSED", "test_latex_ImageSet": "PASSED", "test_latex_ConditionSet": "PASSED", "test_latex_ComplexRegion": "PASSED", "test_latex_Contains": "PASSED", "test_latex_sum": "PASSED", "test_latex_product": "PASSED", "test_latex_limits": "PASSED", "test_latex_log": "PASSED", "test_issue_3568": "PASSED", "test_latex": "PASSED", "test_latex_dict": "PASSED", "test_latex_list": "PASSED", "test_latex_rational": "PASSED", "test_latex_inverse": "PASSED", "test_latex_DiracDelta": "PASSED", "test_latex_Heaviside": "PASSED", "test_latex_KroneckerDelta": "PASSED", "test_latex_LeviCivita": "PASSED", "test_mode": "PASSED", "test_latex_mathieu": "PASSED", "test_latex_Piecewise": "PASSED", "test_latex_Matrix": "PASSED", "test_latex_matrix_with_functions": "PASSED", "test_latex_NDimArray": "PASSED", "test_latex_mul_symbol": "PASSED", "test_latex_issue_4381": "PASSED", "test_latex_issue_4576": "PASSED", "test_latex_pow_fraction": "PASSED", "test_noncommutative": "PASSED", "test_latex_order": "PASSED", "test_latex_Lambda": "PASSED", "test_latex_PolyElement": "PASSED", "test_latex_FracElement": "PASSED", "test_latex_Poly": "PASSED", "test_latex_Poly_order": "PASSED", "test_latex_ComplexRootOf": "PASSED", "test_latex_RootSum": "PASSED", "test_settings": "PASSED", "test_latex_numbers": "PASSED", "test_latex_euler": "PASSED", "test_lamda": "PASSED", "test_custom_symbol_names": "PASSED", "test_matAdd": "PASSED", "test_matMul": "PASSED", "test_latex_MatrixSlice": "PASSED", "test_latex_RandomDomain": "PASSED", "test_PrettyPoly": "PASSED", "test_integral_transforms": "PASSED", "test_PolynomialRingBase": "PASSED", "test_categories": "PASSED", "test_Modules": "PASSED", "test_QuotientRing": "PASSED", "test_Tr": "PASSED", "test_Adjoint": "PASSED", "test_Transpose": "PASSED", "test_Hadamard": "PASSED", "test_ElementwiseApplyFunction": "PASSED", "test_ZeroMatrix": "PASSED", "test_OneMatrix": "PASSED", "test_Identity": "PASSED", "test_boolean_args_order": "PASSED", "test_imaginary": "PASSED", "test_builtins_without_args": "PASSED", "test_latex_greek_functions": "PASSED", "test_translate": "PASSED", "test_other_symbols": "PASSED", "test_modifiers": "PASSED", "test_greek_symbols": "PASSED", "test_fancyset_symbols": "PASSED", "test_builtin_no_args": "PASSED", "test_issue_6853": "PASSED", "test_Mul": "PASSED", "test_Pow": "PASSED", "test_issue_7180": "PASSED", "test_issue_8409": "PASSED", "test_issue_8470": "PASSED", "test_issue_15439": "PASSED", "test_issue_2934": "PASSED", "test_issue_10489": "PASSED", "test_issue_12886": "PASSED", "test_issue_13559": "PASSED", "test_issue_13651": "PASSED", "test_latex_UnevaluatedExpr": "PASSED", "test_MatrixElement_printing": "PASSED", "test_MatrixSymbol_printing": "PASSED", "test_KroneckerProduct_printing": "PASSED", "test_Series_printing": "PASSED", "test_TransferFunction_printing": "PASSED", "test_Parallel_printing": "PASSED", "test_Feedback_printing": "PASSED", "test_Quaternion_latex_printing": "PASSED", "test_TensorProduct_printing": "PASSED", "test_WedgeProduct_printing": "PASSED", "test_issue_9216": "PASSED", "test_latex_printer_tensor": "PASSED", "test_multiline_latex": "PASSED", "test_issue_15353": "PASSED", "test_trace": "PASSED", "test_print_basic": "PASSED", "test_MatrixSymbol_bold": "PASSED", "test_AppliedPermutation": "PASSED", "test_PermutationMatrix": "PASSED", "test_imaginary_unit": "PASSED", "test_text_re_im": "PASSED", "test_latex_diffgeom": "PASSED", "test_unit_printing": "PASSED", "test_issue_17092": "PASSED", "test_latex_decimal_separator": "PASSED", "test_Str": "PASSED", "test_latex_escape": "PASSED", "test_emptyPrinter": "PASSED", "test_global_settings": "PASSED", "test_pickleable": "PASSED"}]