[{"repo": "django/django", "instance_id": "django__django-11179", "base_commit": "19fc6376ce67d01ca37a91ef2f55ef769f50513a", "patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -277,6 +277,7 @@ def delete(self):\n             if self.can_fast_delete(instance):\n                 with transaction.mark_for_rollback_on_error():\n                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)\n+                setattr(instance, model._meta.pk.attname, None)\n                 return count, {model._meta.label: count}\n \n         with transaction.atomic(using=self.using, savepoint=False):\n", "test_patch": "diff --git a/tests/delete/tests.py b/tests/delete/tests.py\n--- a/tests/delete/tests.py\n+++ b/tests/delete/tests.py\n@@ -1,6 +1,7 @@\n from math import ceil\n \n from django.db import IntegrityError, connection, models\n+from django.db.models.deletion import Collector\n from django.db.models.sql.constants import GET_ITERATOR_CHUNK_SIZE\n from django.test import TestCase, skipIfDBFeature, skipUnlessDBFeature\n \n@@ -471,6 +472,14 @@ def test_fast_delete_qs(self):\n         self.assertEqual(User.objects.count(), 1)\n         self.assertTrue(User.objects.filter(pk=u2.pk).exists())\n \n+    def test_fast_delete_instance_set_pk_none(self):\n+        u = User.objects.create()\n+        # User can be fast-deleted.\n+        collector = Collector(using='default')\n+        self.assertTrue(collector.can_fast_delete(u))\n+        u.delete()\n+        self.assertIsNone(u.pk)\n+\n     def test_fast_delete_joined_qs(self):\n         a = Avatar.objects.create(desc='a')\n         User.objects.create(avatar=a)\n", "problem_statement": "delete() on instances of models without any dependencies doesn't clear PKs.\nDescription\n\t\nDeleting any model with no dependencies not updates the PK on the model. It should be set to None after .delete() call.\nSee Django.db.models.deletion:276-281. Should update the model line 280.\n", "hints_text": "Reproduced at 1ffddfc233e2d5139cc6ec31a4ec6ef70b10f87f. Regression in bc7dd8490b882b2cefdc7faf431dc64c532b79c9. Thanks for the report.\nRegression test.\nI have attached a simple fix which mimics what \u200bhttps://github.com/django/django/blob/master/django/db/models/deletion.py#L324-L326 does for multiple objects. I am not sure if we need \u200bhttps://github.com/django/django/blob/master/django/db/models/deletion.py#L320-L323 (the block above) because I think field_updates is only ever filled if the objects are not fast-deletable -- ie \u200bhttps://github.com/django/django/blob/master/django/db/models/deletion.py#L224 is not called due to the can_fast_delete check at the beginning of the collect function. That said, if we want to be extra \"safe\" we can just move lines 320 - 326 into an extra function and call that from the old and new location (though I do not think it is needed).", "created_at": "2019-04-05T15:54:39Z", "version": "3.0", "FAIL_TO_PASS": "[\"test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests)\"]", "PASS_TO_PASS": "[\"test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests)\", \"test_fast_delete_fk (delete.tests.FastDeleteTests)\", \"test_fast_delete_inheritance (delete.tests.FastDeleteTests)\", \"test_fast_delete_joined_qs (delete.tests.FastDeleteTests)\", \"test_fast_delete_large_batch (delete.tests.FastDeleteTests)\", \"test_fast_delete_m2m (delete.tests.FastDeleteTests)\", \"test_fast_delete_qs (delete.tests.FastDeleteTests)\", \"test_fast_delete_revm2m (delete.tests.FastDeleteTests)\", \"test_auto (delete.tests.OnDeleteTests)\", \"test_auto_nullable (delete.tests.OnDeleteTests)\", \"test_cascade (delete.tests.OnDeleteTests)\", \"test_cascade_from_child (delete.tests.OnDeleteTests)\", \"test_cascade_from_parent (delete.tests.OnDeleteTests)\", \"test_cascade_nullable (delete.tests.OnDeleteTests)\", \"test_do_nothing (delete.tests.OnDeleteTests)\", \"test_do_nothing_qscount (delete.tests.OnDeleteTests)\", \"test_inheritance_cascade_down (delete.tests.OnDeleteTests)\", \"test_inheritance_cascade_up (delete.tests.OnDeleteTests)\", \"test_o2o_setnull (delete.tests.OnDeleteTests)\", \"test_protect (delete.tests.OnDeleteTests)\", \"test_setdefault (delete.tests.OnDeleteTests)\", \"test_setdefault_none (delete.tests.OnDeleteTests)\", \"test_setnull (delete.tests.OnDeleteTests)\", \"test_setnull_from_child (delete.tests.OnDeleteTests)\", \"test_setnull_from_parent (delete.tests.OnDeleteTests)\", \"test_setvalue (delete.tests.OnDeleteTests)\", \"test_bulk (delete.tests.DeletionTests)\", \"test_can_defer_constraint_checks (delete.tests.DeletionTests)\", \"test_delete_with_keeping_parents (delete.tests.DeletionTests)\", \"test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests)\", \"test_deletion_order (delete.tests.DeletionTests)\", \"test_hidden_related (delete.tests.DeletionTests)\", \"test_instance_update (delete.tests.DeletionTests)\", \"test_large_delete (delete.tests.DeletionTests)\", \"test_large_delete_related (delete.tests.DeletionTests)\", \"test_m2m (delete.tests.DeletionTests)\", \"test_model_delete_returns_num_rows (delete.tests.DeletionTests)\", \"test_proxied_model_duplicate_queries (delete.tests.DeletionTests)\", \"test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)\", \"test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests)\"]", "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27"}, "Generating locales (this might take a while)...\n  en_US.UTF-8... done\nGeneration complete.\nOn branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/db/models/deletion.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 19fc6376ce67d01ca37a91ef2f55ef769f50513a\nAuthor: Ran Benita <ran234@gmail.com>\nDate:   Mon Apr 1 12:29:10 2019 +0300\n\n    Fixed #30304 -- Added support for the HttpOnly, SameSite, and Secure flags on language cookies.\n\ndiff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex dd368584e5..61d08ddba5 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -154,6 +154,9 @@ LANGUAGE_COOKIE_NAME = 'django_language'\n LANGUAGE_COOKIE_AGE = None\n LANGUAGE_COOKIE_DOMAIN = None\n LANGUAGE_COOKIE_PATH = '/'\n+LANGUAGE_COOKIE_SECURE = False\n+LANGUAGE_COOKIE_HTTPONLY = False\n+LANGUAGE_COOKIE_SAMESITE = None\n \n \n # If you set this to True, Django will format dates, numbers and calendars\ndiff --git a/django/views/i18n.py b/django/views/i18n.py\nindex ce5691632c..e3ef40b2fc 100644\n--- a/django/views/i18n.py\n+++ b/django/views/i18n.py\n@@ -55,6 +55,9 @@ def set_language(request):\n                 max_age=settings.LANGUAGE_COOKIE_AGE,\n                 path=settings.LANGUAGE_COOKIE_PATH,\n                 domain=settings.LANGUAGE_COOKIE_DOMAIN,\n+                secure=settings.LANGUAGE_COOKIE_SECURE,\n+                httponly=settings.LANGUAGE_COOKIE_HTTPONLY,\n+                samesite=settings.LANGUAGE_COOKIE_SAMESITE,\n             )\n     return response\n \ndiff --git a/docs/ref/settings.txt b/docs/ref/settings.txt\nindex 5c87aa5d24..ae7436696e 100644\n--- a/docs/ref/settings.txt\n+++ b/docs/ref/settings.txt\n@@ -1766,6 +1766,21 @@ permanently (via the :setting:`LANGUAGE_COOKIE_NAME` setting) and to add\n a middleware that copies the value from the old cookie to a new one and then\n deletes the old one.\n \n+.. setting:: LANGUAGE_COOKIE_HTTPONLY\n+\n+``LANGUAGE_COOKIE_HTTPONLY``\n+----------------------------\n+\n+.. versionadded:: 3.0\n+\n+Default: ``False``\n+\n+Whether to use ``HttpOnly`` flag on the language cookie. If this is set to\n+``True``, client-side JavaScript will not to be able to access the language\n+cookie.\n+\n+See :setting:`SESSION_COOKIE_HTTPONLY` for details on ``HttpOnly``.\n+\n .. setting:: LANGUAGE_COOKIE_NAME\n \n ``LANGUAGE_COOKIE_NAME``\n@@ -1800,6 +1815,33 @@ permanently (via the :setting:`LANGUAGE_COOKIE_NAME` setting), and to add\n a middleware that copies the value from the old cookie to a new one and then\n deletes the one.\n \n+.. setting:: LANGUAGE_COOKIE_SAMESITE\n+\n+``LANGUAGE_COOKIE_SAMESITE``\n+----------------------------\n+\n+.. versionadded:: 3.0\n+\n+Default: ``None``\n+\n+The value of the `SameSite`_ flag on the language cookie. This flag prevents the\n+cookie from being sent in cross-site requests.\n+\n+See :setting:`SESSION_COOKIE_SAMESITE` for details about ``SameSite``.\n+\n+.. setting:: LANGUAGE_COOKIE_SECURE\n+\n+``LANGUAGE_COOKIE_SECURE``\n+--------------------------\n+\n+.. versionadded:: 3.0\n+\n+Default: ``False``\n+\n+Whether to use a secure cookie for the language cookie. If this is set to\n+``True``, the cookie will be marked as \"secure\", which means browsers may\n+ensure that the cookie is only sent under an HTTPS connection.\n+\n .. setting:: LANGUAGES\n \n ``LANGUAGES``\n@@ -3402,8 +3444,11 @@ Globalization (``i18n``/``l10n``)\n * :setting:`LANGUAGE_CODE`\n * :setting:`LANGUAGE_COOKIE_AGE`\n * :setting:`LANGUAGE_COOKIE_DOMAIN`\n+* :setting:`LANGUAGE_COOKIE_HTTPONLY`\n * :setting:`LANGUAGE_COOKIE_NAME`\n * :setting:`LANGUAGE_COOKIE_PATH`\n+* :setting:`LANGUAGE_COOKIE_SAMESITE`\n+* :setting:`LANGUAGE_COOKIE_SECURE`\n * :setting:`LANGUAGES`\n * :setting:`LANGUAGES_BIDI`\n * :setting:`LOCALE_PATHS`\ndiff --git a/docs/releases/3.0.txt b/docs/releases/3.0.txt\nindex 11257b70be..d7ad7a8cf7 100644\n--- a/docs/releases/3.0.txt\n+++ b/docs/releases/3.0.txt\n@@ -153,7 +153,11 @@ Generic Views\n Internationalization\n ~~~~~~~~~~~~~~~~~~~~\n \n-* ...\n+* Added the :setting:`LANGUAGE_COOKIE_HTTPONLY`,\n+  :setting:`LANGUAGE_COOKIE_SAMESITE`, and :setting:`LANGUAGE_COOKIE_SECURE`\n+  settings to set the ``HttpOnly``, ``SameSite``, and ``Secure`` flags on\n+  language cookies. The default values of these settings preserve the previous\n+  behavior.\n \n Management Commands\n ~~~~~~~~~~~~~~~~~~~\ndiff --git a/docs/topics/i18n/translation.txt b/docs/topics/i18n/translation.txt\nindex 00338100f9..bafa4bdaf1 100644\n--- a/docs/topics/i18n/translation.txt\n+++ b/docs/topics/i18n/translation.txt\n@@ -1896,7 +1896,10 @@ A number of settings can be used to adjust language cookie options:\n * :setting:`LANGUAGE_COOKIE_NAME`\n * :setting:`LANGUAGE_COOKIE_AGE`\n * :setting:`LANGUAGE_COOKIE_DOMAIN`\n+* :setting:`LANGUAGE_COOKIE_HTTPONLY`\n * :setting:`LANGUAGE_COOKIE_PATH`\n+* :setting:`LANGUAGE_COOKIE_SAMESITE`\n+* :setting:`LANGUAGE_COOKIE_SECURE`\n \n Implementation notes\n ====================\ndiff --git a/tests/view_tests/tests/test_i18n.py b/tests/view_tests/tests/test_i18n.py\nindex 7b36181800..1362bc2911 100644\n--- a/tests/view_tests/tests/test_i18n.py\n+++ b/tests/view_tests/tests/test_i18n.py\n@@ -45,6 +45,9 @@ class SetLanguageTests(TestCase):\n         self.assertEqual(language_cookie['domain'], '')\n         self.assertEqual(language_cookie['path'], '/')\n         self.assertEqual(language_cookie['max-age'], '')\n+        self.assertEqual(language_cookie['httponly'], '')\n+        self.assertEqual(language_cookie['samesite'], '')\n+        self.assertEqual(language_cookie['secure'], '')\n \n     def test_setlang_unsafe_next(self):\n         \"\"\"\n@@ -175,6 +178,9 @@ class SetLanguageTests(TestCase):\n             'LANGUAGE_COOKIE_AGE': 3600 * 7 * 2,\n             'LANGUAGE_COOKIE_DOMAIN': '.example.com',\n             'LANGUAGE_COOKIE_PATH': '/test/',\n+            'LANGUAGE_COOKIE_HTTPONLY': True,\n+            'LANGUAGE_COOKIE_SAMESITE': 'Strict',\n+            'LANGUAGE_COOKIE_SECURE': True,\n         }\n         with self.settings(**test_settings):\n             post_data = {'language': 'pl', 'next': '/views/'}\n@@ -184,6 +190,9 @@ class SetLanguageTests(TestCase):\n             self.assertEqual(language_cookie['domain'], '.example.com')\n             self.assertEqual(language_cookie['path'], '/test/')\n             self.assertEqual(language_cookie['max-age'], 3600 * 7 * 2)\n+            self.assertEqual(language_cookie['httponly'], True)\n+            self.assertEqual(language_cookie['samesite'], 'Strict')\n+            self.assertEqual(language_cookie['secure'], True)\n \n     def test_setlang_decodes_http_referer_url(self):\n         \"\"\"\ndiff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 92fe4affb9..3a462f1c4c 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -277,6 +277,7 @@ class Collector:\n             if self.can_fast_delete(instance):\n                 with transaction.mark_for_rollback_on_error():\n                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)\n+                setattr(instance, model._meta.pk.attname, None)\n                 return count, {model._meta.label: count}\n \n         with transaction.atomic(using=self.using, savepoint=False):\nObtaining file:///testbed\nRequirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.0.dev20190408092606) (2024.2)\nRequirement already satisfied: sqlparse in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.0.dev20190408092606) (0.4.4)\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 3.0.dev20190408092606\n    Uninstalling Django-3.0.dev20190408092606:\n      Successfully uninstalled Django-3.0.dev20190408092606\n  Running setup.py develop for Django\nSuccessfully installed Django-3.0.dev20190408092606\nTesting against Django installed in '/testbed/django'\nImporting application delete\nSkipping setup of unused database(s): other.\nOperations to perform:\n  Synchronize unmigrated apps: auth, contenttypes, delete, messages, sessions, staticfiles\n  Apply all migrations: admin, sites\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_content_type\n    Creating table auth_permission\n    Creating table auth_group\n    Creating table auth_user\n    Creating table django_session\n    Creating table delete_r\n    Creating table delete_s\n    Creating table delete_t\n    Creating table delete_u\n    Creating table delete_rchild\n    Creating table delete_a\n    Creating table delete_m\n    Creating table delete_mr\n    Creating table delete_mrnull\n    Creating table delete_avatar\n    Creating table delete_user\n    Creating table delete_hiddenuser\n    Creating table delete_hiddenuserprofile\n    Creating table delete_m2mto\n    Creating table delete_m2mfrom\n    Creating table delete_parent\n    Creating table delete_child\n    Creating table delete_base\n    Creating table delete_reltobase\n    Running deferred SQL...\nRunning migrations:\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying sites.0001_initial... OK\n  Applying sites.0002_alter_domain_unique... OK\nSystem check identified no issues (0 silenced).\n", {}]