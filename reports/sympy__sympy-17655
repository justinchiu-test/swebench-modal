[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-17655", "base_commit": "f5e965947af2410ded92cfad987aaf45262ea434", "patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,6 +278,10 @@ def __mul__(self, factor):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n+    def __rmul__(self, factor):\n+        \"\"\"Multiply a factor by point's coordinates.\"\"\"\n+        return self.__mul__(factor)\n+\n     def __neg__(self):\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\n", "test_patch": "diff --git a/sympy/geometry/tests/test_point.py b/sympy/geometry/tests/test_point.py\n--- a/sympy/geometry/tests/test_point.py\n+++ b/sympy/geometry/tests/test_point.py\n@@ -26,7 +26,6 @@ def test_point():\n     assert p2.y == y2\n     assert (p3 + p4) == p4\n     assert (p2 - p1) == Point(y1 - x1, y2 - x2)\n-    assert p4*5 == Point(5, 5)\n     assert -p2 == Point(-y1, -y2)\n     raises(ValueError, lambda: Point(3, I))\n     raises(ValueError, lambda: Point(2*I, I))\n@@ -92,6 +91,7 @@ def test_point():\n \n     assert p4 * 5 == Point(5, 5)\n     assert p4 / 5 == Point(0.2, 0.2)\n+    assert 5 * p4 == Point(5, 5)\n \n     raises(ValueError, lambda: Point(0, 0) + 10)\n \n@@ -140,7 +140,6 @@ def test_point3D():\n     assert p2.y == y2\n     assert (p3 + p4) == p4\n     assert (p2 - p1) == Point3D(y1 - x1, y2 - x2, y3 - x3)\n-    assert p4*5 == Point3D(5, 5, 5)\n     assert -p2 == Point3D(-y1, -y2, -y3)\n \n     assert Point(34.05, sqrt(3)) == Point(Rational(681, 20), sqrt(3))\n@@ -169,6 +168,7 @@ def test_point3D():\n \n     assert p4 * 5 == Point3D(5, 5, 5)\n     assert p4 / 5 == Point3D(0.2, 0.2, 0.2)\n+    assert 5 * p4 == Point3D(5, 5, 5)\n \n     raises(ValueError, lambda: Point3D(0, 0, 0) + 10)\n \n", "problem_statement": "Unexpected exception when multiplying geometry.Point and number\n```python\r\nfrom sympy import geometry as ge\r\nimport sympy\r\n\r\npoint1 = ge.Point(0,0)\r\npoint2 = ge.Point(1,1)\r\n```\r\n\r\nThis line works fine\r\n```python\r\npoint1 + point2 * sympy.sympify(2.0)\r\n```\r\n\r\nBut when I write the same this way it raises an exception\r\n```python\r\npoint1 + sympy.sympify(2.0) * point2\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n~/.virtualenvs/test/lib/python3.6/site-packages/sympy/geometry/point.py in __add__(self, other)\r\n    219         try:\r\n--> 220             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\r\n    221         except TypeError:\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/sympy/geometry/point.py in __new__(cls, *args, **kwargs)\r\n    128                 Expecting sequence of coordinates, not `{}`'''\r\n--> 129                                        .format(func_name(coords))))\r\n    130         # A point where only `dim` is specified is initialized\r\n\r\nTypeError: \r\nExpecting sequence of coordinates, not `Mul`\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nGeometryError                             Traceback (most recent call last)\r\n<ipython-input-20-6dcbddac1ee2> in <module>\r\n----> 1 point1 + sympy.sympify(2.0)* point2\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/sympy/geometry/point.py in __add__(self, other)\r\n    220             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\r\n    221         except TypeError:\r\n--> 222             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\r\n    223 \r\n    224         coords = [simplify(a + b) for a, b in zip(s, o)]\r\n\r\nGeometryError: Don't know how to add 2.0*Point2D(1, 1) and a Point object\r\n```\r\n\r\nThe expected behaviour is, that both lines give the same result\n", "hints_text": "You can multiply a Point on the right by a scalar but not on the left. I think this would be a matter of defining `__rmul__` for Point.", "created_at": "2019-09-25T17:04:26Z", "version": "1.5", "FAIL_TO_PASS": "[\"test_point\", \"test_point3D\"]", "PASS_TO_PASS": "[\"test_Point2D\", \"test_issue_9214\", \"test_issue_11617\", \"test_transform\", \"test_concyclic_doctest_bug\", \"test_arguments\", \"test_unit\", \"test_dot\", \"test__normalize_dimension\"]", "environment_setup_commit": "70381f282f2d9d039da860e391fe51649df2779d"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/geometry/point.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit f5e965947af2410ded92cfad987aaf45262ea434\nMerge: 5b8ea7b1e7 1f88a07f34\nAuthor: Oscar Benjamin <oscar.j.benjamin@gmail.com>\nDate:   Wed Sep 25 10:51:12 2019 +0100\n\n    Merge pull request #17495 from oscargus/Sreplace\n    \n    Change S(0) to S.Zero etc\n\ndiff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 7c978c47be..ee679a556b 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,6 +278,10 @@ def __mul__(self, factor):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n+    def __rmul__(self, factor):\n+        \"\"\"Multiply a factor by point's coordinates.\"\"\"\n+        return self.__mul__(factor)\n+\n     def __neg__(self):\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.5.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.5.dev0\n    Uninstalling sympy-1.5.dev0:\n      Successfully uninstalled sympy-1.5.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        31742280\nhash randomization: off\n\nsympy/geometry/tests/test_point.py[12] \ntest_point ok\ntest_point3D ok\ntest_Point2D ok\ntest_issue_9214 ok\ntest_issue_11617 ok\ntest_transform ok\ntest_concyclic_doctest_bug ok\ntest_arguments ok\ntest_unit ok\ntest_dot ok\ntest__normalize_dimension ok\ntest_direction_cosine ok                                                    [OK]\n\n\n________________________________ slowest tests _________________________________\ntest_point - Took 10.759 seconds\n================= tests finished: 12 passed, in 11.53 seconds ==================\n", {"test_point": "PASSED", "test_point3D": "PASSED", "test_Point2D": "PASSED", "test_issue_9214": "PASSED", "test_issue_11617": "PASSED", "test_transform": "PASSED", "test_concyclic_doctest_bug": "PASSED", "test_arguments": "PASSED", "test_unit": "PASSED", "test_dot": "PASSED", "test__normalize_dimension": "PASSED"}]