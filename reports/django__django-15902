[{"repo": "django/django", "instance_id": "django__django-15902", "base_commit": "44c24bf02835323d5418512ebe8e76166739ebf8", "patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -32,6 +32,8 @@ class ManagementForm(Form):\n     as well.\n     \"\"\"\n \n+    template_name = \"django/forms/div.html\"  # RemovedInDjango50Warning.\n+\n     TOTAL_FORMS = IntegerField(widget=HiddenInput)\n     INITIAL_FORMS = IntegerField(widget=HiddenInput)\n     # MIN_NUM_FORM_COUNT and MAX_NUM_FORM_COUNT are output with the rest of the\n", "test_patch": "diff --git a/tests/forms_tests/tests/test_formsets.py b/tests/forms_tests/tests/test_formsets.py\n--- a/tests/forms_tests/tests/test_formsets.py\n+++ b/tests/forms_tests/tests/test_formsets.py\n@@ -1910,3 +1910,14 @@ def test_warning(self):\n             ChoiceFormSet = formset_factory(Choice)\n             formset = ChoiceFormSet()\n             str(formset)\n+\n+    def test_no_management_form_warning(self):\n+        \"\"\"\n+        Management forms are already rendered with the new div template.\n+        \"\"\"\n+        with isolate_lru_cache(get_default_renderer), self.settings(\n+            FORM_RENDERER=\"django.forms.renderers.DjangoTemplates\"\n+        ):\n+            ChoiceFormSet = formset_factory(Choice, formset=BaseFormSet)\n+            formset = ChoiceFormSet()\n+            str(formset.management_form)\n", "problem_statement": "\"default.html\" deprecation warning raised for ManagementForm's\nDescription\n\t\nI have a project where I never render forms with the {{ form }} expression. However, I'm still getting the new template deprecation warning because of the formset management form production, during which the template used is insignificant (only hidden inputs are produced).\nIs it worth special-casing this and avoid producing the warning for the management forms?\n", "hints_text": "Thanks for the report. I think it's worth changing. As far as I'm aware, it's quite often that management form is the only one that users render with {{ form }}. It should also be quite easy to workaround: django/forms/formsets.py diff --git a/django/forms/formsets.py b/django/forms/formsets.py index 3adbc6979a..2bea2987be 100644 a b class ManagementForm(Form): 3131 new forms via JavaScript, you should increment the count field of this form 3232 as well. 3333 \"\"\" 34 template_name = \"django/forms/div.html\" # RemovedInDjango50Warning. 3435 3536 TOTAL_FORMS = IntegerField(widget=HiddenInput) 3637 INITIAL_FORMS = IntegerField(widget=HiddenInput)", "created_at": "2022-08-02T07:35:10Z", "version": "4.2", "FAIL_TO_PASS": "[\"Management forms are already rendered with the new div template.\"]", "PASS_TO_PASS": "[\"all_valid() validates all forms, even when some are invalid.\", \"test_valid (forms_tests.tests.test_formsets.AllValidTests)\", \"is_multipart() works with an empty formset.\", \"An empty formset still calls clean()\", \"Media is available on empty formset.\", \"test_warning (forms_tests.tests.test_formsets.DeprecationTests)\", \"test_as_div (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_as_div (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)\", \"test_as_p (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)\", \"test_as_table (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)\", \"test_as_ul (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)\", \"test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A FormSet constructor takes the same arguments as Form. Create a\", \"A form that's displayed as blank may be submitted as blank.\", \"test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"FormSets have a clean() hook for doing extra validation that isn't tied\", \"A custom renderer passed to a formset_factory() is passed to all forms\", \"test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Deleting prefilled data is an error. Removing data from form fields\", \"test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"More than 1 empty form can be displayed using formset_factory's\", \"Ordering fields are allowed to be left blank. If they are left blank,\", \"test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Custom kwargs set on the formset instance are passed to the\", \"Form kwargs can be passed dynamically in a formset.\", \"Formsets call is_valid() on each form.\", \"Formset's forms use the formset's error_class.\", \"FormSet.has_changed() is True if any data is passed to its forms, even\", \"A FormSet can be prefilled with existing data by providing a list of\", \"Formset instances are iterable.\", \"A formsets without any forms evaluates as True.\", \"Formset works with SplitDateTimeField(initial=datetime.datetime.now).\", \"A valid formset should have 0 total errors.\", \"test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"If validate_max is set and max_num is less than TOTAL_FORMS in the\", \"test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"If validate_min is set and min_num is more than TOTAL_FORMS in the\", \"test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"min_num validation doesn't consider unchanged forms with initial data\", \"test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A formset's ManagementForm is validated once per FormSet.is_valid()\", \"formset_factory's can_delete argument adds a boolean \\\"delete\\\" field to\", \"test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"deleted_forms works on a valid formset even if a deleted form would\", \"If a form is filled with something and can_delete is also checked, that\", \"FormSets with ordering + deletion.\", \"formset_factory's can_order argument adds an integer field to each\", \"test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A formset has a hard limit on the number of forms instantiated.\", \"test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Can increase the built-in forms limit via a higher max_num.\", \"Can get ordered_forms from a valid formset even if a deleted form\", \"test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"max_num has no effect when extra is less than max_num.\", \"Limiting the maximum number of forms with max_num.\", \"The management form class has field names matching the constants.\", \"The management form has the correct prefix.\", \"test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"If max_num is 0 then no form is rendered at all, regardless of extra,\", \"test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"More than 1 empty form can also be displayed using formset_factory's\", \"More than 1 empty form can be displayed using min_num.\", \"The extra argument works when the formset is pre-filled with initial\", \"One form from initial and extra=3 with max_num=2 results in the one\", \"More initial forms than max_num results in all initial forms being\", \"test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"If non_form_errors() is called without calling is_valid() first,\", \"Ordering works with blank fieldsets.\", \"test_repr (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"If at least one field is filled out on a blank form, it will be\", \"A partially completed form is invalid.\", \"Just one form may be completed.\", \"test_template_name_can_be_overridden (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_absolute_max_invalid (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_absolute_max_with_max_num (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_default_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_form_kwargs_empty_form (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formset_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_html_safe (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_limited_max_forms_two (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_max_num_with_initial_data (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_max_num_zero_with_initial (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_repr (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_template_name_can_be_overridden (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\", \"test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)\"]", "environment_setup_commit": "0fbdb9784da915fce5dcc1fe82bac9b4785749e5"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/forms/formsets.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 44c24bf02835323d5418512ebe8e76166739ebf8\nAuthor: Claude Paroz <claude@2xlibre.net>\nDate:   Sat Jul 30 23:52:17 2022 +0200\n\n    Refs #25706 -- Removed inline CSS in the openlayers widget template.\n\ndiff --git a/django/contrib/gis/static/gis/css/ol3.css b/django/contrib/gis/static/gis/css/ol3.css\nindex 9c8a9f5e06..ac8f0a8ec2 100644\n--- a/django/contrib/gis/static/gis/css/ol3.css\n+++ b/django/contrib/gis/static/gis/css/ol3.css\n@@ -1,3 +1,11 @@\n+.dj_map_wrapper {\n+    position: relative;\n+    float: left;\n+}\n+html[dir=\"rtl\"] .dj_map_wrapper {\n+    float: right;\n+}\n+\n .switch-type {\n     background-repeat: no-repeat;\n     cursor: pointer;\ndiff --git a/django/contrib/gis/static/gis/js/OLMapWidget.js b/django/contrib/gis/static/gis/js/OLMapWidget.js\nindex 9dea7d05aa..839c8cd7cc 100644\n--- a/django/contrib/gis/static/gis/js/OLMapWidget.js\n+++ b/django/contrib/gis/static/gis/js/OLMapWidget.js\n@@ -61,6 +61,9 @@ class MapWidget {\n             this.options.base_layer = new ol.layer.Tile({source: new ol.source.OSM()});\n         }\n \n+        const mapContainer = document.getElementById(this.options.map_id);\n+        mapContainer.style.width = `${mapContainer.dataset.width}px`;\n+        mapContainer.style.height = `${mapContainer.dataset.height}px`;\n         this.map = this.createMap();\n         this.featureCollection = new ol.Collection();\n         this.featureOverlay = new ol.layer.Vector({\ndiff --git a/django/contrib/gis/templates/gis/openlayers.html b/django/contrib/gis/templates/gis/openlayers.html\nindex fa336469b8..bde2650ca2 100644\n--- a/django/contrib/gis/templates/gis/openlayers.html\n+++ b/django/contrib/gis/templates/gis/openlayers.html\n@@ -1,17 +1,11 @@\n {% load i18n l10n %}\n-<style type=\"text/css\">{% block map_css %}{% get_current_language_bidi as LANGUAGE_BIDI %}\n-    #{{ id }}_map { width: {{ map_width }}px; height: {{ map_height }}px; }\n-    #{{ id }}_map .aligned label { float: inherit; }\n-    #{{ id }}_div_map { position: relative; vertical-align: top; float: {{ LANGUAGE_BIDI|yesno:\"right,left\" }}; }\n-    {% if not display_raw %}#{{ id }} { display: none; }{% endif %}\n-    {% endblock %}\n-</style>\n \n-<div id=\"{{ id }}_div_map\">\n-    <div id=\"{{ id }}_map\"></div>\n+<div id=\"{{ id }}_div_map\" class=\"dj_map_wrapper\">\n+    <div id=\"{{ id }}_map\" class=\"dj_map\" data-width=\"{{ map_width }}\" data-height=\"{{ map_height }}\"></div>\n     {% if not disabled %}<span class=\"clear_features\"><a href=\"\">{% translate \"Delete all Features\" %}</a></span>{% endif %}\n     {% if display_raw %}<p>{% translate \"Debugging window (serialized value)\" %}</p>{% endif %}\n-    <textarea id=\"{{ id }}\" class=\"vSerializedField required\" cols=\"150\" rows=\"10\" name=\"{{ name }}\">{{ serialized }}</textarea>\n+    <textarea id=\"{{ id }}\" class=\"vSerializedField required\" cols=\"150\" rows=\"10\" name=\"{{ name }}\"\n+              {% if not display_raw %} hidden{% endif %}>{{ serialized }}</textarea>\n     <script>\n         {% block base_layer %}\n             var base_layer = new ol.layer.Tile({\ndiff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt\nindex 3a9a99a3c2..452aebdd6b 100644\n--- a/docs/releases/4.2.txt\n+++ b/docs/releases/4.2.txt\n@@ -63,6 +63,10 @@ Minor features\n * The :class:`~django.contrib.gis.geoip2.GeoIP2` class now supports  ``.mmdb``\n   files downloaded from DB-IP.\n \n+* The OpenLayers template widget no longer includes inline CSS (which also\n+  removes the former ``map_css`` block) to better comply with a strict Content\n+  Security Policy.\n+\n :mod:`django.contrib.messages`\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \ndiff --git a/tests/gis_tests/geoadmin/tests.py b/tests/gis_tests/geoadmin/tests.py\nindex 54b7073d69..a7e5700b49 100644\n--- a/tests/gis_tests/geoadmin/tests.py\n+++ b/tests/gis_tests/geoadmin/tests.py\n@@ -16,7 +16,7 @@ class GeoAdminTest(SimpleTestCase):\n                 output = str(form[\"point\"])\n         self.assertInHTML(\n             '<textarea id=\"id_point\" class=\"vSerializedField required\" cols=\"150\"'\n-            ' rows=\"10\" name=\"point\"></textarea>',\n+            ' rows=\"10\" name=\"point\" hidden></textarea>',\n             output,\n         )\n \n@@ -27,7 +27,7 @@ class GeoAdminTest(SimpleTestCase):\n             output = str(form[\"point\"])\n         self.assertInHTML(\n             '<textarea id=\"id_point\" class=\"vSerializedField required\" cols=\"150\"'\n-            ' rows=\"10\" name=\"point\"></textarea>',\n+            ' rows=\"10\" name=\"point\" hidden></textarea>',\n             output,\n         )\n         self.assertEqual(len(cm.records), 1)\ndiff --git a/tests/gis_tests/test_geoforms.py b/tests/gis_tests/test_geoforms.py\nindex cef88d7115..d1bc43b9da 100644\n--- a/tests/gis_tests/test_geoforms.py\n+++ b/tests/gis_tests/test_geoforms.py\n@@ -166,12 +166,12 @@ class GeometryFieldTest(SimpleTestCase):\n \n         self.assertInHTML(\n             '<textarea id=\"id_pt2\" class=\"vSerializedField required\" cols=\"150\"'\n-            ' rows=\"10\" name=\"pt2\"></textarea>',\n+            ' rows=\"10\" name=\"pt2\" hidden></textarea>',\n             output,\n         )\n         self.assertInHTML(\n             '<textarea id=\"id_pt3\" class=\"vSerializedField required\" cols=\"150\"'\n-            ' rows=\"10\" name=\"pt3\"></textarea>',\n+            ' rows=\"10\" name=\"pt3\" hidden></textarea>',\n             output,\n         )\n         # Only the invalid PNT(0) triggers an error log entry.\ndiff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex 3adbc6979a..57676428ff 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -32,6 +32,8 @@ class ManagementForm(Form):\n     as well.\n     \"\"\"\n \n+    template_name = \"django/forms/div.html\"  # RemovedInDjango50Warning.\n+\n     TOTAL_FORMS = IntegerField(widget=HiddenInput)\n     INITIAL_FORMS = IntegerField(widget=HiddenInput)\n     # MIN_NUM_FORM_COUNT and MAX_NUM_FORM_COUNT are output with the rest of the\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: asgiref>=3.5.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.2.dev20220801182949) (3.8.1)\nRequirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.2.dev20220801182949) (0.5.1)\nRequirement already satisfied: typing-extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from asgiref>=3.5.2->Django==4.2.dev20220801182949) (4.12.2)\nBuilding wheels for collected packages: Django\n  Building editable for Django (pyproject.toml): started\n  Building editable for Django (pyproject.toml): finished with status 'done'\n  Created wheel for Django: filename=Django-4.2.dev20220801182949-0.editable-py3-none-any.whl size=27122 sha256=13174b855b6b0cb9acc0a476a790c8fff5792026b58d8b9d2aeff736fa3965da\n  Stored in directory: /tmp/pip-ephem-wheel-cache-y6poomqm/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4\nSuccessfully built Django\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 4.2.dev20220801182949\n    Uninstalling Django-4.2.dev20220801182949:\n      Successfully uninstalled Django-4.2.dev20220801182949\nSuccessfully installed Django-4.2.dev20220801182949\nTesting against Django installed in '/testbed/django'\nImporting application forms_tests\nFound 157 test(s).\nSkipping setup of unused database(s): default, other.\nSystem check identified no issues (0 silenced).\n", {}]