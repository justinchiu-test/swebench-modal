[{"repo": "pytest-dev/pytest", "instance_id": "pytest-dev__pytest-5103", "base_commit": "10ca84ffc56c2dd2d9dc4bd71b7b898e083500cd", "patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -964,6 +964,8 @@ def visit_Call_35(self, call):\n         \"\"\"\n         visit `ast.Call` nodes on Python3.5 and after\n         \"\"\"\n+        if isinstance(call.func, ast.Name) and call.func.id == \"all\":\n+            return self._visit_all(call)\n         new_func, func_expl = self.visit(call.func)\n         arg_expls = []\n         new_args = []\n@@ -987,6 +989,27 @@ def visit_Call_35(self, call):\n         outer_expl = \"%s\\n{%s = %s\\n}\" % (res_expl, res_expl, expl)\n         return res, outer_expl\n \n+    def _visit_all(self, call):\n+        \"\"\"Special rewrite for the builtin all function, see #5062\"\"\"\n+        if not isinstance(call.args[0], (ast.GeneratorExp, ast.ListComp)):\n+            return\n+        gen_exp = call.args[0]\n+        assertion_module = ast.Module(\n+            body=[ast.Assert(test=gen_exp.elt, lineno=1, msg=\"\", col_offset=1)]\n+        )\n+        AssertionRewriter(module_path=None, config=None).run(assertion_module)\n+        for_loop = ast.For(\n+            iter=gen_exp.generators[0].iter,\n+            target=gen_exp.generators[0].target,\n+            body=assertion_module.body,\n+            orelse=[],\n+        )\n+        self.statements.append(for_loop)\n+        return (\n+            ast.Num(n=1),\n+            \"\",\n+        )  # Return an empty expression, all the asserts are in the for_loop\n+\n     def visit_Starred(self, starred):\n         # From Python 3.5, a Starred node can appear in a function call\n         res, expl = self.visit(starred.value)\n@@ -997,6 +1020,8 @@ def visit_Call_legacy(self, call):\n         \"\"\"\n         visit `ast.Call nodes on 3.4 and below`\n         \"\"\"\n+        if isinstance(call.func, ast.Name) and call.func.id == \"all\":\n+            return self._visit_all(call)\n         new_func, func_expl = self.visit(call.func)\n         arg_expls = []\n         new_args = []\n", "test_patch": "diff --git a/testing/test_assertrewrite.py b/testing/test_assertrewrite.py\n--- a/testing/test_assertrewrite.py\n+++ b/testing/test_assertrewrite.py\n@@ -656,6 +656,12 @@ def __repr__(self):\n         else:\n             assert lines == [\"assert 0 == 1\\n +  where 1 = \\\\n{ \\\\n~ \\\\n}.a\"]\n \n+    def test_unroll_expression(self):\n+        def f():\n+            assert all(x == 1 for x in range(10))\n+\n+        assert \"0 == 1\" in getmsg(f)\n+\n     def test_custom_repr_non_ascii(self):\n         def f():\n             class A(object):\n@@ -671,6 +677,53 @@ def __repr__(self):\n         assert \"UnicodeDecodeError\" not in msg\n         assert \"UnicodeEncodeError\" not in msg\n \n+    def test_unroll_generator(self, testdir):\n+        testdir.makepyfile(\n+            \"\"\"\n+            def check_even(num):\n+                if num % 2 == 0:\n+                    return True\n+                return False\n+\n+            def test_generator():\n+                odd_list = list(range(1,9,2))\n+                assert all(check_even(num) for num in odd_list)\"\"\"\n+        )\n+        result = testdir.runpytest()\n+        result.stdout.fnmatch_lines([\"*assert False*\", \"*where False = check_even(1)*\"])\n+\n+    def test_unroll_list_comprehension(self, testdir):\n+        testdir.makepyfile(\n+            \"\"\"\n+            def check_even(num):\n+                if num % 2 == 0:\n+                    return True\n+                return False\n+\n+            def test_list_comprehension():\n+                odd_list = list(range(1,9,2))\n+                assert all([check_even(num) for num in odd_list])\"\"\"\n+        )\n+        result = testdir.runpytest()\n+        result.stdout.fnmatch_lines([\"*assert False*\", \"*where False = check_even(1)*\"])\n+\n+    def test_for_loop(self, testdir):\n+        testdir.makepyfile(\n+            \"\"\"\n+            def check_even(num):\n+                if num % 2 == 0:\n+                    return True\n+                return False\n+\n+            def test_for_loop():\n+                odd_list = list(range(1,9,2))\n+                for num in odd_list:\n+                    assert check_even(num)\n+        \"\"\"\n+        )\n+        result = testdir.runpytest()\n+        result.stdout.fnmatch_lines([\"*assert False*\", \"*where False = check_even(1)*\"])\n+\n \n class TestRewriteOnImport(object):\n     def test_pycache_is_a_file(self, testdir):\n", "problem_statement": "Unroll the iterable for all/any calls to get better reports\nSometime I need to assert some predicate on all of an iterable, and for that the builtin functions `all`/`any` are great - but the failure messages aren't useful at all!\r\nFor example - the same test written in three ways:\r\n\r\n- A generator expression\r\n```sh                                                                                                                                                                                                                         \r\n    def test_all_even():\r\n        even_stevens = list(range(1,100,2))\r\n>       assert all(is_even(number) for number in even_stevens)\r\nE       assert False\r\nE        +  where False = all(<generator object test_all_even.<locals>.<genexpr> at 0x101f82ed0>)\r\n```\r\n- A list comprehension\r\n```sh\r\n    def test_all_even():\r\n        even_stevens = list(range(1,100,2))\r\n>       assert all([is_even(number) for number in even_stevens])\r\nE       assert False\r\nE        +  where False = all([False, False, False, False, False, False, ...])\r\n```\r\n- A for loop\r\n```sh\r\n    def test_all_even():\r\n        even_stevens = list(range(1,100,2))\r\n        for number in even_stevens:\r\n>           assert is_even(number)\r\nE           assert False\r\nE            +  where False = is_even(1)\r\n\r\ntest_all_any.py:7: AssertionError\r\n```\r\nThe only one that gives a meaningful report is the for loop - but it's way more wordy, and `all` asserts don't translate to a for loop nicely (I'll have to write a `break` or a helper function - yuck)\r\nI propose the assertion re-writer \"unrolls\" the iterator to the third form, and then uses the already existing reports.\r\n\r\n- [x] Include a detailed description of the bug or suggestion\r\n- [x] `pip list` of the virtual environment you are using\r\n```\r\nPackage        Version\r\n-------------- -------\r\natomicwrites   1.3.0  \r\nattrs          19.1.0 \r\nmore-itertools 7.0.0  \r\npip            19.0.3 \r\npluggy         0.9.0  \r\npy             1.8.0  \r\npytest         4.4.0  \r\nsetuptools     40.8.0 \r\nsix            1.12.0 \r\n```\r\n- [x] pytest and operating system versions\r\n`platform darwin -- Python 3.7.3, pytest-4.4.0, py-1.8.0, pluggy-0.9.0`\r\n- [x] Minimal example if possible\r\n\n", "hints_text": "Hello, I am new here and would be interested in working on this issue if that is possible.\n@danielx123 \r\nSure!  But I don't think this is an easy issue, since it involved the assertion rewriting - but if you're familar with Python's AST and pytest's internals feel free to pick this up.\r\nWe also have a tag \"easy\" for issues that are probably easier for starting contributors: https://github.com/pytest-dev/pytest/issues?q=is%3Aopen+is%3Aissue+label%3A%22status%3A+easy%22\nI was planning on starting a pr today, but probably won't be able to finish it until next week - @danielx123 maybe we could collaborate? ", "created_at": "2019-04-13T16:17:45Z", "version": "4.5", "FAIL_TO_PASS": "[\"testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_expression\"]", "PASS_TO_PASS": "[\"testing/test_assertrewrite.py::TestAssertionRewrite::test_place_initial_imports\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_name\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_if_hasattr_fails\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_already_has_message\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_short_circuit_evaluation\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_unary_op\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_binary_op\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop_percent\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_call\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_attribute\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_comparisons\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_len\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_reprcompare\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_raising_nonzero_in_comparison\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_formatchar\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr_non_ascii\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_plugin\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_multiline\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_tuple\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_expr\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_escape\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_messages_bytes\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_at_operator_issue1290\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_starred_with_side_effect\", \"testing/test_assertrewrite.py::TestAssertionRewrite::test_for_loop\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_a_file\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_readonly\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_zipfile\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_readonly\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_dont_write_bytecode\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_orphaned_pyc_file\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_pyc_vs_pyo\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_package\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_translate_newlines\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_package_without__init__py\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_module_imported_from_conftest\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_remember_rewritten_modules\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins\", \"testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins_env_var\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_false_for_module\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_true_for_package\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_sys_meta_path_munged\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_write_pyc\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_resources_provider_for_loader\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_is_same\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_reloads\", \"testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_get_data_support\", \"testing/test_assertrewrite.py::test_issue731\", \"testing/test_assertrewrite.py::TestIssue925::test_simple_case\", \"testing/test_assertrewrite.py::TestIssue925::test_long_case\", \"testing/test_assertrewrite.py::TestIssue925::test_many_brackets\", \"testing/test_assertrewrite.py::TestIssue2121::test_rewrite_python_files_contain_subdirs\", \"testing/test_assertrewrite.py::test_source_mtime_long_long[-1]\", \"testing/test_assertrewrite.py::test_source_mtime_long_long[1]\", \"testing/test_assertrewrite.py::test_rewrite_infinite_recursion\", \"testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_basic\", \"testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_pattern_contains_subdirectories\", \"testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_cwd_changed\"]", "environment_setup_commit": "693c3b7f61d4d32f8927a74f34ce8ac56d63958e"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   src/_pytest/assertion/rewrite.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 10ca84ffc56c2dd2d9dc4bd71b7b898e083500cd\nMerge: b4d75ad31 f9f41e69a\nAuthor: Daniel Hahler <git@thequod.de>\nDate:   Fri May 24 18:28:43 2019 +0200\n\n    Merge pull request #5119 from blueyed/reportopts-A-order\n    \n    reportopts: A: put \"Pp\" in front\n\ndiff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 2903b8995..3032130f3 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -968,6 +968,8 @@ warn_explicit(\n         \"\"\"\n         visit `ast.Call` nodes on Python3.5 and after\n         \"\"\"\n+        if isinstance(call.func, ast.Name) and call.func.id == \"all\":\n+            return self._visit_all(call)\n         new_func, func_expl = self.visit(call.func)\n         arg_expls = []\n         new_args = []\n@@ -991,6 +993,27 @@ warn_explicit(\n         outer_expl = \"%s\\n{%s = %s\\n}\" % (res_expl, res_expl, expl)\n         return res, outer_expl\n \n+    def _visit_all(self, call):\n+        \"\"\"Special rewrite for the builtin all function, see #5062\"\"\"\n+        if not isinstance(call.args[0], (ast.GeneratorExp, ast.ListComp)):\n+            return\n+        gen_exp = call.args[0]\n+        assertion_module = ast.Module(\n+            body=[ast.Assert(test=gen_exp.elt, lineno=1, msg=\"\", col_offset=1)]\n+        )\n+        AssertionRewriter(module_path=None, config=None).run(assertion_module)\n+        for_loop = ast.For(\n+            iter=gen_exp.generators[0].iter,\n+            target=gen_exp.generators[0].target,\n+            body=assertion_module.body,\n+            orelse=[],\n+        )\n+        self.statements.append(for_loop)\n+        return (\n+            ast.Num(n=1),\n+            \"\",\n+        )  # Return an empty expression, all the asserts are in the for_loop\n+\n     def visit_Starred(self, starred):\n         # From Python 3.5, a Starred node can appear in a function call\n         res, expl = self.visit(starred.value)\n@@ -1001,6 +1024,8 @@ warn_explicit(\n         \"\"\"\n         visit `ast.Call nodes on 3.4 and below`\n         \"\"\"\n+        if isinstance(call.func, ast.Name) and call.func.id == \"all\":\n+            return self._visit_all(call)\n         new_func, func_expl = self.visit(call.func)\n         arg_expls = []\n         new_args = []\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: py>=1.5.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (1.11.0)\nRequirement already satisfied: six>=1.10.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (1.16.0)\nRequirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (68.0.0)\nRequirement already satisfied: attrs>=17.4.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (23.1.0)\nRequirement already satisfied: atomicwrites>=1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (1.4.1)\nRequirement already satisfied: pluggy!=0.10,<1.0,>=0.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (0.11.0)\nRequirement already satisfied: wcwidth in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (0.2.6)\nRequirement already satisfied: more-itertools>=4.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.5.1.dev40+g10ca84ffc.d20220101) (10.1.0)\nBuilding wheels for collected packages: pytest\n  Building editable for pytest (pyproject.toml): started\n  Building editable for pytest (pyproject.toml): finished with status 'done'\n  Created wheel for pytest: filename=pytest-4.5.1.dev40+g10ca84ffc.d20220101-0.editable-py2.py3-none-any.whl size=4984 sha256=6fbf899c35299ce4b3153af5dff435f11c753ec9cd8d39ea0aa093460a7a57ea\n  Stored in directory: /tmp/pip-ephem-wheel-cache-judwgahh/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4\nSuccessfully built pytest\nInstalling collected packages: pytest\n  Attempting uninstall: pytest\n    Found existing installation: pytest 4.5.1.dev40+g10ca84ffc\n    Uninstalling pytest-4.5.1.dev40+g10ca84ffc:\n      Successfully uninstalled pytest-4.5.1.dev40+g10ca84ffc\nSuccessfully installed pytest-4.5.1.dev40+g10ca84ffc.d20220101\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /testbed, inifile: tox.ini\ncollected 72 items\n\ntesting/test_assertrewrite.py ..............................FF.......... [ 58%]\n......s..ssss.................                                           [100%]\n\n=================================== FAILURES ===================================\n__________________ TestAssertionRewrite.test_unroll_generator __________________\n\nself = <test_assertrewrite.TestAssertionRewrite object at 0x7eeaddb857f0>\ntestdir = <Testdir local('/tmp/pytest-of-root/pytest-1/test_unroll_generator0')>\n\n    def test_unroll_generator(self, testdir):\n        testdir.makepyfile(\n            \"\"\"\n            def check_even(num):\n                if num % 2 == 0:\n                    return True\n                return False\n    \n            def test_generator():\n                odd_list = list(range(1,9,2))\n                assert all(check_even(num) for num in odd_list)\"\"\"\n        )\n        result = testdir.runpytest()\n>       result.stdout.fnmatch_lines([\"*assert False*\", \"*where False = check_even(1)*\"])\nE       Failed: nomatch: '*assert False*'\nE           and: '============================= test session starts =============================='\nE           and: 'platform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0'\nE           and: 'rootdir: /tmp/pytest-of-root/pytest-1/test_unroll_generator0'\nE           and: 'collected 1 item'\nE           and: ''\nE           and: 'test_unroll_generator.py F                                               [100%]'\nE           and: ''\nE           and: '=================================== FAILURES ==================================='\nE           and: '________________________________ test_generator ________________________________'\nE           and: ''\nE           and: '    def test_generator():'\nE           and: '        odd_list = list(range(1,9,2))'\nE           and: '>       assert all(check_even(num) for num in odd_list)'\nE           and: 'E       AssertionError'\nE           and: ''\nE           and: 'test_unroll_generator.py:8: AssertionError'\nE           and: '=========================== 1 failed in 0.02 seconds ==========================='\nE           and: ''\nE       remains unmatched: '*assert False*'\n\n/testbed/testing/test_assertrewrite.py:693: Failed\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_unroll_generator0\ncollected 1 item\n\ntest_unroll_generator.py F                                               [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_generator ________________________________\n\n    def test_generator():\n        odd_list = list(range(1,9,2))\n>       assert all(check_even(num) for num in odd_list)\nE       AssertionError\n\ntest_unroll_generator.py:8: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n_____________ TestAssertionRewrite.test_unroll_list_comprehension ______________\n\nself = <test_assertrewrite.TestAssertionRewrite object at 0x7eeaddb75340>\ntestdir = <Testdir local('/tmp/pytest-of-root/pytest-1/test_unroll_list_comprehension0')>\n\n    def test_unroll_list_comprehension(self, testdir):\n        testdir.makepyfile(\n            \"\"\"\n            def check_even(num):\n                if num % 2 == 0:\n                    return True\n                return False\n    \n            def test_list_comprehension():\n                odd_list = list(range(1,9,2))\n                assert all([check_even(num) for num in odd_list])\"\"\"\n        )\n        result = testdir.runpytest()\n>       result.stdout.fnmatch_lines([\"*assert False*\", \"*where False = check_even(1)*\"])\nE       Failed: nomatch: '*assert False*'\nE           and: '============================= test session starts =============================='\nE           and: 'platform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0'\nE           and: 'rootdir: /tmp/pytest-of-root/pytest-1/test_unroll_list_comprehension0'\nE           and: 'collected 1 item'\nE           and: ''\nE           and: 'test_unroll_list_comprehension.py F                                      [100%]'\nE           and: ''\nE           and: '=================================== FAILURES ==================================='\nE           and: '___________________________ test_list_comprehension ____________________________'\nE           and: ''\nE           and: '    def test_list_comprehension():'\nE           and: '        odd_list = list(range(1,9,2))'\nE           and: '>       assert all([check_even(num) for num in odd_list])'\nE           and: 'E       AssertionError'\nE           and: ''\nE           and: 'test_unroll_list_comprehension.py:8: AssertionError'\nE           and: '=========================== 1 failed in 0.01 seconds ==========================='\nE           and: ''\nE       remains unmatched: '*assert False*'\n\n/testbed/testing/test_assertrewrite.py:708: Failed\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_unroll_list_comprehension0\ncollected 1 item\n\ntest_unroll_list_comprehension.py F                                      [100%]\n\n=================================== FAILURES ===================================\n___________________________ test_list_comprehension ____________________________\n\n    def test_list_comprehension():\n        odd_list = list(range(1,9,2))\n>       assert all([check_even(num) for num in odd_list])\nE       AssertionError\n\ntest_unroll_list_comprehension.py:8: AssertionError\n=========================== 1 failed in 0.01 seconds ===========================\n==================================== PASSES ====================================\n________________ TestAssertionRewrite.test_dont_rewrite_plugin _________________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_dont_rewrite_plugin0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_dont_rewrite_plugin0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_dont_rewrite_plugin0\ncollected 1 item\n\ntest_foo.py .                                                            [100%]\n\n=========================== 1 passed in 0.03 seconds ===========================\n_________________ TestAssertionRewrite.test_assertion_message __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_assertion_message0\ncollected 1 item\n\ntest_assertion_message.py F                                              [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\n\n    def test_foo():\n>       assert 1 == 2, \"The failure message\"\nE       AssertionError: The failure message\nE       assert 1 == 2\n\ntest_assertion_message.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n____________ TestAssertionRewrite.test_assertion_message_multiline _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_assertion_message_multiline0\ncollected 1 item\n\ntest_assertion_message_multiline.py F                                    [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\n\n    def test_foo():\n>       assert 1 == 2, \"A multiline\\nfailure message\"\nE       AssertionError: A multiline\nE         failure message\nE       assert 1 == 2\n\ntest_assertion_message_multiline.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n______________ TestAssertionRewrite.test_assertion_message_tuple _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_assertion_message_tuple0\ncollected 1 item\n\ntest_assertion_message_tuple.py F                                        [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\n\n    def test_foo():\n>       assert 1 == 2, (1, 2)\nE       AssertionError: (1, 2)\nE       assert 1 == 2\n\ntest_assertion_message_tuple.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n_______________ TestAssertionRewrite.test_assertion_message_expr _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_assertion_message_expr0\ncollected 1 item\n\ntest_assertion_message_expr.py F                                         [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\n\n    def test_foo():\n>       assert 1 == 2, 1 + 2\nE       AssertionError: 3\nE       assert 1 == 2\n\ntest_assertion_message_expr.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n______________ TestAssertionRewrite.test_assertion_message_escape ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_assertion_message_escape0\ncollected 1 item\n\ntest_assertion_message_escape.py F                                       [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\n\n    def test_foo():\n>       assert 1 == 2, 'To be escaped: %'\nE       AssertionError: To be escaped: %\nE       assert 1 == 2\n\ntest_assertion_message_escape.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n______________ TestAssertionRewrite.test_assertion_messages_bytes ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_assertion_messages_bytes0\ncollected 1 item\n\ntest_assertion_messages_bytes.py F                                       [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_bytes_assertion _____________________________\n\n    def test_bytes_assertion():\n>       assert False, b'ohai!'\nE       AssertionError: b'ohai!'\nE       assert False\n\ntest_assertion_messages_bytes.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n_______________ TestAssertionRewrite.test_at_operator_issue1290 ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_at_operator_issue12900\ncollected 1 item\n\ntest_at_operator_issue1290.py .                                          [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n______________ TestAssertionRewrite.test_starred_with_side_effect ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_starred_with_side_effect0\ncollected 1 item\n\ntest_starred_with_side_effect.py .                                       [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n______________________ TestAssertionRewrite.test_for_loop ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_for_loop0\ncollected 1 item\n\ntest_for_loop.py F                                                       [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_for_loop _________________________________\n\n    def test_for_loop():\n        odd_list = list(range(1,9,2))\n        for num in odd_list:\n>           assert check_even(num)\nE           assert False\nE            +  where False = check_even(1)\n\ntest_for_loop.py:9: AssertionError\n=========================== 1 failed in 0.01 seconds ===========================\n__________________ TestRewriteOnImport.test_pycache_is_a_file __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_pycache_is_a_file0\ncollected 1 item\n\ntest_pycache_is_a_file.py .                                              [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n_________________ TestRewriteOnImport.test_pycache_is_readonly _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_pycache_is_readonly0\ncollected 1 item\n\ntest_pycache_is_readonly.py .                                            [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_______________________ TestRewriteOnImport.test_zipfile _______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_zipfile0\ncollected 0 items\n\n========================= no tests ran in 0.02 seconds =========================\n______________________ TestRewriteOnImport.test_readonly _______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_readonly0\ncollected 1 item\n\ntesting/test_readonly.py .                                               [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_________________ TestRewriteOnImport.test_dont_write_bytecode _________________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_dont_write_bytecode0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_dont_write_bytecode0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_dont_write_bytecode0\ncollected 1 item\n\ntest_dont_write_bytecode.py .                                            [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n__________________ TestRewriteOnImport.test_orphaned_pyc_file __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_orphaned_pyc_file0\ncollected 1 item\n\ntest_orphaned_pyc_file.py .                                              [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_____________________ TestRewriteOnImport.test_pyc_vs_pyo ______________________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0/runpytest-1 --basetemp=/tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0\ncollected 1 item\n\ntest_pyc_vs_pyo.py .                                                     [100%]\n\n=========================== 1 passed in 0.03 seconds ===========================\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0/runpytest-2 --basetemp=/tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_pyc_vs_pyo0\ncollected 1 item\n\ntest_pyc_vs_pyo.py F                                                     [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_optimized ________________________________\n\n    def test_optimized():\n        \"hello\"\n>       assert test_optimized.__doc__ is None\nE       AssertionError: assert 'hello' is None\nE        +  where 'hello' = test_optimized.__doc__\n\ntest_pyc_vs_pyo.py:4: AssertionError\n=========================== 1 failed in 0.03 seconds ===========================\n----------------------------- Captured stderr call -----------------------------\nWARNING: assertions not in test modules or plugins will be ignored because assert statements are not executed by the underlying Python interpreter (are you using python -O?)\n_______________________ TestRewriteOnImport.test_package _______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_package0\ncollected 1 item\n\npkg/test_blah.py .                                                       [100%]\n\n=========================== 1 passed in 0.04 seconds ===========================\n_________________ TestRewriteOnImport.test_translate_newlines __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_translate_newlines0\ncollected 1 item\n\ntest_newlines.py .                                                       [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n______________ TestRewriteOnImport.test_package_without__init__py ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_package_without__init__py0\ncollected 0 items\n\n========================= no tests ran in 0.01 seconds =========================\n___________________ TestRewriteOnImport.test_rewrite_warning ___________________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_rewrite_warning0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_rewrite_warning0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_rewrite_warning0\ncollected 0 items\n\n=============================== warnings summary ===============================\nconftest.py:2\n  /tmp/pytest-of-root/pytest-1/test_rewrite_warning0/conftest.py:2: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: _pytest\n    pytest.register_assert_rewrite(\"_pytest\")\n\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\n========================== 1 warnings in 0.01 seconds ==========================\n________ TestRewriteOnImport.test_rewrite_module_imported_from_conftest ________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_rewrite_module_imported_from_conftest0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_rewrite_module_imported_from_conftest0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_rewrite_module_imported_from_conftest0\ncollected 1 item\n\ntest_rewrite_module_imported.py .                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n________ TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins _________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_rewrite_warning_using_pytest_plugins0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_rewrite_warning_using_pytest_plugins0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_rewrite_warning_using_pytest_plugins0\ncollected 1 item\n\ntest_rewrite_warning_pytest_plugins.py .                                 [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n____ TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins_env_var _____\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_rewrite_warning_using_pytest_plugins_env_var0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_rewrite_warning_using_pytest_plugins_env_var0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_rewrite_warning_using_pytest_plugins_env_var0\ncollected 1 item\n\ntest_rewrite_warning_using_pytest_plugins_env_var.py .                   [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___ TestAssertionRewriteHookDetails.test_loader_is_package_false_for_module ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_loader_is_package_false_for_module0\ncollected 1 item\n\ntest_fun.py .                                                            [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___ TestAssertionRewriteHookDetails.test_loader_is_package_true_for_package ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_loader_is_package_true_for_package0\ncollected 3 items\n\ntest_fun.py ...                                                          [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n__________ TestAssertionRewriteHookDetails.test_sys_meta_path_munged ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_sys_meta_path_munged0\ncollected 1 item\n\ntest_sys_meta_path_munged.py .                                           [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n______ TestAssertionRewriteHookDetails.test_resources_provider_for_loader ______\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-1/test_resources_provider_for_loader0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-1/test_resources_provider_for_loader0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_resources_provider_for_loader0\ncollected 1 item\n\ntestpkg/test_pkg.py .                                                    [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n_____________ TestAssertionRewriteHookDetails.test_reload_is_same ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_reload_is_same0, inifile: pytest.ini\ncollected 1 item\n\ntest_fun.py .\n\n=========================== 1 passed in 0.02 seconds ===========================\n_____________ TestAssertionRewriteHookDetails.test_reload_reloads ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_reload_reloads0, inifile: pytest.ini\ncollected 1 item\n\ntest_fun.py .\n\n=========================== 1 passed in 0.02 seconds ===========================\n____________ TestAssertionRewriteHookDetails.test_get_data_support _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_get_data_support0\ncollected 1 item\n\nfoo/test_foo.py .                                                        [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n________________________________ test_issue731 _________________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_issue7310\ncollected 1 item\n\ntest_issue731.py F                                                       [100%]\n\n=================================== FAILURES ===================================\n________________________________ test_long_repr ________________________________\n\n    def test_long_repr():\n        obj = LongReprWithBraces()\n>       assert obj.some_method()\nE       assert False\nE        +  where False = <bound method LongReprWithBraces.some_method of LongReprWithBraces({aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)>()\nE        +    where <bound method LongReprWithBraces.some_method of LongReprWithBraces({aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)> = LongReprWithBraces({aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa).some_method\n\ntest_issue731.py:10: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n________________________ TestIssue925.test_simple_case _________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_simple_case0\ncollected 1 item\n\ntest_simple_case.py F                                                    [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_ternary_display _____________________________\n\n    def test_ternary_display():\n>       assert (False == False) == False\nE       assert (False == False) == False\n\ntest_simple_case.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n_________________________ TestIssue925.test_long_case __________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_long_case0\ncollected 1 item\n\ntest_long_case.py F                                                      [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_ternary_display _____________________________\n\n    def test_ternary_display():\n>        assert False == (False == True) == True\nE        assert (False == True) == True\n\ntest_long_case.py:2: AssertionError\n=========================== 1 failed in 0.01 seconds ===========================\n_______________________ TestIssue925.test_many_brackets ________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_many_brackets0\ncollected 1 item\n\ntest_many_brackets.py F                                                  [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_ternary_display _____________________________\n\n    def test_ternary_display():\n>        assert True == ((False == True) == True)\nE        assert True == ((False == True) == True)\n\ntest_many_brackets.py:2: AssertionError\n=========================== 1 failed in 0.01 seconds ===========================\n___________ TestIssue2121.test_rewrite_python_files_contain_subdirs ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_rewrite_python_files_contain_subdirs0, inifile: tox.ini\ncollected 1 item\n\ntests/file.py F                                                          [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_simple_failure ______________________________\n\n    def test_simple_failure():\n>       assert 1 + 1 == 3\nE       assert (1 + 1) == 3\n\ntests/file.py:2: AssertionError\n=========================== 1 failed in 0.02 seconds ===========================\n_______________________ test_source_mtime_long_long[-1] ________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_source_mtime_long_long0\ncollected 1 item\n\ntest_source_mtime_long_long.py .                                         [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n________________________ test_source_mtime_long_long[1] ________________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_source_mtime_long_long1\ncollected 1 item\n\ntest_source_mtime_long_long.py .                                         [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___________________ TestEarlyRewriteBailout.test_cwd_changed ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.5.1.dev40+g10ca84ffc.d20220101, py-1.11.0, pluggy-0.11.0\nrootdir: /tmp/pytest-of-root/pytest-1/test_cwd_changed0\ncollected 1 item\n\ntest_test.py .                                                           [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n=========================== short test summary info ============================\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_place_initial_imports\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_name\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_if_hasattr_fails\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_already_has_message\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_short_circuit_evaluation\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_unary_op\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_binary_op\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop_percent\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_call\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_attribute\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_comparisons\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_len\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_reprcompare\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_raising_nonzero_in_comparison\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_formatchar\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_expression\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr_non_ascii\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_plugin\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_multiline\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_tuple\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_expr\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_escape\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_messages_bytes\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_at_operator_issue1290\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_starred_with_side_effect\nPASSED testing/test_assertrewrite.py::TestAssertionRewrite::test_for_loop\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_a_file\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_readonly\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_zipfile\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_readonly\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_dont_write_bytecode\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_orphaned_pyc_file\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_pyc_vs_pyo\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_package\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_translate_newlines\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_package_without__init__py\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_module_imported_from_conftest\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_remember_rewritten_modules\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins\nPASSED testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins_env_var\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_false_for_module\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_true_for_package\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_sys_meta_path_munged\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_write_pyc\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_resources_provider_for_loader\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_is_same\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_reloads\nPASSED testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_get_data_support\nPASSED testing/test_assertrewrite.py::test_issue731\nPASSED testing/test_assertrewrite.py::TestIssue925::test_simple_case\nPASSED testing/test_assertrewrite.py::TestIssue925::test_long_case\nPASSED testing/test_assertrewrite.py::TestIssue925::test_many_brackets\nPASSED testing/test_assertrewrite.py::TestIssue2121::test_rewrite_python_files_contain_subdirs\nPASSED testing/test_assertrewrite.py::test_source_mtime_long_long[-1]\nPASSED testing/test_assertrewrite.py::test_source_mtime_long_long[1]\nPASSED testing/test_assertrewrite.py::test_rewrite_infinite_recursion\nPASSED testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_basic\nPASSED testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_pattern_contains_subdirectories\nPASSED testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_cwd_changed\nSKIPPED [1] testing/test_assertrewrite.py:954: python 2 only\nSKIPPED [1] testing/test_assertrewrite.py:1003: condition: sys.version_info[0] >= 3\nSKIPPED [1] testing/test_assertrewrite.py:1012: condition: sys.version_info[0] >= 3\nSKIPPED [1] testing/test_assertrewrite.py:1023: condition: sys.version_info[0] >= 3\nSKIPPED [1] testing/test_assertrewrite.py:1034: condition: sys.version_info[0] >= 3\nFAILED testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_generator\nFAILED testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_list_comprehension\n================ 2 failed, 65 passed, 5 skipped in 6.43 seconds ================\n", {"testing/test_assertrewrite.py::TestAssertionRewrite::test_place_initial_imports": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_name": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_if_hasattr_fails": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_already_has_message": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_short_circuit_evaluation": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_unary_op": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_binary_op": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop_percent": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_call": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_attribute": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_comparisons": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_len": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_reprcompare": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_raising_nonzero_in_comparison": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_formatchar": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_expression": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr_non_ascii": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_plugin": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_multiline": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_tuple": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_expr": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_escape": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_messages_bytes": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_at_operator_issue1290": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_starred_with_side_effect": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_for_loop": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_a_file": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_readonly": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_zipfile": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_readonly": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_dont_write_bytecode": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_orphaned_pyc_file": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pyc_vs_pyo": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_package": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_translate_newlines": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_package_without__init__py": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_module_imported_from_conftest": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_remember_rewritten_modules": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins": "PASSED", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins_env_var": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_false_for_module": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_true_for_package": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_sys_meta_path_munged": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_write_pyc": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_resources_provider_for_loader": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_is_same": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_reloads": "PASSED", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_get_data_support": "PASSED", "testing/test_assertrewrite.py::test_issue731": "PASSED", "testing/test_assertrewrite.py::TestIssue925::test_simple_case": "PASSED", "testing/test_assertrewrite.py::TestIssue925::test_long_case": "PASSED", "testing/test_assertrewrite.py::TestIssue925::test_many_brackets": "PASSED", "testing/test_assertrewrite.py::TestIssue2121::test_rewrite_python_files_contain_subdirs": "PASSED", "testing/test_assertrewrite.py::test_source_mtime_long_long[-1]": "PASSED", "testing/test_assertrewrite.py::test_source_mtime_long_long[1]": "PASSED", "testing/test_assertrewrite.py::test_rewrite_infinite_recursion": "PASSED", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_basic": "PASSED", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_pattern_contains_subdirectories": "PASSED", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_cwd_changed": "PASSED", "[1]": "SKIPPED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_generator": "FAILED", "testing/test_assertrewrite.py::TestAssertionRewrite::test_unroll_list_comprehension": "FAILED"}]