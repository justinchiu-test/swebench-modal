[{"repo": "django/django", "instance_id": "django__django-16910", "base_commit": "4142739af1cda53581af4169dbe16d6cd5e26948", "patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -779,7 +779,13 @@ def _get_only_select_mask(self, opts, mask, select_mask=None):\n         # Only include fields mentioned in the mask.\n         for field_name, field_mask in mask.items():\n             field = opts.get_field(field_name)\n-            field_select_mask = select_mask.setdefault(field, {})\n+            # Retrieve the actual field associated with reverse relationships\n+            # as that's what is expected in the select mask.\n+            if field in opts.related_objects:\n+                field_key = field.field\n+            else:\n+                field_key = field\n+            field_select_mask = select_mask.setdefault(field_key, {})\n             if field_mask:\n                 if not field.is_relation:\n                     raise FieldError(next(iter(field_mask)))\n", "test_patch": "diff --git a/tests/defer_regress/tests.py b/tests/defer_regress/tests.py\n--- a/tests/defer_regress/tests.py\n+++ b/tests/defer_regress/tests.py\n@@ -178,6 +178,16 @@ def test_reverse_one_to_one_relations(self):\n             self.assertEqual(i.one_to_one_item.name, \"second\")\n         with self.assertNumQueries(1):\n             self.assertEqual(i.value, 42)\n+        with self.assertNumQueries(1):\n+            i = Item.objects.select_related(\"one_to_one_item\").only(\n+                \"name\", \"one_to_one_item__item\"\n+            )[0]\n+            self.assertEqual(i.one_to_one_item.pk, o2o.pk)\n+            self.assertEqual(i.name, \"first\")\n+        with self.assertNumQueries(1):\n+            self.assertEqual(i.one_to_one_item.name, \"second\")\n+        with self.assertNumQueries(1):\n+            self.assertEqual(i.value, 42)\n \n     def test_defer_with_select_related(self):\n         item1 = Item.objects.create(name=\"first\", value=47)\n@@ -277,6 +287,28 @@ def test_defer_many_to_many_ignored(self):\n         with self.assertNumQueries(1):\n             self.assertEqual(Request.objects.defer(\"items\").get(), request)\n \n+    def test_only_many_to_many_ignored(self):\n+        location = Location.objects.create()\n+        request = Request.objects.create(location=location)\n+        with self.assertNumQueries(1):\n+            self.assertEqual(Request.objects.only(\"items\").get(), request)\n+\n+    def test_defer_reverse_many_to_many_ignored(self):\n+        location = Location.objects.create()\n+        request = Request.objects.create(location=location)\n+        item = Item.objects.create(value=1)\n+        request.items.add(item)\n+        with self.assertNumQueries(1):\n+            self.assertEqual(Item.objects.defer(\"request\").get(), item)\n+\n+    def test_only_reverse_many_to_many_ignored(self):\n+        location = Location.objects.create()\n+        request = Request.objects.create(location=location)\n+        item = Item.objects.create(value=1)\n+        request.items.add(item)\n+        with self.assertNumQueries(1):\n+            self.assertEqual(Item.objects.only(\"request\").get(), item)\n+\n \n class DeferDeletionSignalsTests(TestCase):\n     senders = [Item, Proxy]\ndiff --git a/tests/select_related_onetoone/tests.py b/tests/select_related_onetoone/tests.py\n--- a/tests/select_related_onetoone/tests.py\n+++ b/tests/select_related_onetoone/tests.py\n@@ -249,6 +249,9 @@ def test_inheritance_deferred2(self):\n             self.assertEqual(p.child1.name2, \"n2\")\n         p = qs.get(name2=\"n2\")\n         with self.assertNumQueries(0):\n+            self.assertEqual(p.child1.value, 1)\n+            self.assertEqual(p.child1.child4.value4, 4)\n+        with self.assertNumQueries(2):\n             self.assertEqual(p.child1.name1, \"n1\")\n             self.assertEqual(p.child1.child4.name1, \"n1\")\n \n", "problem_statement": "QuerySet.only() doesn't work with select_related() on a reverse OneToOneField relation.\nDescription\n\t\nOn Django 4.2 calling only() with select_related() on a query using the reverse lookup for a OneToOne relation does not generate the correct query.\nAll the fields from the related model are still included in the generated SQL.\nSample models:\nclass Main(models.Model):\n\tmain_field_1 = models.CharField(blank=True, max_length=45)\n\tmain_field_2 = models.CharField(blank=True, max_length=45)\n\tmain_field_3 = models.CharField(blank=True, max_length=45)\nclass Secondary(models.Model):\n\tmain = models.OneToOneField(Main, primary_key=True, related_name='secondary', on_delete=models.CASCADE)\n\tsecondary_field_1 = models.CharField(blank=True, max_length=45)\n\tsecondary_field_2 = models.CharField(blank=True, max_length=45)\n\tsecondary_field_3 = models.CharField(blank=True, max_length=45)\nSample code:\nMain.objects.select_related('secondary').only('main_field_1', 'secondary__secondary_field_1')\nGenerated query on Django 4.2.1:\nSELECT \"bugtest_main\".\"id\", \"bugtest_main\".\"main_field_1\", \"bugtest_secondary\".\"main_id\", \"bugtest_secondary\".\"secondary_field_1\", \"bugtest_secondary\".\"secondary_field_2\", \"bugtest_secondary\".\"secondary_field_3\" FROM \"bugtest_main\" LEFT OUTER JOIN \"bugtest_secondary\" ON (\"bugtest_main\".\"id\" = \"bugtest_secondary\".\"main_id\")\nGenerated query on Django 4.1.9:\nSELECT \"bugtest_main\".\"id\", \"bugtest_main\".\"main_field_1\", \"bugtest_secondary\".\"main_id\", \"bugtest_secondary\".\"secondary_field_1\" FROM \"bugtest_main\" LEFT OUTER JOIN \"bugtest_secondary\" ON (\"bugtest_main\".\"id\" = \"bugtest_secondary\".\"main_id\")\n", "hints_text": "Thanks for the report! Regression in b3db6c8dcb5145f7d45eff517bcd96460475c879. Reproduced at 881cc139e2d53cc1d3ccea7f38faa960f9e56597.", "created_at": "2023-05-31T22:28:10Z", "version": "5.0", "FAIL_TO_PASS": "[\"test_inheritance_deferred2 (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred2)\", \"test_reverse_one_to_one_relations (defer_regress.tests.DeferRegressionTest.test_reverse_one_to_one_relations)\"]", "PASS_TO_PASS": "[\"test_reverse_related_validation (select_related_onetoone.tests.ReverseSelectRelatedValidationTests.test_reverse_related_validation)\", \"test_reverse_related_validation_with_filtered_relation (select_related_onetoone.tests.ReverseSelectRelatedValidationTests.test_reverse_related_validation_with_filtered_relation)\", \"test_delete_defered_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_model)\", \"test_delete_defered_proxy_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_proxy_model)\", \"test_back_and_forward (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_back_and_forward)\", \"test_basic (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_basic)\", \"test_follow_from_child_class (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_from_child_class)\", \"test_follow_inheritance (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_inheritance)\", \"test_follow_next_level (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_next_level)\", \"test_follow_two (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_two)\", \"test_follow_two_next_level (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_two_next_level)\", \"test_forward_and_back (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_forward_and_back)\", \"test_inheritance_deferred (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred)\", \"Ticket #13839: select_related() should NOT cache None\", \"test_multiinheritance_two_subclasses (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_multiinheritance_two_subclasses)\", \"test_multiple_subclass (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_multiple_subclass)\", \"test_not_followed_by_default (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_not_followed_by_default)\", \"test_nullable_relation (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_nullable_relation)\", \"test_onetoone_with_subclass (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_onetoone_with_subclass)\", \"test_onetoone_with_two_subclasses (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_onetoone_with_two_subclasses)\", \"test_parent_only (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_parent_only)\", \"test_self_relation (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_self_relation)\", \"test_basic (defer_regress.tests.DeferRegressionTest.test_basic)\", \"test_common_model_different_mask (defer_regress.tests.DeferRegressionTest.test_common_model_different_mask)\", \"test_defer_annotate_select_related (defer_regress.tests.DeferRegressionTest.test_defer_annotate_select_related)\", \"test_defer_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_defer_many_to_many_ignored)\", \"test_defer_reverse_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_defer_reverse_many_to_many_ignored)\", \"test_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_defer_with_select_related)\", \"test_only_and_defer_usage_on_proxy_models (defer_regress.tests.DeferRegressionTest.test_only_and_defer_usage_on_proxy_models)\", \"test_only_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_only_many_to_many_ignored)\", \"test_only_reverse_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_only_reverse_many_to_many_ignored)\", \"test_only_with_select_related (defer_regress.tests.DeferRegressionTest.test_only_with_select_related)\", \"test_proxy_model_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_proxy_model_defer_with_select_related)\", \"test_resolve_columns (defer_regress.tests.DeferRegressionTest.test_resolve_columns)\", \"test_ticket_16409 (defer_regress.tests.DeferRegressionTest.test_ticket_16409)\", \"test_ticket_23270 (defer_regress.tests.DeferRegressionTest.test_ticket_23270)\"]", "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/db/models/sql/query.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 4142739af1cda53581af4169dbe16d6cd5e26948\nAuthor: Michael Howitz <mh@gocept.com>\nDate:   Thu Jun 1 14:56:41 2023 +0100\n\n    Added local copy of Django to deps in tox.ini.\n    \n    This also bumps tox to 4.0.\n\ndiff --git a/tox.ini b/tox.ini\nindex fa32144e68..978d488c13 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -4,7 +4,7 @@\n # then run \"tox\" from this directory.\n \n [tox]\n-minversion = 3.18\n+minversion = 4.0\n skipsdist = true\n envlist =\n     py3\n@@ -25,6 +25,7 @@ passenv = DJANGO_SETTINGS_MODULE,PYTHONPATH,HOME,DISPLAY,OBJC_DISABLE_INITIALIZE\n setenv =\n     PYTHONDONTWRITEBYTECODE=1\n deps =\n+    -e .\n     py{3,310,311}: -rtests/requirements/py3.txt\n     postgres: -rtests/requirements/postgres.txt\n     mysql: -rtests/requirements/mysql.txt\ndiff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 781dfd5499..772ba13419 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -779,7 +779,13 @@ class Query(BaseExpression):\n         # Only include fields mentioned in the mask.\n         for field_name, field_mask in mask.items():\n             field = opts.get_field(field_name)\n-            field_select_mask = select_mask.setdefault(field, {})\n+            # Retrieve the actual field associated with reverse relationships\n+            # as that's what is expected in the select mask.\n+            if field in opts.related_objects:\n+                field_key = field.field\n+            else:\n+                field_key = field\n+            field_select_mask = select_mask.setdefault(field_key, {})\n             if field_mask:\n                 if not field.is_relation:\n                     raise FieldError(next(iter(field_mask)))\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: asgiref>=3.6.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230601135641) (3.8.1)\nRequirement already satisfied: sqlparse>=0.3.1 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230601135641) (0.5.1)\nBuilding wheels for collected packages: Django\n  Building editable for Django (pyproject.toml): started\n  Building editable for Django (pyproject.toml): finished with status 'done'\n  Created wheel for Django: filename=Django-5.0.dev20230601135641-0.editable-py3-none-any.whl size=27451 sha256=24ec6a6d008a923e0de30ccc79ab88257dd12c07059cdf844ae80eebe28285a2\n  Stored in directory: /tmp/pip-ephem-wheel-cache-ltlpbn1w/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b\nSuccessfully built Django\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 5.0.dev20230601135641\n    Uninstalling Django-5.0.dev20230601135641:\n      Successfully uninstalled Django-5.0.dev20230601135641\nSuccessfully installed Django-5.0.dev20230601135641\nTesting against Django installed in '/testbed/django'\nImporting application defer_regress\nImporting application select_related_onetoone\nFound 39 test(s).\nSkipping setup of unused database(s): other.\nOperations to perform:\n  Synchronize unmigrated apps: auth, contenttypes, defer_regress, messages, select_related_onetoone, sessions, staticfiles\n  Apply all migrations: admin, sites\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_content_type\n    Creating table auth_permission\n    Creating table auth_group\n    Creating table auth_user\n    Creating table django_session\n    Creating table defer_regress_item\n    Creating table defer_regress_relateditem\n    Creating table defer_regress_child\n    Creating table defer_regress_leaf\n    Creating table defer_regress_resolvethis\n    Creating table defer_regress_simpleitem\n    Creating table defer_regress_feature\n    Creating table defer_regress_specialfeature\n    Creating table defer_regress_onetooneitem\n    Creating table defer_regress_itemandsimpleitem\n    Creating table defer_regress_profile\n    Creating table defer_regress_location\n    Creating table defer_regress_request\n    Creating table defer_regress_base\n    Creating table defer_regress_derived\n    Creating table select_related_onetoone_user\n    Creating table select_related_onetoone_userprofile\n    Creating table select_related_onetoone_userstatresult\n    Creating table select_related_onetoone_userstat\n    Creating table select_related_onetoone_statdetails\n    Creating table select_related_onetoone_advanceduserstat\n    Creating table select_related_onetoone_image\n    Creating table select_related_onetoone_product\n    Creating table select_related_onetoone_parent1\n    Creating table select_related_onetoone_parent2\n    Creating table select_related_onetoone_child1\n    Creating table select_related_onetoone_child2\n    Creating table select_related_onetoone_child3\n    Creating table select_related_onetoone_child4\n    Creating table select_related_onetoone_linkedlist\n    Running deferred SQL...\nRunning migrations:\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying sites.0001_initial... OK\n  Applying sites.0002_alter_domain_unique... OK\nSystem check identified no issues (0 silenced).\n", {}]