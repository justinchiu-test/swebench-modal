[{"repo": "django/django", "instance_id": "django__django-12286", "base_commit": "979f61abd322507aafced9627702362e541ec34e", "patch": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,4 +1,5 @@\n from django.conf import settings\n+from django.utils.translation import get_supported_language_variant\n from django.utils.translation.trans_real import language_code_re\n \n from . import Error, Tags, register\n@@ -55,7 +56,9 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n-    return []\n+    else:\n+        return []\n", "test_patch": "diff --git a/tests/check_framework/test_translation.py b/tests/check_framework/test_translation.py\n--- a/tests/check_framework/test_translation.py\n+++ b/tests/check_framework/test_translation.py\n@@ -3,7 +3,7 @@\n     check_language_settings_consistent, check_setting_language_code,\n     check_setting_languages, check_setting_languages_bidi,\n )\n-from django.test import SimpleTestCase\n+from django.test import SimpleTestCase, override_settings\n \n \n class TranslationCheckTests(SimpleTestCase):\n@@ -75,12 +75,36 @@ def test_invalid_languages_bidi(self):\n                     Error(msg % tag, id='translation.E003'),\n                 ])\n \n+    @override_settings(USE_I18N=True, LANGUAGES=[('en', 'English')])\n     def test_inconsistent_language_settings(self):\n         msg = (\n             'You have provided a value for the LANGUAGE_CODE setting that is '\n             'not in the LANGUAGES setting.'\n         )\n-        with self.settings(LANGUAGE_CODE='fr', LANGUAGES=[('en', 'English')]):\n-            self.assertEqual(check_language_settings_consistent(None), [\n-                Error(msg, id='translation.E004'),\n-            ])\n+        for tag in ['fr', 'fr-CA', 'fr-357']:\n+            with self.subTest(tag), self.settings(LANGUAGE_CODE=tag):\n+                self.assertEqual(check_language_settings_consistent(None), [\n+                    Error(msg, id='translation.E004'),\n+                ])\n+\n+    @override_settings(\n+        USE_I18N=True,\n+        LANGUAGES=[\n+            ('de', 'German'),\n+            ('es', 'Spanish'),\n+            ('fr', 'French'),\n+            ('ca', 'Catalan'),\n+        ],\n+    )\n+    def test_valid_variant_consistent_language_settings(self):\n+        tests = [\n+            # language + region.\n+            'fr-CA',\n+            'es-419',\n+            'de-at',\n+            # language + region + variant.\n+            'ca-ES-valencia',\n+        ]\n+        for tag in tests:\n+            with self.subTest(tag), self.settings(LANGUAGE_CODE=tag):\n+                self.assertEqual(check_language_settings_consistent(None), [])\n", "problem_statement": "translation.E004 shouldn't be raised on sublanguages when a base language is available.\nDescription\n\t\nAccording to Django documentation:\nIf a base language is available but the sublanguage specified is not, Django uses the base language. For example, if a user specifies de-at (Austrian German) but Django only has de available, Django uses de.\nHowever, when using Django 3.0.2, if my settings.py has\nLANGUAGE_CODE = \"de-at\"\nI get this error message:\nSystemCheckError: System check identified some issues:\nERRORS:\n?: (translation.E004) You have provided a value for the LANGUAGE_CODE setting that is not in the LANGUAGES setting.\nIf using\nLANGUAGE_CODE = \"es-ar\"\nDjango works fine (es-ar is one of the translations provided out of the box).\n", "hints_text": "Thanks for this report. Regression in 4400d8296d268f5a8523cd02ddc33b12219b2535.", "created_at": "2020-01-07T13:56:28Z", "version": "3.1", "FAIL_TO_PASS": "[\"test_valid_variant_consistent_language_settings (check_framework.test_translation.TranslationCheckTests)\"]", "PASS_TO_PASS": "[\"test_inconsistent_language_settings (check_framework.test_translation.TranslationCheckTests)\", \"test_invalid_language_code (check_framework.test_translation.TranslationCheckTests)\", \"test_invalid_languages (check_framework.test_translation.TranslationCheckTests)\", \"test_invalid_languages_bidi (check_framework.test_translation.TranslationCheckTests)\", \"test_valid_language_code (check_framework.test_translation.TranslationCheckTests)\", \"test_valid_languages (check_framework.test_translation.TranslationCheckTests)\", \"test_valid_languages_bidi (check_framework.test_translation.TranslationCheckTests)\"]", "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab"}, "Generating locales (this might take a while)...\n  en_US.UTF-8... done\nGeneration complete.\nOn branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/core/checks/translation.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 979f61abd322507aafced9627702362e541ec34e\nAuthor: Taoup <mahongtao0x7e0@163.com>\nDate:   Tue Jan 7 09:34:15 2020 +0800\n\n    Simplified model's Options.add_field() a bit.\n\ndiff --git a/django/db/models/options.py b/django/db/models/options.py\nindex baa0c875b2..a375f6ba1d 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -1,6 +1,6 @@\n+import bisect\n import copy\n import inspect\n-from bisect import bisect\n from collections import defaultdict\n \n from django.apps import apps\n@@ -271,9 +271,9 @@ class Options:\n         if private:\n             self.private_fields.append(field)\n         elif field.is_relation and field.many_to_many:\n-            self.local_many_to_many.insert(bisect(self.local_many_to_many, field), field)\n+            bisect.insort(self.local_many_to_many, field)\n         else:\n-            self.local_fields.insert(bisect(self.local_fields, field), field)\n+            bisect.insort(self.local_fields, field)\n             self.setup_pk(field)\n \n         # If the field being added is a relation to another known field,\ndiff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..8457a6b89d 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,4 +1,5 @@\n from django.conf import settings\n+from django.utils.translation import get_supported_language_variant\n from django.utils.translation.trans_real import language_code_re\n \n from . import Error, Tags, register\n@@ -55,7 +56,9 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n-    return []\n+    else:\n+        return []\nObtaining file:///testbed\nRequirement already satisfied: asgiref>=3.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (3.4.1)\nRequirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (2024.2)\nRequirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (0.4.4)\nRequirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2->Django==3.1) (4.1.1)\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 3.1\n    Uninstalling Django-3.1:\n      Successfully uninstalled Django-3.1\n  Running setup.py develop for Django\nSuccessfully installed Django-3.1\nTesting against Django installed in '/testbed/django'\nImporting application check_framework\nSkipping setup of unused database(s): default, other.\nSystem check identified no issues (0 silenced).\n", {}]