[{"repo": "sphinx-doc/sphinx", "instance_id": "sphinx-doc__sphinx-8713", "base_commit": "3ed7590ed411bd93b26098faab4f23619cdb2267", "patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -682,7 +682,13 @@ def _parse_notes_section(self, section: str) -> List[str]:\n         return self._parse_generic_section(_('Notes'), use_admonition)\n \n     def _parse_other_parameters_section(self, section: str) -> List[str]:\n-        return self._format_fields(_('Other Parameters'), self._consume_fields())\n+        if self._config.napoleon_use_param:\n+            # Allow to declare multiple parameters at once (ex: x, y: int)\n+            fields = self._consume_fields(multiple=True)\n+            return self._format_docutils_params(fields)\n+        else:\n+            fields = self._consume_fields()\n+            return self._format_fields(_('Other Parameters'), fields)\n \n     def _parse_parameters_section(self, section: str) -> List[str]:\n         if self._config.napoleon_use_param:\n", "test_patch": "diff --git a/tests/test_ext_napoleon_docstring.py b/tests/test_ext_napoleon_docstring.py\n--- a/tests/test_ext_napoleon_docstring.py\n+++ b/tests/test_ext_napoleon_docstring.py\n@@ -1441,12 +1441,18 @@ def test_parameters_with_class_reference(self):\n ----------\n param1 : :class:`MyClass <name.space.MyClass>` instance\n \n+Other Parameters\n+----------------\n+param2 : :class:`MyClass <name.space.MyClass>` instance\n+\n \"\"\"\n \n         config = Config(napoleon_use_param=False)\n         actual = str(NumpyDocstring(docstring, config))\n         expected = \"\"\"\\\n :Parameters: **param1** (:class:`MyClass <name.space.MyClass>` instance)\n+\n+:Other Parameters: **param2** (:class:`MyClass <name.space.MyClass>` instance)\n \"\"\"\n         self.assertEqual(expected, actual)\n \n@@ -1455,6 +1461,9 @@ def test_parameters_with_class_reference(self):\n         expected = \"\"\"\\\n :param param1:\n :type param1: :class:`MyClass <name.space.MyClass>` instance\n+\n+:param param2:\n+:type param2: :class:`MyClass <name.space.MyClass>` instance\n \"\"\"\n         self.assertEqual(expected, actual)\n \n", "problem_statement": "napoleon_use_param should also affect \"other parameters\" section\nSubject: napoleon_use_param should also affect \"other parameters\" section\r\n\r\n### Problem\r\nCurrently, napoleon always renders the Other parameters section as if napoleon_use_param was False, see source\r\n```\r\n    def _parse_other_parameters_section(self, section):\r\n        # type: (unicode) -> List[unicode]\r\n        return self._format_fields(_('Other Parameters'), self._consume_fields())\r\n\r\n    def _parse_parameters_section(self, section):\r\n        # type: (unicode) -> List[unicode]\r\n        fields = self._consume_fields()\r\n        if self._config.napoleon_use_param:\r\n            return self._format_docutils_params(fields)\r\n        else:\r\n            return self._format_fields(_('Parameters'), fields)\r\n```\r\nwhereas it would make sense that this section should follow the same formatting rules as the Parameters section.\r\n\r\n#### Procedure to reproduce the problem\r\n```\r\nIn [5]: print(str(sphinx.ext.napoleon.NumpyDocstring(\"\"\"\\ \r\n   ...: Parameters \r\n   ...: ---------- \r\n   ...: x : int \r\n   ...:  \r\n   ...: Other parameters \r\n   ...: ---------------- \r\n   ...: y: float \r\n   ...: \"\"\")))                                                                                                                                                                                      \r\n:param x:\r\n:type x: int\r\n\r\n:Other Parameters: **y** (*float*)\r\n```\r\n\r\nNote the difference in rendering.\r\n\r\n#### Error logs / results\r\nSee above.\r\n\r\n#### Expected results\r\n```\r\n:param x:\r\n:type x: int\r\n\r\n:Other Parameters:  // Or some other kind of heading.\r\n:param: y\r\n:type y: float\r\n```\r\n\r\nAlternatively another separate config value could be introduced, but that seems a bit overkill.\r\n\r\n### Reproducible project / your project\r\nN/A\r\n\r\n### Environment info\r\n- OS: Linux\r\n- Python version: 3.7\r\n- Sphinx version: 1.8.1\r\n\n", "hints_text": "", "created_at": "2021-01-20T14:24:12Z", "version": "4.0", "FAIL_TO_PASS": "[\"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference\"]", "PASS_TO_PASS": "[\"tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_no_type\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_ref_in_type\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_keywords_with_types\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_pep526_annotations\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_convert_numpy_type_spec\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_multiple_parameters\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameter_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens_invalid\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_return_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_token_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_tokenize_type_spec\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_type_preprocessor\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute_strip_signature_backslash\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_yield_types\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[x,\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*args,\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*x,\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_pep526_annotations\"]", "environment_setup_commit": "8939a75efaa911a12dbe6edccedf261e88bf7eef"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   setup.py\n\tmodified:   sphinx/ext/napoleon/docstring.py\n\tmodified:   tox.ini\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 3ed7590ed411bd93b26098faab4f23619cdb2267\nMerge: 4cae0ecf8 9ced1e355\nAuthor: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate:   Tue Jan 19 02:31:25 2021 +0900\n\n    Merge pull request #8696 from tk0miya/refactor_test_quickstart\n    \n    refactor: test: Do not use deprecated function: execfile_()\n\ndiff --git a/setup.py b/setup.py\nindex a0c8ac102..2ef89ef1a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.14',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex 755088ca5..a5a986e49 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -682,7 +682,13 @@ class GoogleDocstring:\n         return self._parse_generic_section(_('Notes'), use_admonition)\n \n     def _parse_other_parameters_section(self, section: str) -> List[str]:\n-        return self._format_fields(_('Other Parameters'), self._consume_fields())\n+        if self._config.napoleon_use_param:\n+            # Allow to declare multiple parameters at once (ex: x, y: int)\n+            fields = self._consume_fields(multiple=True)\n+            return self._format_docutils_params(fields)\n+        else:\n+            fields = self._consume_fields()\n+            return self._format_fields(_('Other Parameters'), fields)\n \n     def _parse_parameters_section(self, section: str) -> List[str]:\n         if self._config.napoleon_use_param:\ndiff --git a/tox.ini b/tox.ini\nindex bdf4c2ad3..b12166264 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -26,7 +26,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: sphinxcontrib-applehelp<=1.0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.0.4)\nRequirement already satisfied: sphinxcontrib-devhelp<=1.0.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.0.2)\nRequirement already satisfied: sphinxcontrib-jsmath in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.0.1)\nRequirement already satisfied: sphinxcontrib-htmlhelp<=2.0.4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.0.1)\nRequirement already satisfied: sphinxcontrib-serializinghtml<=1.1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.1.5)\nRequirement already satisfied: sphinxcontrib-qthelp<=1.0.6 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.0.3)\nRequirement already satisfied: Jinja2<3.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.11.3)\nRequirement already satisfied: Pygments>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.18.0)\nRequirement already satisfied: docutils>=0.14 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (0.21.2)\nRequirement already satisfied: snowballstemmer>=1.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.2.0)\nRequirement already satisfied: babel>=1.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.16.0)\nRequirement already satisfied: alabaster<0.7.12,>=0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (0.7.11)\nRequirement already satisfied: imagesize in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.4.1)\nRequirement already satisfied: requests>=2.5.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.32.3)\nRequirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (75.1.0)\nRequirement already satisfied: packaging in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (24.1)\nRequirement already satisfied: markupsafe<=2.0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (2.0.1)\nRequirement already satisfied: pytest in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (8.3.3)\nRequirement already satisfied: pytest-cov in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (5.0.0)\nRequirement already satisfied: html5lib in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (1.1)\nRequirement already satisfied: cython in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==4.0.0.dev20241007) (3.0.11)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==4.0.0.dev20241007) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==4.0.0.dev20241007) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==4.0.0.dev20241007) (2.2.3)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==4.0.0.dev20241007) (2024.8.30)\nRequirement already satisfied: six>=1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==4.0.0.dev20241007) (1.16.0)\nRequirement already satisfied: webencodings in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==4.0.0.dev20241007) (0.5.1)\nRequirement already satisfied: iniconfig in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==4.0.0.dev20241007) (2.0.0)\nRequirement already satisfied: pluggy<2,>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==4.0.0.dev20241007) (1.5.0)\nRequirement already satisfied: exceptiongroup>=1.0.0rc8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==4.0.0.dev20241007) (1.2.2)\nRequirement already satisfied: tomli>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==4.0.0.dev20241007) (2.0.2)\nRequirement already satisfied: coverage>=5.2.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from coverage[toml]>=5.2.1->pytest-cov->Sphinx==4.0.0.dev20241007) (7.6.1)\nInstalling collected packages: Sphinx\n  Attempting uninstall: Sphinx\n    Found existing installation: Sphinx 4.0.0.dev20241007\n    Uninstalling Sphinx-4.0.0.dev20241007:\n      Successfully uninstalled Sphinx-4.0.0.dev20241007\n  Running setup.py develop for Sphinx\nSuccessfully installed Sphinx\npy39: commands[0]> python -X dev -m pytest -rA --durations 25 tests/test_ext_napoleon_docstring.py\n\u001b[1m============================= test session starts ==============================\u001b[0m\nplatform linux -- Python 3.9.20, pytest-8.3.3, pluggy-1.5.0\ncachedir: .tox/py39/.pytest_cache\nlibraries: Sphinx-4.0.0+/3ed7590ed, docutils-0.21.2\nbase tempdir: /tmp/pytest-of-root/pytest-1\nrootdir: /testbed\nconfigfile: setup.cfg\nplugins: cov-5.0.0\ncollected 47 items\n\ntests/test_ext_napoleon_docstring.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 74%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                             [100%]\u001b[0m\n\n=================================== FAILURES ===================================\n\u001b[31m\u001b[1m__________________ TestNumpyDocstring.test_token_type_invalid __________________\u001b[0m\n\nself = <tests.test_ext_napoleon_docstring.TestNumpyDocstring object at 0x7ef64e3af7d0>\nwarning = <_io.StringIO object at 0x7ef64e3fd4b0>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m \u001b[92mtest_token_type_invalid\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, warning):\u001b[90m\u001b[39;49;00m\n        tokens = (\u001b[90m\u001b[39;49;00m\n            \u001b[33m\"\u001b[39;49;00m\u001b[33m{\u001b[39;49;00m\u001b[33m1, 2\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33m\"\u001b[39;49;00m\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33m\"\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33mabc\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33m\"\u001b[39;49;00m\u001b[33mdef\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33m'\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mghi\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33m'\u001b[39;49;00m\u001b[33mjkl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n        errors = (\u001b[90m\u001b[39;49;00m\n            \u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m.+: invalid value set \u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m(missing closing brace\u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m):\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m.+: invalid value set \u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m(missing opening brace\u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m):\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m.+: malformed string literal \u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m(missing closing quote\u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m):\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m.+: malformed string literal \u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m(missing opening quote\u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m):\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m.+: malformed string literal \u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m(missing closing quote\u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m):\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            \u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m.+: malformed string literal \u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m(missing opening quote\u001b[39;49;00m\u001b[33m\\\u001b[39;49;00m\u001b[33m):\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n        \u001b[94mfor\u001b[39;49;00m token, error \u001b[95min\u001b[39;49;00m \u001b[96mzip\u001b[39;49;00m(tokens, errors):\u001b[90m\u001b[39;49;00m\n            \u001b[94mwith\u001b[39;49;00m warns(warning, match=error):\u001b[90m\u001b[39;49;00m\n>               _token_type(token)\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31mtests/test_ext_napoleon_docstring.py\u001b[0m:2499: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\u001b[1m\u001b[31m/opt/miniconda3/envs/testbed/lib/python3.9/contextlib.py\u001b[0m:126: in __exit__\n    \u001b[0m\u001b[96mnext\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m.gen)\u001b[90m\u001b[39;49;00m\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nwarning = <_io.StringIO object at 0x7ef64e3fd4b0>\nmatch = '.+: invalid value set \\\\(missing closing brace\\\\):'\n\n    \u001b[0m\u001b[37m@contextmanager\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m \u001b[92mwarns\u001b[39;49;00m(warning, match):\u001b[90m\u001b[39;49;00m\n        match_re = re.compile(match)\u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[94myield\u001b[39;49;00m warning\u001b[90m\u001b[39;49;00m\n        \u001b[94mfinally\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            raw_warnings = warning.getvalue()\u001b[90m\u001b[39;49;00m\n            warnings = [w \u001b[94mfor\u001b[39;49;00m w \u001b[95min\u001b[39;49;00m raw_warnings.split(\u001b[33m\"\u001b[39;49;00m\u001b[33m\\n\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m) \u001b[94mif\u001b[39;49;00m w.strip()]\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n>           \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(warnings) == \u001b[94m1\u001b[39;49;00m \u001b[95mand\u001b[39;49;00m \u001b[96mall\u001b[39;49;00m(match_re.match(w) \u001b[94mfor\u001b[39;49;00m w \u001b[95min\u001b[39;49;00m warnings)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           assert (2 == 1)\u001b[0m\n\u001b[1m\u001b[31mE            +  where 2 = len([\"\\x1b[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\\x1b[39;49;00m\", '\\x1b[91mWARNING: invalid value set (missing closing brace): {1, 2\\x1b[39;49;00m'])\u001b[0m\n\n\u001b[1m\u001b[31mtests/test_ext_napoleon_docstring.py\u001b[0m:2475: AssertionError\n--------------------------- Captured stdout teardown ---------------------------\n# testroot: root\n# builder: html\n# srcdir: /tmp/pytest-of-root/pytest-1/root\n# outdir: /tmp/pytest-of-root/pytest-1/root/_build/html\n# status: \n\u001b[01mRunning Sphinx v4.0.0+/3ed7590ed\u001b[39;49;00m\n\n# warning: \n\u001b[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\u001b[39;49;00m\n\u001b[91mWARNING: invalid value set (missing closing brace): {1, 2\u001b[39;49;00m\n\n\u001b[33m=============================== warnings summary ===============================\u001b[0m\nsphinx/util/docutils.py:44\n  /testbed/sphinx/util/docutils.py:44: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n    __version_info__ = tuple(LooseVersion(docutils.__version__).version)\n\nsphinx/registry.py:22\n  /testbed/sphinx/registry.py:22: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n    from pkg_resources import iter_entry_points\n\n../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154\n../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154\n../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154\n../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154\n  /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\n    declare_namespace(pkg)\n\ntests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_token_type_invalid\n  /testbed/sphinx/directives/patches.py:15: DeprecationWarning: The `docutils.parsers.rst.directive.html` module will be removed in Docutils 2.0. Since Docutils 0.18, the \"Meta\" node is defined in `docutils.parsers.rst.directives.misc`.\n    from docutils.parsers.rst.directives import html, images, tables\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n==================================== PASSES ====================================\n\u001b[32m\u001b[1m__________________ TestNumpyDocstring.test_pep526_annotations __________________\u001b[0m\n----------------------------- Captured stdout call -----------------------------\nSample class with PEP 526 annotations and numpy docstring\n\n.. attribute:: attr1\n\n   Attr1 description\n\n   :type: int\n\n.. attribute:: attr2\n\n   Attr2 description\n\n   :type: str\n\n============================= slowest 25 durations =============================\n0.52s setup    tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_token_type_invalid\n\n(24 durations < 0.005s hidden.  Use -vv to show these durations.)\n\u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNamedtupleSubclassTest::test_attributes_docstring\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mInlineAttributeTest::test_class_data_member\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mInlineAttributeTest::test_class_data_member_inline\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mInlineAttributeTest::test_class_data_member_inline_no_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mInlineAttributeTest::test_class_data_member_inline_ref_in_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_attributes_with_class_reference\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_code_block_in_returns_section\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_colon_in_return_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_custom_generic_sections\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_docstrings\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_keywords_with_types\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_kwargs_in_arguments\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_list_in_parameter_description\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_noindex\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_parameters_with_class_reference\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_pep526_annotations\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_raises_types\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_section_header_formatting\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_sphinx_admonitions\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mGoogleDocstringTest::test_xrefs_in_return_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_colon_in_return_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_convert_numpy_type_spec\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_docstrings\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_list_in_parameter_description\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_multiple_parameters\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_parameter_types\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_parameters_with_class_reference\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_parameters_without_class_reference\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_raises_types\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_recombine_set_tokens\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_recombine_set_tokens_invalid\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_return_types\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_section_header_underline_length\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_see_also_refs\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_sphinx_admonitions\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_token_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_tokenize_type_spec\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_type_preprocessor\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_underscore_in_attribute\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_underscore_in_attribute_strip_signature_backslash\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_xrefs_in_return_type\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mNumpyDocstringTest::test_yield_types\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mTestNumpyDocstring::test_escape_args_and_kwargs[x, y, z-x, y, z]\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mTestNumpyDocstring::test_escape_args_and_kwargs[*args, **kwargs-\\\\*args, \\\\*\\\\*kwargs]\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mTestNumpyDocstring::test_escape_args_and_kwargs[*x, **y-\\\\*x, \\\\*\\\\*y]\u001b[0m\n\u001b[32mPASSED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mTestNumpyDocstring::test_pep526_annotations\u001b[0m\n\u001b[31mFAILED\u001b[0m tests/test_ext_napoleon_docstring.py::\u001b[1mTestNumpyDocstring::test_token_type_invalid\u001b[0m - assert (2 == 1)\n\u001b[31m=================== \u001b[31m\u001b[1m1 failed\u001b[0m, \u001b[32m46 passed\u001b[0m, \u001b[33m7 warnings\u001b[0m\u001b[31m in 0.80s\u001b[0m\u001b[31m ===================\u001b[0m\npy39: exit 1 (1.59 seconds) /testbed> python -X dev -m pytest -rA --durations 25 tests/test_ext_napoleon_docstring.py pid=437\n  py39: FAIL code 1 (1.63=setup[0.04]+cmd[1.59] seconds)\n  evaluation failed :( (1.78 seconds)\n", {"tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring": "PASSED", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member": "PASSED", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline": "PASSED", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_no_type": "PASSED", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_ref_in_type": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_keywords_with_types": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_pep526_annotations": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions": "PASSED", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_convert_numpy_type_spec": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_multiple_parameters": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameter_types": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens_invalid": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_return_types": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_token_type": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_tokenize_type_spec": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_type_preprocessor": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute_strip_signature_backslash": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type": "PASSED", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_yield_types": "PASSED", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[x,": "PASSED", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*args,": "PASSED", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*x,": "PASSED", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_pep526_annotations": "PASSED", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_token_type_invalid": "FAILED"}]