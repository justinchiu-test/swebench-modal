[{"repo": "django/django", "instance_id": "django__django-13710", "base_commit": "1bd6a7a0acc11e249fca11c017505ad39f15ebf6", "patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2037,10 +2037,13 @@ def __init__(self, parent_model, admin_site):\n         self.opts = self.model._meta\n         self.has_registered_model = admin_site.is_registered(self.model)\n         super().__init__()\n+        if self.verbose_name_plural is None:\n+            if self.verbose_name is None:\n+                self.verbose_name_plural = self.model._meta.verbose_name_plural\n+            else:\n+                self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n         if self.verbose_name is None:\n             self.verbose_name = self.model._meta.verbose_name\n-        if self.verbose_name_plural is None:\n-            self.verbose_name_plural = self.model._meta.verbose_name_plural\n \n     @property\n     def media(self):\n", "test_patch": "diff --git a/tests/admin_inlines/tests.py b/tests/admin_inlines/tests.py\n--- a/tests/admin_inlines/tests.py\n+++ b/tests/admin_inlines/tests.py\n@@ -967,6 +967,55 @@ def test_extra_inlines_are_not_shown(self):\n class TestVerboseNameInlineForms(TestDataMixin, TestCase):\n     factory = RequestFactory()\n \n+    def test_verbose_name_inline(self):\n+        class NonVerboseProfileInline(TabularInline):\n+            model = Profile\n+            verbose_name = 'Non-verbose childs'\n+\n+        class VerboseNameProfileInline(TabularInline):\n+            model = VerboseNameProfile\n+            verbose_name = 'Childs with verbose name'\n+\n+        class VerboseNamePluralProfileInline(TabularInline):\n+            model = VerboseNamePluralProfile\n+            verbose_name = 'Childs with verbose name plural'\n+\n+        class BothVerboseNameProfileInline(TabularInline):\n+            model = BothVerboseNameProfile\n+            verbose_name = 'Childs with both verbose names'\n+\n+        modeladmin = ModelAdmin(ProfileCollection, admin_site)\n+        modeladmin.inlines = [\n+            NonVerboseProfileInline,\n+            VerboseNameProfileInline,\n+            VerboseNamePluralProfileInline,\n+            BothVerboseNameProfileInline,\n+        ]\n+        obj = ProfileCollection.objects.create()\n+        url = reverse('admin:admin_inlines_profilecollection_change', args=(obj.pk,))\n+        request = self.factory.get(url)\n+        request.user = self.superuser\n+        response = modeladmin.changeform_view(request)\n+        self.assertNotContains(response, 'Add another Profile')\n+        # Non-verbose model.\n+        self.assertContains(response, '<h2>Non-verbose childss</h2>')\n+        self.assertContains(response, 'Add another Non-verbose child')\n+        self.assertNotContains(response, '<h2>Profiles</h2>')\n+        # Model with verbose name.\n+        self.assertContains(response, '<h2>Childs with verbose names</h2>')\n+        self.assertContains(response, 'Add another Childs with verbose name')\n+        self.assertNotContains(response, '<h2>Model with verbose name onlys</h2>')\n+        self.assertNotContains(response, 'Add another Model with verbose name only')\n+        # Model with verbose name plural.\n+        self.assertContains(response, '<h2>Childs with verbose name plurals</h2>')\n+        self.assertContains(response, 'Add another Childs with verbose name plural')\n+        self.assertNotContains(response, '<h2>Model with verbose name plural only</h2>')\n+        # Model with both verbose names.\n+        self.assertContains(response, '<h2>Childs with both verbose namess</h2>')\n+        self.assertContains(response, 'Add another Childs with both verbose names')\n+        self.assertNotContains(response, '<h2>Model with both - plural name</h2>')\n+        self.assertNotContains(response, 'Add another Model with both - name')\n+\n     def test_verbose_name_plural_inline(self):\n         class NonVerboseProfileInline(TabularInline):\n             model = Profile\n", "problem_statement": "Use Admin Inline verbose_name as default for Inline verbose_name_plural\nDescription\n\t\nDjango allows specification of a verbose_name and a verbose_name_plural for Inline classes in admin views. However, verbose_name_plural for an Inline is not currently based on a specified verbose_name. Instead, it continues to be based on the model name, or an a verbose_name specified in the model's Meta class. This was confusing to me initially (I didn't understand why I had to specify both name forms for an Inline if I wanted to overrule the default name), and seems inconsistent with the approach for a model's Meta class (which does automatically base the plural form on a specified verbose_name). I propose that verbose_name_plural for an Inline class should by default be based on the verbose_name for an Inline if that is specified.\nI have written a patch to implement this, including tests. Would be happy to submit that.\n", "hints_text": "Please push your patch as a \u200bDjango pull request.", "created_at": "2020-11-23T04:39:05Z", "version": "4.0", "FAIL_TO_PASS": "[\"test_verbose_name_inline (admin_inlines.tests.TestVerboseNameInlineForms)\"]", "PASS_TO_PASS": "[\"Regression for #9362\", \"test_deleting_inline_with_protected_delete_does_not_validate (admin_inlines.tests.TestInlineProtectedOnDelete)\", \"test_all_inline_media (admin_inlines.tests.TestInlineMedia)\", \"test_inline_media_only_base (admin_inlines.tests.TestInlineMedia)\", \"test_inline_media_only_inline (admin_inlines.tests.TestInlineMedia)\", \"test_both_verbose_names_inline (admin_inlines.tests.TestVerboseNameInlineForms)\", \"test_verbose_name_plural_inline (admin_inlines.tests.TestVerboseNameInlineForms)\", \"test_add_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_extra_inlines_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_get_to_change_url_is_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_inline_delete_buttons_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_inlines_are_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_main_model_is_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_post_to_change_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_submit_line_shows_only_close_button (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_inline_add_fk_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_fk_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_m2m_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_add_change_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_all_perms (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_change_del_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_change_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_change_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions)\", \"Admin inline should invoke local callable when its name is listed in readonly_fields\", \"can_delete should be passed to inlineformset factory.\", \"An object can be created with inlines when it inherits another class.\", \"test_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline)\", \"A model form with a form field specified (TitleForm.title1) should have\", \"SomeChildModelForm.__init__() overrides the label of a form field.\", \"test_custom_get_extra_form (admin_inlines.tests.TestInline)\", \"test_custom_min_num (admin_inlines.tests.TestInline)\", \"The \\\"View on Site\\\" link is correct for models with a custom primary key\", \"The inlines' model field help texts are displayed when using both the\", \"test_inline_editable_pk (admin_inlines.tests.TestInline)\", \"#18263 -- Make sure hidden fields don't get a column in tabular inlines\", \"test_inline_nonauto_noneditable_inherited_pk (admin_inlines.tests.TestInline)\", \"test_inline_nonauto_noneditable_pk (admin_inlines.tests.TestInline)\", \"test_inline_primary (admin_inlines.tests.TestInline)\", \"test_inlines_plural_heading_foreign_key (admin_inlines.tests.TestInline)\", \"Inlines `show_change_link` for registered models when enabled.\", \"Inlines `show_change_link` disabled for unregistered models.\", \"test_inlines_singular_heading_one_to_one (admin_inlines.tests.TestInline)\", \"The \\\"View on Site\\\" link is correct for locales that use thousand\", \"Autogenerated many-to-many inlines are displayed correctly (#13407)\", \"min_num and extra determine number of forms.\", \"Admin inline `readonly_field` shouldn't invoke parent ModelAdmin callable\", \"test_non_editable_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline)\", \"Multiple inlines with related_name='+' have correct form prefixes.\", \"Inlines without change permission shows field inputs on add form.\", \"Bug #13174.\", \"test_stacked_inline_edit_form_contains_has_original_class (admin_inlines.tests.TestInline)\", \"Field names are included in the context to output a field-specific\", \"Inlines `show_change_link` disabled by default.\", \"Tabular inlines use ModelForm.Meta.help_texts and labels for read-only\", \"non_field_errors are displayed correctly, including the correct value\"]", "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/contrib/admin/options.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 1bd6a7a0acc11e249fca11c017505ad39f15ebf6\nAuthor: Siburg <jelle.sjoerdsma@gmail.com>\nDate:   Wed Sep 8 11:19:35 2021 +0200\n\n    Refs #32219 -- Added admin model inline tests for verbose names.\n    \n    Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>\n\ndiff --git a/tests/admin_inlines/models.py b/tests/admin_inlines/models.py\nindex a0a9093a5b..900eb34fca 100644\n--- a/tests/admin_inlines/models.py\n+++ b/tests/admin_inlines/models.py\n@@ -337,3 +337,19 @@ class Profile(models.Model):\n     collection = models.ForeignKey(ProfileCollection, models.SET_NULL, blank=True, null=True)\n     first_name = models.CharField(max_length=100)\n     last_name = models.CharField(max_length=100)\n+\n+\n+class VerboseNameProfile(Profile):\n+    class Meta:\n+        verbose_name = 'Model with verbose name only'\n+\n+\n+class VerboseNamePluralProfile(Profile):\n+    class Meta:\n+        verbose_name_plural = 'Model with verbose name plural only'\n+\n+\n+class BothVerboseNameProfile(Profile):\n+    class Meta:\n+        verbose_name = 'Model with both - name'\n+        verbose_name_plural = 'Model with both - plural name'\ndiff --git a/tests/admin_inlines/tests.py b/tests/admin_inlines/tests.py\nindex 74b10d80b3..261c4f0148 100644\n--- a/tests/admin_inlines/tests.py\n+++ b/tests/admin_inlines/tests.py\n@@ -8,11 +8,12 @@ from django.urls import reverse\n \n from .admin import InnerInline, site as admin_site\n from .models import (\n-    Author, BinaryTree, Book, Chapter, Child, ChildModel1, ChildModel2,\n-    Fashionista, FootNote, Holder, Holder2, Holder3, Holder4, Inner, Inner2,\n-    Inner3, Inner4Stacked, Inner4Tabular, Novel, OutfitItem, Parent,\n-    ParentModelWithCustomPk, Person, Poll, Profile, ProfileCollection,\n-    Question, Sighting, SomeChildModel, SomeParentModel, Teacher,\n+    Author, BinaryTree, Book, BothVerboseNameProfile, Chapter, Child,\n+    ChildModel1, ChildModel2, Fashionista, FootNote, Holder, Holder2, Holder3,\n+    Holder4, Inner, Inner2, Inner3, Inner4Stacked, Inner4Tabular, Novel,\n+    OutfitItem, Parent, ParentModelWithCustomPk, Person, Poll, Profile,\n+    ProfileCollection, Question, Sighting, SomeChildModel, SomeParentModel,\n+    Teacher, VerboseNamePluralProfile, VerboseNameProfile,\n )\n \n INLINE_CHANGELINK_HTML = 'class=\"inlinechangelink\">Change</a>'\n@@ -962,6 +963,115 @@ class TestReadOnlyChangeViewInlinePermissions(TestCase):\n         self.assertNotContains(response, 'id=\"id_question_set-0-text\"')\n \n \n+@override_settings(ROOT_URLCONF='admin_inlines.urls')\n+class TestVerboseNameInlineForms(TestDataMixin, TestCase):\n+    factory = RequestFactory()\n+\n+    def test_verbose_name_plural_inline(self):\n+        class NonVerboseProfileInline(TabularInline):\n+            model = Profile\n+            verbose_name_plural = 'Non-verbose childs'\n+\n+        class VerboseNameProfileInline(TabularInline):\n+            model = VerboseNameProfile\n+            verbose_name_plural = 'Childs with verbose name'\n+\n+        class VerboseNamePluralProfileInline(TabularInline):\n+            model = VerboseNamePluralProfile\n+            verbose_name_plural = 'Childs with verbose name plural'\n+\n+        class BothVerboseNameProfileInline(TabularInline):\n+            model = BothVerboseNameProfile\n+            verbose_name_plural = 'Childs with both verbose names'\n+\n+        modeladmin = ModelAdmin(ProfileCollection, admin_site)\n+        modeladmin.inlines = [\n+            NonVerboseProfileInline,\n+            VerboseNameProfileInline,\n+            VerboseNamePluralProfileInline,\n+            BothVerboseNameProfileInline,\n+        ]\n+        obj = ProfileCollection.objects.create()\n+        url = reverse('admin:admin_inlines_profilecollection_change', args=(obj.pk,))\n+        request = self.factory.get(url)\n+        request.user = self.superuser\n+        response = modeladmin.changeform_view(request)\n+        # Non-verbose model.\n+        self.assertContains(response, '<h2>Non-verbose childs</h2>')\n+        self.assertContains(response, 'Add another Profile')\n+        self.assertNotContains(response, '<h2>Profiles</h2>')\n+        # Model with verbose name.\n+        self.assertContains(response, '<h2>Childs with verbose name</h2>')\n+        self.assertContains(response, 'Add another Model with verbose name only')\n+        self.assertNotContains(response, '<h2>Model with verbose name onlys</h2>')\n+        # Model with verbose name plural.\n+        self.assertContains(response, '<h2>Childs with verbose name plural</h2>')\n+        self.assertContains(response, 'Add another Profile')\n+        self.assertNotContains(response, '<h2>Model with verbose name plural only</h2>')\n+        # Model with both verbose names.\n+        self.assertContains(response, '<h2>Childs with both verbose names</h2>')\n+        self.assertContains(response, 'Add another Model with both - name')\n+        self.assertNotContains(response, '<h2>Model with both - plural name</h2>')\n+\n+    def test_both_verbose_names_inline(self):\n+        class NonVerboseProfileInline(TabularInline):\n+            model = Profile\n+            verbose_name = 'Non-verbose childs - name'\n+            verbose_name_plural = 'Non-verbose childs - plural name'\n+\n+        class VerboseNameProfileInline(TabularInline):\n+            model = VerboseNameProfile\n+            verbose_name = 'Childs with verbose name - name'\n+            verbose_name_plural = 'Childs with verbose name - plural name'\n+\n+        class VerboseNamePluralProfileInline(TabularInline):\n+            model = VerboseNamePluralProfile\n+            verbose_name = 'Childs with verbose name plural - name'\n+            verbose_name_plural = 'Childs with verbose name plural - plural name'\n+\n+        class BothVerboseNameProfileInline(TabularInline):\n+            model = BothVerboseNameProfile\n+            verbose_name = 'Childs with both - name'\n+            verbose_name_plural = 'Childs with both - plural name'\n+\n+        modeladmin = ModelAdmin(ProfileCollection, admin_site)\n+        modeladmin.inlines = [\n+            NonVerboseProfileInline,\n+            VerboseNameProfileInline,\n+            VerboseNamePluralProfileInline,\n+            BothVerboseNameProfileInline,\n+        ]\n+        obj = ProfileCollection.objects.create()\n+        url = reverse('admin:admin_inlines_profilecollection_change', args=(obj.pk,))\n+        request = self.factory.get(url)\n+        request.user = self.superuser\n+        response = modeladmin.changeform_view(request)\n+        self.assertNotContains(response, 'Add another Profile')\n+        # Non-verbose model.\n+        self.assertContains(response, '<h2>Non-verbose childs - plural name</h2>')\n+        self.assertContains(response, 'Add another Non-verbose childs - name')\n+        self.assertNotContains(response, '<h2>Profiles</h2>')\n+        # Model with verbose name.\n+        self.assertContains(response, '<h2>Childs with verbose name - plural name</h2>')\n+        self.assertContains(response, 'Add another Childs with verbose name - name')\n+        self.assertNotContains(response, '<h2>Model with verbose name onlys</h2>')\n+        # Model with verbose name plural.\n+        self.assertContains(\n+            response,\n+            '<h2>Childs with verbose name plural - plural name</h2>',\n+        )\n+        self.assertContains(\n+            response,\n+            'Add another Childs with verbose name plural - name',\n+        )\n+        self.assertNotContains(response, '<h2>Model with verbose name plural only</h2>')\n+        # Model with both verbose names.\n+        self.assertContains(response, '<h2>Childs with both - plural name</h2>')\n+        self.assertContains(response, 'Add another Childs with both - name')\n+        self.assertNotContains(response, '<h2>Model with both - plural name</h2>')\n+        self.assertNotContains(response, 'Add another Model with both - name')\n+\n+\n @override_settings(ROOT_URLCONF='admin_inlines.urls')\n class SeleniumTests(AdminSeleniumTestCase):\n \ndiff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex dadd4acfa1..1e5fab917e 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2037,10 +2037,13 @@ class InlineModelAdmin(BaseModelAdmin):\n         self.opts = self.model._meta\n         self.has_registered_model = admin_site.is_registered(self.model)\n         super().__init__()\n+        if self.verbose_name_plural is None:\n+            if self.verbose_name is None:\n+                self.verbose_name_plural = self.model._meta.verbose_name_plural\n+            else:\n+                self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n         if self.verbose_name is None:\n             self.verbose_name = self.model._meta.verbose_name\n-        if self.verbose_name_plural is None:\n-            self.verbose_name_plural = self.model._meta.verbose_name_plural\n \n     @property\n     def media(self):\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: asgiref>=3.3.2 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0.dev20210908093206) (3.8.1)\nRequirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0.dev20210908093206) (2024.2)\nRequirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0.dev20210908093206) (0.5.1)\nRequirement already satisfied: typing-extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from asgiref>=3.3.2->Django==4.0.dev20210908093206) (4.12.2)\nBuilding wheels for collected packages: Django\n  Building editable for Django (pyproject.toml): started\n  Building editable for Django (pyproject.toml): finished with status 'done'\n  Created wheel for Django: filename=Django-4.0.dev20210908093206-0.editable-py3-none-any.whl size=26633 sha256=51edc0fbcf195dee07490cea4197009ab582e0657b8eb5514f1740bdca2a545e\n  Stored in directory: /tmp/pip-ephem-wheel-cache-vcsdeh4e/wheels/b2/50/f1/218f2e9962a80d01a4b1297698978f9fb3b60056aa24343f24\nSuccessfully built Django\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 4.0.dev20210908093206\n    Uninstalling Django-4.0.dev20210908093206:\n      Successfully uninstalled Django-4.0.dev20210908093206\nSuccessfully installed Django-4.0.dev20210908093206\nTesting against Django installed in '/testbed/django'\nImporting application admin_inlines\nFound 75 test(s).\nSkipping setup of unused database(s): other.\nOperations to perform:\n  Synchronize unmigrated apps: admin_inlines, auth, contenttypes, messages, sessions, staticfiles\n  Apply all migrations: admin, sites\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_content_type\n    Creating table auth_permission\n    Creating table auth_group\n    Creating table auth_user\n    Creating table django_session\n    Creating table admin_inlines_parent\n    Creating table admin_inlines_teacher\n    Creating table admin_inlines_child\n    Creating table admin_inlines_book\n    Creating table admin_inlines_author\n    Creating table admin_inlines_nonautopkbook\n    Creating table admin_inlines_nonautopkbookchild\n    Creating table admin_inlines_editablepkbook\n    Creating table admin_inlines_holder\n    Creating table admin_inlines_inner\n    Creating table admin_inlines_holder2\n    Creating table admin_inlines_inner2\n    Creating table admin_inlines_holder3\n    Creating table admin_inlines_inner3\n    Creating table admin_inlines_holder4\n    Creating table admin_inlines_inner4stacked\n    Creating table admin_inlines_inner4tabular\n    Creating table admin_inlines_holder5\n    Creating table admin_inlines_inner5stacked\n    Creating table admin_inlines_inner5tabular\n    Creating table admin_inlines_person\n    Creating table admin_inlines_outfititem\n    Creating table admin_inlines_fashionista\n    Creating table admin_inlines_shoppingweakness\n    Creating table admin_inlines_titlecollection\n    Creating table admin_inlines_title\n    Creating table admin_inlines_poll\n    Creating table admin_inlines_question\n    Creating table admin_inlines_novel\n    Creating table admin_inlines_chapter\n    Creating table admin_inlines_footnote\n    Creating table admin_inlines_capofamiglia\n    Creating table admin_inlines_consigliere\n    Creating table admin_inlines_sottocapo\n    Creating table admin_inlines_readonlyinline\n    Creating table admin_inlines_parentmodelwithcustompk\n    Creating table admin_inlines_childmodel1\n    Creating table admin_inlines_childmodel2\n    Creating table admin_inlines_binarytree\n    Creating table admin_inlines_lifeform\n    Creating table admin_inlines_extraterrestrial\n    Creating table admin_inlines_sighting\n    Creating table admin_inlines_someparentmodel\n    Creating table admin_inlines_somechildmodel\n    Creating table admin_inlines_course\n    Creating table admin_inlines_class\n    Creating table admin_inlines_profilecollection\n    Creating table admin_inlines_profile\n    Creating table admin_inlines_verbosenameprofile\n    Creating table admin_inlines_verbosenamepluralprofile\n    Creating table admin_inlines_bothverbosenameprofile\n    Running deferred SQL...\nRunning migrations:\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying sites.0001_initial... OK\n  Applying sites.0002_alter_domain_unique... OK\nSystem check identified no issues (0 silenced).\n", {}]