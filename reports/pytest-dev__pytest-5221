[{"repo": "pytest-dev/pytest", "instance_id": "pytest-dev__pytest-5221", "base_commit": "4a2fdce62b73944030cff9b3e52862868ca9584d", "patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -1342,17 +1342,19 @@ def _showfixtures_main(config, session):\n                 currentmodule = module\n         if verbose <= 0 and argname[0] == \"_\":\n             continue\n+        tw.write(argname, green=True)\n+        if fixturedef.scope != \"function\":\n+            tw.write(\" [%s scope]\" % fixturedef.scope, cyan=True)\n         if verbose > 0:\n-            funcargspec = \"%s -- %s\" % (argname, bestrel)\n-        else:\n-            funcargspec = argname\n-        tw.line(funcargspec, green=True)\n+            tw.write(\" -- %s\" % bestrel, yellow=True)\n+        tw.write(\"\\n\")\n         loc = getlocation(fixturedef.func, curdir)\n         doc = fixturedef.func.__doc__ or \"\"\n         if doc:\n             write_docstring(tw, doc)\n         else:\n             tw.line(\"    %s: no docstring available\" % (loc,), red=True)\n+        tw.line()\n \n \n def write_docstring(tw, doc, indent=\"    \"):\n", "test_patch": "diff --git a/testing/python/fixtures.py b/testing/python/fixtures.py\n--- a/testing/python/fixtures.py\n+++ b/testing/python/fixtures.py\n@@ -3037,11 +3037,25 @@ def test_funcarg_compat(self, testdir):\n \n     def test_show_fixtures(self, testdir):\n         result = testdir.runpytest(\"--fixtures\")\n-        result.stdout.fnmatch_lines([\"*tmpdir*\", \"*temporary directory*\"])\n+        result.stdout.fnmatch_lines(\n+            [\n+                \"tmpdir_factory [[]session scope[]]\",\n+                \"*for the test session*\",\n+                \"tmpdir\",\n+                \"*temporary directory*\",\n+            ]\n+        )\n \n     def test_show_fixtures_verbose(self, testdir):\n         result = testdir.runpytest(\"--fixtures\", \"-v\")\n-        result.stdout.fnmatch_lines([\"*tmpdir*--*tmpdir.py*\", \"*temporary directory*\"])\n+        result.stdout.fnmatch_lines(\n+            [\n+                \"tmpdir_factory [[]session scope[]] -- *tmpdir.py*\",\n+                \"*for the test session*\",\n+                \"tmpdir -- *tmpdir.py*\",\n+                \"*temporary directory*\",\n+            ]\n+        )\n \n     def test_show_fixtures_testmodule(self, testdir):\n         p = testdir.makepyfile(\n", "problem_statement": "Display fixture scope with `pytest --fixtures`\nIt would be useful to show fixture scopes with `pytest --fixtures`; currently the only way to learn the scope of a fixture is look at the docs (when that is documented) or at the source code.\n", "hints_text": "", "created_at": "2019-05-06T22:36:44Z", "version": "4.4", "FAIL_TO_PASS": "[\"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_verbose\"]", "PASS_TO_PASS": "[\"testing/python/fixtures.py::test_getfuncargnames\", \"testing/python/fixtures.py::TestFillFixtures::test_fillfuncargs_exposed\", \"testing/python/fixtures.py::TestShowFixtures::test_fixture_disallow_twice\", \"testing/python/fixtures.py::test_call_fixture_function_error\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookupfails\", \"testing/python/fixtures.py::TestFillFixtures::test_detect_recursive_dependency_error\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_basic\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_modulelevel\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_classlevel\", \"testing/python/fixtures.py::TestFillFixtures::test_conftest_funcargs_only_available_in_subdir\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_module_class\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_module\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_plugin\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_plugin_plugin\", \"testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_module\", \"testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_module\", \"testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_autouse_fixture_plugin\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_error\", \"testing/python/fixtures.py::TestFillFixtures::test_fixture_excinfo_leak\", \"testing/python/fixtures.py::TestRequestBasic::test_request_attributes\", \"testing/python/fixtures.py::TestRequestBasic::test_request_attributes_method\", \"testing/python/fixtures.py::TestRequestBasic::test_request_contains_funcarg_arg2fixturedefs\", \"testing/python/fixtures.py::TestRequestBasic::test_request_garbage\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_recursive\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_teardown\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfixturevalue]\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfuncargvalue]\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup_module\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_partial_setup_failure\", \"testing/python/fixtures.py::TestRequestBasic::test_request_subrequest_addfinalizer_exceptions\", \"testing/python/fixtures.py::TestRequestBasic::test_request_getmodulepath\", \"testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames\", \"testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames_dynamic_fixture\", \"testing/python/fixtures.py::TestRequestBasic::test_funcargnames_compatattr\", \"testing/python/fixtures.py::TestRequestBasic::test_setupdecorator_and_xunit\", \"testing/python/fixtures.py::TestRequestBasic::test_fixtures_sub_subdir_normalize_sep\", \"testing/python/fixtures.py::TestRequestBasic::test_show_fixtures_color_yes\", \"testing/python/fixtures.py::TestRequestBasic::test_newstyle_with_request\", \"testing/python/fixtures.py::TestRequestBasic::test_setupcontext_no_param\", \"testing/python/fixtures.py::TestRequestMarking::test_applymarker\", \"testing/python/fixtures.py::TestRequestMarking::test_accesskeywords\", \"testing/python/fixtures.py::TestRequestMarking::test_accessmarker_dynamic\", \"testing/python/fixtures.py::TestFixtureUsages::test_noargfixturedec\", \"testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs\", \"testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch\", \"testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch_issue660\", \"testing/python/fixtures.py::TestFixtureUsages::test_invalid_scope\", \"testing/python/fixtures.py::TestFixtureUsages::test_funcarg_parametrized_and_used_twice\", \"testing/python/fixtures.py::TestFixtureUsages::test_factory_uses_unknown_funcarg_as_dependency_error\", \"testing/python/fixtures.py::TestFixtureUsages::test_factory_setup_as_classes_fails\", \"testing/python/fixtures.py::TestFixtureUsages::test_request_can_be_overridden\", \"testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_marker\", \"testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_ini\", \"testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_seen_in_showmarkers\", \"testing/python/fixtures.py::TestFixtureUsages::test_request_instance_issue203\", \"testing/python/fixtures.py::TestFixtureUsages::test_fixture_parametrized_with_iterator\", \"testing/python/fixtures.py::TestFixtureUsages::test_setup_functions_as_fixtures\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_evil_objects_issue214\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest_and_module_and_class\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_relative_node_ids\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_xunit_fixture\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_fixture_complex\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_collect_custom_items\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_parsefactories_conftest\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_two_classes_separated_autouse\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_setup_at_classlevel\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_callables_nocode\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_conftests\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_module_and_two_classes\", \"testing/python/fixtures.py::TestAutouseManagement::test_autouse_conftest_mid_directory\", \"testing/python/fixtures.py::TestAutouseManagement::test_funcarg_and_setup\", \"testing/python/fixtures.py::TestAutouseManagement::test_uses_parametrized_resource\", \"testing/python/fixtures.py::TestAutouseManagement::test_session_parametrized_function\", \"testing/python/fixtures.py::TestAutouseManagement::test_class_function_parametrization_finalization\", \"testing/python/fixtures.py::TestAutouseManagement::test_scope_ordering\", \"testing/python/fixtures.py::TestAutouseManagement::test_parametrization_setup_teardown_ordering\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_autouse_before_explicit\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p00]\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p01]\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p00]\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p01]\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize\", \"testing/python/fixtures.py::TestFixtureMarker::test_multiple_parametrization_issue_736\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,val']\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[['fixt',\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[('fixt',\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_session\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc_two_fix\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_exc\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_module_uses_session\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_module_and_finalizer\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch_various\", \"testing/python/fixtures.py::TestFixtureMarker::test_register_only_with_mark\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_and_scope\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order\", \"testing/python/fixtures.py::TestFixtureMarker::test_module_parametrized_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_dynamic_parametrized_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_class_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order_higher_scope_first\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrized_fixture_teardown_order\", \"testing/python/fixtures.py::TestFixtureMarker::test_fixture_finalizer\", \"testing/python/fixtures.py::TestFixtureMarker::test_class_scope_with_normal_tests\", \"testing/python/fixtures.py::TestFixtureMarker::test_request_is_clean\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_lifecycle\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_function_scoped_finalizers_called\", \"testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[session]\", \"testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[function]\", \"testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[module]\", \"testing/python/fixtures.py::TestFixtureMarker::test_class_scope_parametrization_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_setup_function\", \"testing/python/fixtures.py::TestFixtureMarker::test_fixture_marked_function_not_collected_as_test\", \"testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids\", \"testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids_yieldfixture\", \"testing/python/fixtures.py::TestFixtureMarker::test_deterministic_fixture_collection\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[session--fspath\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[module-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[class-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[function-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[session--fspath\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[module-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[class-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[function-module\", \"testing/python/fixtures.py::TestErrors::test_subfactory_missing_funcarg\", \"testing/python/fixtures.py::TestErrors::test_issue498_fixture_finalizer_failing\", \"testing/python/fixtures.py::TestErrors::test_setupfunc_missing_funcarg\", \"testing/python/fixtures.py::TestShowFixtures::test_funcarg_compat\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_testmodule\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[True]\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[False]\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_trimmed_doc\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc_first_line_unindented\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_in_class\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_different_files\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_with_same_name\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[yield_fixture]\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_fixture\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_test\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_external_fixture\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_non_relative_path\", \"testing/python/fixtures.py::test_pytest_fixture_setup_and_post_finalizer_hook\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[mark]\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[autouse]\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_with_native_fixtures\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_scopes_reordered\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_same_scope_closer_root_first\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_all_scopes_complex\", \"testing/python/fixtures.py::TestScopeOrdering::test_multiple_packages\"]", "environment_setup_commit": "4ccaa987d47566e3907f2f74167c4ab7997f622f"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   src/_pytest/python.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 4a2fdce62b73944030cff9b3e52862868ca9584d\nMerge: f5c1f3df7 8f23e19bc\nAuthor: Bruno Oliveira <nicoddemus@gmail.com>\nDate:   Sun May 5 21:33:31 2019 -0300\n\n    Emit a warning for record_property when used with xunit2 (#5204)\n    \n    Emit a warning for record_property when used with xunit2\n\ndiff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 377357846..18d909855 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -1342,17 +1342,19 @@ def _showfixtures_main(config, session):\n                 currentmodule = module\n         if verbose <= 0 and argname[0] == \"_\":\n             continue\n+        tw.write(argname, green=True)\n+        if fixturedef.scope != \"function\":\n+            tw.write(\" [%s scope]\" % fixturedef.scope, cyan=True)\n         if verbose > 0:\n-            funcargspec = \"%s -- %s\" % (argname, bestrel)\n-        else:\n-            funcargspec = argname\n-        tw.line(funcargspec, green=True)\n+            tw.write(\" -- %s\" % bestrel, yellow=True)\n+        tw.write(\"\\n\")\n         loc = getlocation(fixturedef.func, curdir)\n         doc = fixturedef.func.__doc__ or \"\"\n         if doc:\n             write_docstring(tw, doc)\n         else:\n             tw.line(\"    %s: no docstring available\" % (loc,), red=True)\n+        tw.line()\n \n \n def write_docstring(tw, doc, indent=\"    \"):\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: py>=1.5.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (1.11.0)\nRequirement already satisfied: six>=1.10.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (1.16.0)\nRequirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (68.0.0)\nRequirement already satisfied: attrs>=17.4.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (23.1.0)\nRequirement already satisfied: atomicwrites>=1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (1.4.1)\nRequirement already satisfied: pluggy>=0.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (0.13.1)\nRequirement already satisfied: more-itertools>=4.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest==4.4.2.dev174+g4a2fdce62.d20220101) (10.1.0)\nBuilding wheels for collected packages: pytest\n  Building editable for pytest (pyproject.toml): started\n  Building editable for pytest (pyproject.toml): finished with status 'done'\n  Created wheel for pytest: filename=pytest-4.4.2.dev174+g4a2fdce62.d20220101-0.editable-py2.py3-none-any.whl size=4653 sha256=4a76e4f5ded0943efbd3a45eea5af78e2220bb236e2fc9651b8b830e91d31533\n  Stored in directory: /tmp/pip-ephem-wheel-cache-6wkm0gql/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4\nSuccessfully built pytest\nInstalling collected packages: pytest\n  Attempting uninstall: pytest\n    Found existing installation: pytest 4.4.2.dev174+g4a2fdce62\n    Uninstalling pytest-4.4.2.dev174+g4a2fdce62:\n      Successfully uninstalled pytest-4.4.2.dev174+g4a2fdce62\nSuccessfully installed pytest-4.4.2.dev174+g4a2fdce62.d20220101\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /testbed, inifile: tox.ini\ncollected 173 items\n\ntesting/python/fixtures.py ............................................. [ 26%]\n............................x........................................... [ 67%]\n........................................................                 [100%]\n\n==================================== PASSES ====================================\n__________________ TestFillFixtures.test_funcarg_lookupfails ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_lookupfails0\ncollected 1 item\n\ntest_funcarg_lookupfails.py E                                            [100%]\n\n==================================== ERRORS ====================================\n_________________________ ERROR at setup of test_func __________________________\nfile /tmp/pytest-of-root/pytest-0/test_funcarg_lookupfails0/test_funcarg_lookupfails.py, line 9\n  def test_func(some):\nE       fixture 'some' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, xyzsomething\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_funcarg_lookupfails0/test_funcarg_lookupfails.py:9\n=========================== 1 error in 0.01 seconds ============================\n___________ TestFillFixtures.test_detect_recursive_dependency_error ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_detect_recursive_dependency_error0\ncollected 1 item\n\ntest_detect_recursive_dependency_error.py E                              [100%]\n\n==================================== ERRORS ====================================\n____________________________ ERROR at setup of test ____________________________\nfile /tmp/pytest-of-root/pytest-0/test_detect_recursive_dependency_error0/test_detect_recursive_dependency_error.py, line 14\n  def test(fix1):\nfile /tmp/pytest-of-root/pytest-0/test_detect_recursive_dependency_error0/test_detect_recursive_dependency_error.py, line 4\n  @pytest.fixture\n  def fix1(fix2):\nfile /tmp/pytest-of-root/pytest-0/test_detect_recursive_dependency_error0/test_detect_recursive_dependency_error.py, line 9\n  @pytest.fixture\n  def fix2(fix1):\nE       recursive dependency involving fixture 'fix1' detected\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, fix1, fix2, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_detect_recursive_dependency_error0/test_detect_recursive_dependency_error.py:9\n=========================== 1 error in 0.01 seconds ============================\n_____________________ TestFillFixtures.test_funcarg_basic ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_basic0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n_______________ TestFillFixtures.test_funcarg_lookup_modulelevel _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_lookup_modulelevel0\ncollected 2 items\n\ntest_funcarg_lookup_modulelevel.py ..                                    [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n_______________ TestFillFixtures.test_funcarg_lookup_classlevel ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_lookup_classlevel0\ncollected 1 item\n\ntest_funcarg_lookup_classlevel.py .                                      [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_______ TestFillFixtures.test_conftest_funcargs_only_available_in_subdir _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_conftest_funcargs_only_available_in_subdir0\ncollecting ... collected 2 items\n\nsub1/test_in_sub1.py::test_1 PASSED                                      [ 50%]\nsub2/test_in_sub2.py::test_2 PASSED                                      [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n______________ TestFillFixtures.test_extend_fixture_module_class _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_module_class0\ncollected 1 item\n\ntest_extend_fixture_module_class.py .                                    [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_module_class0\ncollected 1 item\n\ntest_extend_fixture_module_class.py .                                    [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n_____________ TestFillFixtures.test_extend_fixture_conftest_module _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_conftest_module0\ncollected 1 item\n\ntest_extend_fixture_conftest_module.py .                                 [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_conftest_module0\ncollected 1 item\n\ntest_extend_fixture_conftest_module.py .                                 [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n____________ TestFillFixtures.test_extend_fixture_conftest_conftest ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_conftest_conftest0\ncollected 1 item\n\npkg/test_spam.py .                                                       [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_conftest_conftest0\ncollected 1 item\n\npkg/test_spam.py .                                                       [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n_____________ TestFillFixtures.test_extend_fixture_conftest_plugin _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_conftest_plugin0\ncollected 1 item\n\ntest_extend_fixture_conftest_plugin.py .\n\n=========================== 1 passed in 0.00 seconds ===========================\n______________ TestFillFixtures.test_extend_fixture_plugin_plugin ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_extend_fixture_plugin_plugin0\ncollected 1 item\n\ntest_extend_fixture_plugin_plugin.py .                                   [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_____ TestFillFixtures.test_override_parametrized_fixture_conftest_module ______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_conftest_module0\ncollected 1 item\n\ntest_override_parametrized_fixture_conftest_module.py .                  [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_conftest_module0\ncollected 1 item\n\ntest_override_parametrized_fixture_conftest_module.py .                  [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n____ TestFillFixtures.test_override_parametrized_fixture_conftest_conftest _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_conftest_conftest0\ncollected 1 item\n\nsubdir/test_spam.py .                                                    [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_conftest_conftest0\ncollected 1 item\n\nsubdir/test_spam.py .                                                    [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n___ TestFillFixtures.test_override_non_parametrized_fixture_conftest_module ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_non_parametrized_fixture_conftest_module0\ncollected 3 items\n\ntest_override_non_parametrized_fixture_conftest_module.py ...            [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_non_parametrized_fixture_conftest_module0\ncollected 3 items\n\ntest_override_non_parametrized_fixture_conftest_module.py ...            [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n__ TestFillFixtures.test_override_non_parametrized_fixture_conftest_conftest ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_non_parametrized_fixture_conftest_conftest0\ncollected 3 items\n\nsubdir/test_spam.py ...                                                  [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_non_parametrized_fixture_conftest_conftest0\ncollected 3 items\n\nsubdir/test_spam.py ...                                                  [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n_ TestFillFixtures.test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest _\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest0\ncollected 3 items\n\nsubdir/test_spam.py ...                                                  [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest0\ncollected 3 items\n\nsubdir/test_spam.py ...                                                  [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n_________________ TestFillFixtures.test_autouse_fixture_plugin _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_autouse_fixture_plugin0\ncollected 1 item\n\ntest_autouse_fixture_plugin.py .                                         [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n__________________ TestFillFixtures.test_funcarg_lookup_error __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_lookup_error0\ncollected 1 item\n\ntest_funcarg_lookup_error.py E                                           [100%]\n\n==================================== ERRORS ====================================\n_____________________ ERROR at setup of test_lookup_error ______________________\nfile /tmp/pytest-of-root/pytest-0/test_funcarg_lookup_error0/test_funcarg_lookup_error.py, line 1\n  def test_lookup_error(unknown):\nE       fixture 'unknown' not found\n>       available fixtures: a_fixture, b_fixture, c_fixture, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, d_fixture, doctest_namespace, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_funcarg_lookup_error0/test_funcarg_lookup_error.py:1\n=========================== 1 error in 0.00 seconds ============================\n__________________ TestFillFixtures.test_fixture_excinfo_leak __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_fixture_excinfo_leak0\ncollected 1 item\n\ntest_fixture_excinfo_leak.py .                                           [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___________________ TestRequestBasic.test_request_attributes ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_attributes0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n_______________ TestRequestBasic.test_request_attributes_method ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_attributes_method0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n________ TestRequestBasic.test_request_contains_funcarg_arg2fixturedefs ________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_contains_funcarg_arg2fixturedefs0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n____________________ TestRequestBasic.test_request_garbage _____________________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-0/test_request_garbage0/runpytest-0\n     in: /tmp/pytest-of-root/pytest-0/test_request_garbage0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_garbage0\ncollected 1 item\n\ntest_request_garbage.py .                                                [100%]\n\n=========================== 1 passed in 0.02 seconds ===========================\n_______________ TestRequestBasic.test_getfixturevalue_recursive ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_getfixturevalue_recursive0\ncollected 1 item\n\ntest_getfixturevalue_recursive.py .                                      [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n________________ TestRequestBasic.test_getfixturevalue_teardown ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_getfixturevalue_teardown0\ncollected 2 items\n\ntest_getfixturevalue_teardown.py ..                                      [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n____________ TestRequestBasic.test_getfixturevalue[getfixturevalue] ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_getfixturevalue0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n____________ TestRequestBasic.test_getfixturevalue[getfuncargvalue] ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_getfixturevalue1\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n__________________ TestRequestBasic.test_request_addfinalizer __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_addfinalizer0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n[]\n___________ TestRequestBasic.test_request_addfinalizer_failing_setup ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_addfinalizer_failing_setup0\ncollected 2 items\n\ntest_request_addfinalizer_failing_setup.py E.\n\n==================================== ERRORS ====================================\n__________________________ ERROR at setup of test_fix __________________________\n\nrequest = <SubRequest 'myfix' for <Function test_fix>>\n\n    @pytest.fixture\n    def myfix(request):\n        request.addfinalizer(values.pop)\n>       assert 0\nE       assert 0\n\ntest_request_addfinalizer_failing_setup.py:6: AssertionError\n====================== 1 passed, 1 error in 0.02 seconds =======================\n_______ TestRequestBasic.test_request_addfinalizer_failing_setup_module ________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_addfinalizer_failing_setup_module0\ncollected 1 item\n\ntest_request_addfinalizer_failing_setup_module.py E\n\n==================================== ERRORS ====================================\n__________________________ ERROR at setup of test_fix __________________________\n\nrequest = <SubRequest 'myfix' for <Function test_fix>>\n\n    @pytest.fixture(scope=\"module\")\n    def myfix(request):\n        request.addfinalizer(values.pop)\n        request.addfinalizer(values.pop)\n>       assert 0\nE       assert 0\n\ntest_request_addfinalizer_failing_setup_module.py:7: AssertionError\n=========================== 1 error in 0.01 seconds ============================\n_______ TestRequestBasic.test_request_addfinalizer_partial_setup_failure _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_addfinalizer_partial_setup_failure0\ncollected 2 items\n\ntest_request_addfinalizer_partial_setup_failure.py E.                    [100%]\n\n==================================== ERRORS ====================================\n_________________________ ERROR at setup of test_func __________________________\nfile /tmp/pytest-of-root/pytest-0/test_request_addfinalizer_partial_setup_failure0/test_request_addfinalizer_partial_setup_failure.py, line 6\n  def test_func(something, missingarg):\nE       fixture 'missingarg' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, something, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_request_addfinalizer_partial_setup_failure0/test_request_addfinalizer_partial_setup_failure.py:6\n====================== 1 passed, 1 error in 0.01 seconds =======================\n_______ TestRequestBasic.test_request_subrequest_addfinalizer_exceptions _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_subrequest_addfinalizer_exceptions0\ncollected 2 items\n\ntest_request_subrequest_addfinalizer_exceptions.py .E.                   [100%]\n\n==================================== ERRORS ====================================\n_______________________ ERROR at teardown of test_first ________________________\n\n>   subrequest.addfinalizer(lambda: _excepts('excepts'))\n\ntest_request_subrequest_addfinalizer_exceptions.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nwhere = 'excepts'\n\n    def _excepts(where):\n>       raise Exception('Error in %s fixture' % where)\nE       Exception: Error in excepts fixture\n\ntest_request_subrequest_addfinalizer_exceptions.py:4: Exception\n====================== 2 passed, 1 error in 0.01 seconds =======================\n_________________ TestRequestBasic.test_request_getmodulepath __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_getmodulepath0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n__________________ TestRequestBasic.test_request_fixturenames __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_fixturenames0\ncollected 1 item\n\ntest_request_fixturenames.py .                                           [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n__________ TestRequestBasic.test_request_fixturenames_dynamic_fixture __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_fixturenames_dynamic_fixture0\ncollected 1 item\n\ntest_getfixturevalue_dynamic.py .                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n________________ TestRequestBasic.test_funcargnames_compatattr _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcargnames_compatattr0\ncollected 1 item\n\ntest_funcargnames_compatattr.py .                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n________________ TestRequestBasic.test_setupdecorator_and_xunit ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_setupdecorator_and_xunit0\ncollecting ... collected 3 items\n\ntest_setupdecorator_and_xunit.py::test_func PASSED                       [ 33%]\ntest_setupdecorator_and_xunit.py::TestClass::test_method PASSED          [ 66%]\ntest_setupdecorator_and_xunit.py::test_all PASSED                        [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n___________ TestRequestBasic.test_fixtures_sub_subdir_normalize_sep ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_fixtures_sub_subdir_normalize_sep0\ncollected 1 item\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------------------ fixtures defined from conftest ------------------------\narg1\n    tests/unit/conftest.py:3: no docstring available\n\n\n========================= no tests ran in 0.00 seconds =========================\n________________ TestRequestBasic.test_show_fixtures_color_yes _________________\n----------------------------- Captured stdout call -----------------------------\n\u001b[1m============================= test session starts ==============================\u001b[0m\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_color_yes0\ncollected 1 item\n\u001b[32mcache\u001b[0m\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\n\u001b[32mcapsys\u001b[0m\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\n\u001b[32mcapsysbinary\u001b[0m\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\n\u001b[32mcapfd\u001b[0m\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\n\u001b[32mcapfdbinary\u001b[0m\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\n\u001b[32mdoctest_namespace\u001b[0m\u001b[36m [session scope]\u001b[0m\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\n\u001b[32mpytestconfig\u001b[0m\u001b[36m [session scope]\u001b[0m\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\n\u001b[32mrecord_property\u001b[0m\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\n\u001b[32mrecord_xml_attribute\u001b[0m\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\n\u001b[32mcaplog\u001b[0m\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\n\u001b[32mmonkeypatch\u001b[0m\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\n\u001b[32mrecwarn\u001b[0m\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\n\u001b[32mtmpdir_factory\u001b[0m\u001b[36m [session scope]\u001b[0m\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\n\u001b[32mtmp_path_factory\u001b[0m\u001b[36m [session scope]\u001b[0m\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\n\u001b[32mtmpdir\u001b[0m\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\n\u001b[32mtmp_path\u001b[0m\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n\u001b[33m\u001b[1m========================= no tests ran in 0.01 seconds =========================\u001b[0m\n_________________ TestRequestBasic.test_newstyle_with_request __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_newstyle_with_request0\ncollected 1 item\n\ntest_newstyle_with_request.py .                                          [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_________________ TestRequestBasic.test_setupcontext_no_param __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setupcontext_no_param0\ncollected 2 items\n\ntest_setupcontext_no_param.py ..                                         [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n_____________________ TestRequestMarking.test_applymarker ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_applymarker0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n____________________ TestRequestMarking.test_accesskeywords ____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_accesskeywords0\ncollected 1 item\n\ntest_accesskeywords.py .                                                 [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_________________ TestRequestMarking.test_accessmarker_dynamic _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_accessmarker_dynamic0\ncollected 2 items\n\ntest_accessmarker_dynamic.py ..                                          [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n____________________ TestFixtureUsages.test_noargfixturedec ____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_noargfixturedec0\ncollected 1 item\n\ntest_noargfixturedec.py .                                                [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___________________ TestFixtureUsages.test_receives_funcargs ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_receives_funcargs0\ncollected 2 items\n\ntest_receives_funcargs.py ..                                             [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n___________ TestFixtureUsages.test_receives_funcargs_scope_mismatch ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_receives_funcargs_scope_mismatch0\ncollected 1 item\n\ntest_receives_funcargs_scope_mismatch.py E                               [100%]\n\n==================================== ERRORS ====================================\n__________________________ ERROR at setup of test_add __________________________\nScopeMismatch: You tried to access the 'function' scoped fixture 'arg1' with a 'module' scoped request object, involved factories\ntest_receives_funcargs_scope_mismatch.py:6:  def arg2(arg1)\ntest_receives_funcargs_scope_mismatch.py:2:  def arg1()\n=========================== 1 error in 0.01 seconds ============================\n_______ TestFixtureUsages.test_receives_funcargs_scope_mismatch_issue660 _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_receives_funcargs_scope_mismatch_issue6600\ncollected 1 item\n\ntest_receives_funcargs_scope_mismatch_issue660.py E                      [100%]\n\n==================================== ERRORS ====================================\n__________________________ ERROR at setup of test_add __________________________\nScopeMismatch: You tried to access the 'function' scoped fixture 'arg1' with a 'module' scoped request object, involved factories\ntest_receives_funcargs_scope_mismatch_issue660.py:6:  def arg2(arg1)\ntest_receives_funcargs_scope_mismatch_issue660.py:2:  def arg1()\n=========================== 1 error in 0.01 seconds ============================\n_____________________ TestFixtureUsages.test_invalid_scope _____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_invalid_scope0\ncollected 0 items / 1 errors\n\n==================================== ERRORS ====================================\n____________________ ERROR collecting test_invalid_scope.py ____________________\nFixture 'badscope' from test_invalid_scope.py got an unexpected scope value 'functions'\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!\n=========================== 1 error in 0.04 seconds ============================\n__________ TestFixtureUsages.test_funcarg_parametrized_and_used_twice __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_parametrized_and_used_twice0\ncollected 2 items\n\ntest_funcarg_parametrized_and_used_twice.py ..                           [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n___ TestFixtureUsages.test_factory_uses_unknown_funcarg_as_dependency_error ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_factory_uses_unknown_funcarg_as_dependency_error0\ncollected 1 item\n\ntest_factory_uses_unknown_funcarg_as_dependency_error.py E               [100%]\n\n==================================== ERRORS ====================================\n________________________ ERROR at setup of test_missing ________________________\nfile /tmp/pytest-of-root/pytest-0/test_factory_uses_unknown_funcarg_as_dependency_error0/test_factory_uses_unknown_funcarg_as_dependency_error.py, line 11\n  def test_missing(call_fail):\nfile /tmp/pytest-of-root/pytest-0/test_factory_uses_unknown_funcarg_as_dependency_error0/test_factory_uses_unknown_funcarg_as_dependency_error.py, line 7\n  @pytest.fixture()\n  def call_fail(fail):\nfile /tmp/pytest-of-root/pytest-0/test_factory_uses_unknown_funcarg_as_dependency_error0/test_factory_uses_unknown_funcarg_as_dependency_error.py, line 3\n  @pytest.fixture()\n  def fail(missing):\nE       fixture 'missing' not found\n>       available fixtures: cache, call_fail, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, fail, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_factory_uses_unknown_funcarg_as_dependency_error0/test_factory_uses_unknown_funcarg_as_dependency_error.py:3\n=========================== 1 error in 0.01 seconds ============================\n____________ TestFixtureUsages.test_factory_setup_as_classes_fails _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_factory_setup_as_classes_fails0\ncollected 0 items / 1 errors\n\n==================================== ERRORS ====================================\n___________ ERROR collecting test_factory_setup_as_classes_fails.py ____________\ntest_factory_setup_as_classes_fails.py:5: in <module>\n    arg1 = pytest.fixture()(arg1)\n/testbed/src/_pytest/fixtures.py:982: in __call__\n    raise ValueError(\"class fixtures not supported (maybe in the future)\")\nE   ValueError: class fixtures not supported (maybe in the future)\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!\n=========================== 1 error in 0.08 seconds ============================\n_______________ TestFixtureUsages.test_request_can_be_overridden _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_can_be_overridden0\ncollected 1 item\n\ntest_request_can_be_overridden.py .                                      [100%]\n\n=============================== warnings summary ===============================\n/testbed/src/_pytest/fixtures.py:993\n  /testbed/src/_pytest/fixtures.py:993: PytestDeprecationWarning: 'request' is a reserved name for fixtures and will raise an error in future versions\n    warnings.warn(FIXTURE_NAMED_REQUEST)\n\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\n===================== 1 passed, 1 warnings in 0.01 seconds =====================\n__________________ TestFixtureUsages.test_usefixtures_marker ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_usefixtures_marker0\ncollected 2 items\n\ntest_usefixtures_marker.py ..                                            [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n____________________ TestFixtureUsages.test_usefixtures_ini ____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_usefixtures_ini0, inifile: tox.ini\ncollected 2 items\n\ntest_usefixtures_ini.py ..                                               [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n____________ TestFixtureUsages.test_usefixtures_seen_in_showmarkers ____________\n----------------------------- Captured stdout call -----------------------------\n@pytest.mark.filterwarnings(warning): add a warning filter to the given test. see https://docs.pytest.org/en/latest/warnings.html#pytest-mark-filterwarnings \n\n@pytest.mark.skip(reason=None): skip the given test function with an optional reason. Example: skip(reason=\"no way of currently testing this\") skips the test.\n\n@pytest.mark.skipif(condition): skip the given test function if eval(condition) results in a True value.  Evaluation happens within the module global context. Example: skipif('sys.platform == \"win32\"') skips the test if we are on the win32 platform. see https://docs.pytest.org/en/latest/skipping.html\n\n@pytest.mark.xfail(condition, reason=None, run=True, raises=None, strict=False): mark the test function as an expected failure if eval(condition) has a True value. Optionally specify a reason for better reporting and run=False if you don't even want to execute the test function. If only specific exception(s) are expected, you can list them in raises, and if the test fails in other ways, it will be reported as a true failure. See https://docs.pytest.org/en/latest/skipping.html\n\n@pytest.mark.parametrize(argnames, argvalues): call a test function multiple times passing in different arguments in turn. argvalues generally needs to be a list of values if argnames specifies only one name or a list of tuples of values if argnames specifies multiple names. Example: @parametrize('arg1', [1,2]) would lead to two calls of the decorated test function, one with arg1=1 and another with arg1=2.see https://docs.pytest.org/en/latest/parametrize.html for more info and examples.\n\n@pytest.mark.usefixtures(fixturename1, fixturename2, ...): mark tests as needing all of the specified fixtures. see https://docs.pytest.org/en/latest/fixture.html#usefixtures \n\n@pytest.mark.tryfirst: mark a hook implementation function such that the plugin machinery will try to call it first/as early as possible.\n\n@pytest.mark.trylast: mark a hook implementation function such that the plugin machinery will try to call it last/as late as possible.\n\n_______________ TestFixtureUsages.test_request_instance_issue203 _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_instance_issue2030\ncollected 1 item\n\ntest_request_instance_issue203.py .                                      [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n__________ TestFixtureUsages.test_fixture_parametrized_with_iterator ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_fixture_parametrized_with_iterator0\ncollecting ... collected 4 items\n\ntest_fixture_parametrized_with_iterator.py::test_1[1] PASSED             [ 25%]\ntest_fixture_parametrized_with_iterator.py::test_1[2] PASSED             [ 50%]\ntest_fixture_parametrized_with_iterator.py::test_2[1] PASSED             [ 75%]\ntest_fixture_parametrized_with_iterator.py::test_2[2] PASSED             [100%]\n\n=========================== 4 passed in 0.01 seconds ===========================\n______________ TestFixtureUsages.test_setup_functions_as_fixtures ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup_functions_as_fixtures0\ncollected 2 items\n\ntest_setup_functions_as_fixtures.py ..                                   [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n__ TestFixtureManagerParseFactories.test_parsefactories_evil_objects_issue214 __\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parsefactories_evil_objects_issue2140\ncollected 1 item\n\ntest_parsefactories_evil_objects_issue214.py .                           [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n________ TestFixtureManagerParseFactories.test_parsefactories_conftest _________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parsefactories_conftest0\ncollected 1 item\n\ntest_parsefactories_conftest.py .\n\n=========================== 1 passed in 0.01 seconds ===========================\n_ TestFixtureManagerParseFactories.test_parsefactories_conftest_and_module_and_class _\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parsefactories_conftest_and_module_and_class0\ncollected 1 item\n\ntest_parsefactories_conftest_and_module_and_class.py (<FixtureDef argname='hello' scope='function' baseid=''>, <FixtureDef argname='hello' scope='function' baseid='test_parsefactories_conftest_and_module_and_class.py'>, <FixtureDef argname='hello' scope='function' baseid='test_parsefactories_conftest_and_module_and_class.py::TestClass'>)\n.\n\n=========================== 1 passed in 0.01 seconds ===========================\n____ TestFixtureManagerParseFactories.test_parsefactories_relative_node_ids ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parsefactories_relative_node_ids0\ncollected 2 items\n\npackage/test_x.py .                                                      [ 50%]\npackage/sub/test_y.py .                                                  [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parsefactories_relative_node_ids0\ncollected 2 items\n\n../package/test_x.py .                                                   [ 50%]\n../package/sub/test_y.py .                                               [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n_________ TestFixtureManagerParseFactories.test_package_xunit_fixture __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_package_xunit_fixture0\ncollected 2 items\n\npackage/test_x.py .                                                      [ 50%]\npackage2/test_x.py .                                                     [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n________ TestFixtureManagerParseFactories.test_package_fixture_complex _________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_package_fixture_complex0\ncollected 2 items\n\npackage/test_x.py ..                                                     [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n__________ TestFixtureManagerParseFactories.test_collect_custom_items __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_collect_custom_items0\ncollected 3 items\n\nfoo/__init__.py .                                                        [ 33%]\nfoo/test_foo.py ..                                                       [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n______________ TestAutouseDiscovery.test_parsefactories_conftest _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parsefactories_conftest1\ncollected 1 item\n\ntest_parsefactories_conftest.py .\n\n=========================== 1 passed in 0.01 seconds ===========================\n___________ TestAutouseDiscovery.test_two_classes_separated_autouse ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_two_classes_separated_autouse0\ncollected 2 items\n\ntest_two_classes_separated_autouse.py ..                                 [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n________________ TestAutouseDiscovery.test_setup_at_classlevel _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup_at_classlevel0\ncollected 2 items\n\ntest_setup_at_classlevel.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n__________________ TestAutouseDiscovery.test_callables_nocode __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_callables_nocode0\ncollected 0 items\n\n========================= no tests ran in 0.00 seconds =========================\n________________ TestAutouseDiscovery.test_autouse_in_conftests ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_autouse_in_conftests0\ncollected 2 items\n\na/test_something.py E                                                    [ 50%]\na1/test_otherthing.py .                                                  [100%]\n\n==================================== ERRORS ====================================\n_________________________ ERROR at setup of test_func __________________________\n\n    @pytest.fixture(autouse=True)\n    def hello():\n>       xxx\nE       NameError: name 'xxx' is not defined\n\na/conftest.py:4: NameError\n====================== 1 passed, 1 error in 0.01 seconds =======================\n_________ TestAutouseDiscovery.test_autouse_in_module_and_two_classes __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_autouse_in_module_and_two_classes0\ncollected 3 items\n\ntest_autouse_in_module_and_two_classes.py ...                            [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n__________ TestAutouseManagement.test_autouse_conftest_mid_directory ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_autouse_conftest_mid_directory0\ncollected 1 item\n\nxyz123/tests/test_app.py .\n\n=========================== 1 passed in 0.01 seconds ===========================\n_________________ TestAutouseManagement.test_funcarg_and_setup _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg_and_setup0\ncollected 2 items\n\ntest_funcarg_and_setup.py ..                                             [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n____________ TestAutouseManagement.test_uses_parametrized_resource _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_uses_parametrized_resource0\ncollected 2 items\n\ntest_uses_parametrized_resource.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n___________ TestAutouseManagement.test_session_parametrized_function ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_session_parametrized_function0\ncollecting ... collected 4 items\n\ntest_session_parametrized_function.py::test_some[1] PASSED\ntest_session_parametrized_function.py::test_result[1] PASSED\ntest_session_parametrized_function.py::test_some[2] PASSED\ntest_session_parametrized_function.py::test_result[2] PASSED\n\n=========================== 4 passed in 0.01 seconds ===========================\n____ TestAutouseManagement.test_class_function_parametrization_finalization ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_class_function_parametrization_finalization0\ncollecting ... collected 8 items\n\ntest_class_function_parametrization_finalization.py::TestClass::test_1[a-1] PASSED\ntest_class_function_parametrization_finalization.py::TestClass::test_1[a-2] PASSED\ntest_class_function_parametrization_finalization.py::TestClass::test_1[b-1] PASSED\ntest_class_function_parametrization_finalization.py::TestClass::test_1[b-2] PASSED\ntest_class_function_parametrization_finalization.py::TestClass2::test_2[a-1] PASSED\ntest_class_function_parametrization_finalization.py::TestClass2::test_2[a-2] PASSED\ntest_class_function_parametrization_finalization.py::TestClass2::test_2[b-1] PASSED\ntest_class_function_parametrization_finalization.py::TestClass2::test_2[b-2] PASSED\n\n=========================== 8 passed in 0.01 seconds ===========================\n__________________ TestAutouseManagement.test_scope_ordering ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_ordering0\ncollected 1 item\n\ntest_scope_ordering.py .                                                 [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n______ TestAutouseManagement.test_parametrization_setup_teardown_ordering ______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrization_setup_teardown_ordering0\ncollected 5 items\n\ntest_parametrization_setup_teardown_ordering.py ....['setup-1', 'step1-1', 'step2-1', 'teardown-1', 'setup-2', 'step1-2', 'step2-2', 'teardown-2']\n.\n\n=========================== 5 passed in 0.01 seconds ===========================\n_________ TestAutouseManagement.test_ordering_autouse_before_explicit __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_ordering_autouse_before_explicit0\ncollected 1 item\n\ntest_ordering_autouse_before_explicit.py .                               [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___ TestAutouseManagement.test_ordering_dependencies_torndown_first[p10-p00] ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_ordering_dependencies_torndown_first0\ncollected 2 items\n\ntest_ordering_dependencies_torndown_first.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n___ TestAutouseManagement.test_ordering_dependencies_torndown_first[p10-p01] ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_ordering_dependencies_torndown_first1\ncollected 2 items\n\ntest_ordering_dependencies_torndown_first.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n___ TestAutouseManagement.test_ordering_dependencies_torndown_first[p11-p00] ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_ordering_dependencies_torndown_first2\ncollected 2 items\n\ntest_ordering_dependencies_torndown_first.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n___ TestAutouseManagement.test_ordering_dependencies_torndown_first[p11-p01] ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_ordering_dependencies_torndown_first3\ncollected 2 items\n\ntest_ordering_dependencies_torndown_first.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n______________________ TestFixtureMarker.test_parametrize ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize0\ncollected 4 items\n\ntest_parametrize.py ....                                                 [100%]\n\n=========================== 4 passed in 0.01 seconds ===========================\n__________ TestFixtureMarker.test_multiple_parametrization_issue_736 ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_multiple_parametrization_issue_7360\ncollected 9 items\n\ntest_multiple_parametrization_issue_736.py .........                     [100%]\n\n=========================== 9 passed in 0.01 seconds ===========================\n_ TestFixtureMarker.test_override_parametrized_fixture_issue_979['fixt, val'] __\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_issue_9790\ncollected 2 items\n\ntest_override_parametrized_fixture_issue_979.py ..                       [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n__ TestFixtureMarker.test_override_parametrized_fixture_issue_979['fixt,val'] __\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_issue_9791\ncollected 2 items\n\ntest_override_parametrized_fixture_issue_979.py ..                       [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n_ TestFixtureMarker.test_override_parametrized_fixture_issue_979[['fixt', 'val']] _\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_issue_9792\ncollected 2 items\n\ntest_override_parametrized_fixture_issue_979.py ..                       [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n_ TestFixtureMarker.test_override_parametrized_fixture_issue_979[('fixt', 'val')] _\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_override_parametrized_fixture_issue_9793\ncollected 2 items\n\ntest_override_parametrized_fixture_issue_979.py ..                       [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n_____________________ TestFixtureMarker.test_scope_session _____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_session0\ncollected 3 items\n\ntest_scope_session.py ...                                                [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n___________________ TestFixtureMarker.test_scope_session_exc ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_session_exc0\ncollected 3 items\n\ntest_scope_session_exc.py ss.                                            [100%]\n\n===================== 1 passed, 2 skipped in 0.01 seconds ======================\n_______________ TestFixtureMarker.test_scope_session_exc_two_fix _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_session_exc_two_fix0\ncollected 3 items\n\ntest_scope_session_exc_two_fix.py ss.                                    [100%]\n\n===================== 1 passed, 2 skipped in 0.01 seconds ======================\n_______________________ TestFixtureMarker.test_scope_exc _______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_exc0\ncollected 3 items\n\ntest_bar.py s                                                            [ 33%]\ntest_foo.py s                                                            [ 66%]\ntest_real.py .                                                           [100%]\n\n===================== 1 passed, 2 skipped in 0.01 seconds ======================\n_______________ TestFixtureMarker.test_scope_module_uses_session _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_module_uses_session0\ncollected 3 items\n\ntest_scope_module_uses_session.py ...                                    [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n______________ TestFixtureMarker.test_scope_module_and_finalizer _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_module_and_finalizer0\ncollected 4 items\n\ntest_mod1.py ..                                                          [ 50%]\ntest_mod2.py .                                                           [ 75%]\ntest_mode3.py .                                                          [100%]\n\n=========================== 4 passed in 0.01 seconds ===========================\n________________ TestFixtureMarker.test_scope_mismatch_various _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_mismatch_various0\ncollected 1 item\n\ntest_mod1.py E                                                           [100%]\n\n==================================== ERRORS ====================================\n___________________________ ERROR at setup of test_1 ___________________________\nScopeMismatch: You tried to access the 'function' scoped fixture 'arg' with a 'session' scoped request object, involved factories\ntest_mod1.py:2:  def arg(request)\nconftest.py:4:  def arg(request)\n=========================== 1 error in 0.00 seconds ============================\n________________ TestFixtureMarker.test_register_only_with_mark ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_register_only_with_mark0\ncollected 1 item\n\ntest_mod1.py .                                                           [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_________________ TestFixtureMarker.test_parametrize_and_scope _________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize_and_scope0\ncollecting ... collected 3 items\n\ntest_parametrize_and_scope.py::test_param[a] PASSED                      [ 33%]\ntest_parametrize_and_scope.py::test_param[b] PASSED                      [ 66%]\ntest_parametrize_and_scope.py::test_param[c] PASSED                      [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n____________________ TestFixtureMarker.test_scope_mismatch _____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scope_mismatch0\ncollected 1 item\n\ntest_scope_mismatch.py E                                                 [100%]\n\n==================================== ERRORS ====================================\n_______________________ ERROR at setup of test_mismatch ________________________\nScopeMismatch: You tried to access the 'function' scoped fixture 'arg' with a 'session' scoped request object, involved factories\ntest_scope_mismatch.py:2:  def arg(arg)\nconftest.py:2:  def arg(request)\n=========================== 1 error in 0.00 seconds ============================\n______________ TestFixtureMarker.test_parametrize_separated_order ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize_separated_order0\ncollecting ... collected 4 items\n\ntest_parametrize_separated_order.py::test_1[1] PASSED                    [ 25%]\ntest_parametrize_separated_order.py::test_2[1] PASSED                    [ 50%]\ntest_parametrize_separated_order.py::test_1[2] PASSED                    [ 75%]\ntest_parametrize_separated_order.py::test_2[2] PASSED                    [100%]\n\n=========================== 4 passed in 0.01 seconds ===========================\n_____________ TestFixtureMarker.test_module_parametrized_ordering ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_module_parametrized_ordering0, inifile: tox.ini\ncollecting ... collected 16 items\n\ntest_mod1.py::test_func[s1] PASSED\ntest_mod2.py::test_func2[s1] PASSED\ntest_mod2.py::test_func3[s1-m1] PASSED\ntest_mod2.py::test_func3b[s1-m1] PASSED\ntest_mod2.py::test_func3[s1-m2] PASSED\ntest_mod2.py::test_func3b[s1-m2] PASSED\ntest_mod1.py::test_func[s2] PASSED\ntest_mod2.py::test_func2[s2] PASSED\ntest_mod2.py::test_func3[s2-m1] PASSED\ntest_mod2.py::test_func3b[s2-m1] PASSED\ntest_mod2.py::test_func4[m1] PASSED\ntest_mod2.py::test_func3[s2-m2] PASSED\ntest_mod2.py::test_func3b[s2-m2] PASSED\ntest_mod2.py::test_func4[m2] PASSED\ntest_mod1.py::test_func1[m1] PASSED\ntest_mod1.py::test_func1[m2] PASSED\n\n========================== 16 passed in 0.02 seconds ===========================\n_____________ TestFixtureMarker.test_dynamic_parametrized_ordering _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_dynamic_parametrized_ordering0, inifile: tox.ini\ncollecting ... collected 8 items\n\ntest_dynamic_parametrized_ordering.py::test[flavor1-vxlan] PASSED\ntest_dynamic_parametrized_ordering.py::test2[flavor1-vxlan] PASSED\ntest_dynamic_parametrized_ordering.py::test[flavor2-vxlan] PASSED\ntest_dynamic_parametrized_ordering.py::test2[flavor2-vxlan] PASSED\ntest_dynamic_parametrized_ordering.py::test[flavor2-vlan] PASSED\ntest_dynamic_parametrized_ordering.py::test2[flavor2-vlan] PASSED\ntest_dynamic_parametrized_ordering.py::test[flavor1-vlan] PASSED\ntest_dynamic_parametrized_ordering.py::test2[flavor1-vlan] PASSED\n\n=========================== 8 passed in 0.01 seconds ===========================\n____________________ TestFixtureMarker.test_class_ordering _____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_class_ordering0, inifile: tox.ini\ncollecting ... collected 12 items\n\ntest_class_ordering.py::TestClass2::test_1[a-1] PASSED\ntest_class_ordering.py::TestClass2::test_1[a-2] PASSED\ntest_class_ordering.py::TestClass2::test_2[a-1] PASSED\ntest_class_ordering.py::TestClass2::test_2[a-2] PASSED\ntest_class_ordering.py::TestClass2::test_1[b-1] PASSED\ntest_class_ordering.py::TestClass2::test_1[b-2] PASSED\ntest_class_ordering.py::TestClass2::test_2[b-1] PASSED\ntest_class_ordering.py::TestClass2::test_2[b-2] PASSED\ntest_class_ordering.py::TestClass::test_3[a-1] PASSED\ntest_class_ordering.py::TestClass::test_3[a-2] PASSED\ntest_class_ordering.py::TestClass::test_3[b-1] PASSED\ntest_class_ordering.py::TestClass::test_3[b-2] PASSED\n\n========================== 12 passed in 0.02 seconds ===========================\n____ TestFixtureMarker.test_parametrize_separated_order_higher_scope_first _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize_separated_order_higher_scope_first0\ncollecting ... collected 12 items\n\ntest_parametrize_separated_order_higher_scope_first.py::test_1[1] PASSED [  8%]\ntest_parametrize_separated_order_higher_scope_first.py::test_1[2] PASSED [ 16%]\ntest_parametrize_separated_order_higher_scope_first.py::test_2[mod1] PASSED [ 25%]\ntest_parametrize_separated_order_higher_scope_first.py::test_3[mod1-1] PASSED [ 33%]\ntest_parametrize_separated_order_higher_scope_first.py::test_3[mod1-2] PASSED [ 41%]\ntest_parametrize_separated_order_higher_scope_first.py::test_4[mod1-1] PASSED [ 50%]\ntest_parametrize_separated_order_higher_scope_first.py::test_4[mod1-2] PASSED [ 58%]\ntest_parametrize_separated_order_higher_scope_first.py::test_2[mod2] PASSED [ 66%]\ntest_parametrize_separated_order_higher_scope_first.py::test_3[mod2-1] PASSED [ 75%]\ntest_parametrize_separated_order_higher_scope_first.py::test_3[mod2-2] PASSED [ 83%]\ntest_parametrize_separated_order_higher_scope_first.py::test_4[mod2-1] PASSED [ 91%]\ntest_parametrize_separated_order_higher_scope_first.py::test_4[mod2-2] PASSED [100%]\n\n========================== 12 passed in 0.02 seconds ===========================\n[('create:1', 'create:1'),\n ('test1', 'test1'),\n ('fin:1', 'fin:1'),\n ('create:2', 'create:2'),\n ('test1', 'test1'),\n ('fin:2', 'fin:2'),\n ('create:mod1', 'create:mod1'),\n ('test2', 'test2'),\n ('create:1', 'create:1'),\n ('test3', 'test3'),\n ('fin:1', 'fin:1'),\n ('create:2', 'create:2'),\n ('test3', 'test3'),\n ('fin:2', 'fin:2'),\n ('create:1', 'create:1'),\n ('test4', 'test4'),\n ('fin:1', 'fin:1'),\n ('create:2', 'create:2'),\n ('test4', 'test4'),\n ('fin:2', 'fin:2'),\n ('fin:mod1', 'fin:mod1'),\n ('create:mod2', 'create:mod2'),\n ('test2', 'test2'),\n ('create:1', 'create:1'),\n ('test3', 'test3'),\n ('fin:1', 'fin:1'),\n ('create:2', 'create:2'),\n ('test3', 'test3'),\n ('fin:2', 'fin:2'),\n ('create:1', 'create:1'),\n ('test4', 'test4'),\n ('fin:1', 'fin:1'),\n ('create:2', 'create:2'),\n ('test4', 'test4'),\n ('fin:2', 'fin:2'),\n ('fin:mod2', 'fin:mod2')]\n__________ TestFixtureMarker.test_parametrized_fixture_teardown_order __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrized_fixture_teardown_order0\ncollecting ... collected 3 items\n\ntest_parametrized_fixture_teardown_order.py::TestClass::test[1] PASSED   [ 33%]\ntest_parametrized_fixture_teardown_order.py::TestClass::test[2] PASSED   [ 66%]\ntest_parametrized_fixture_teardown_order.py::test_finish PASSED          [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n___________________ TestFixtureMarker.test_fixture_finalizer ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_fixture_finalizer0\ncollected 1 item\n\nsubdir/test_overridden_fixture_finalizer.py .Finalized\n\n=========================== 1 passed in 0.01 seconds ===========================\n_____________ TestFixtureMarker.test_class_scope_with_normal_tests _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_class_scope_with_normal_tests0\ncollected 3 items\n\ntest_class_scope_with_normal_tests.py ...                                [100%]\n\n=========================== 3 passed in 0.01 seconds ===========================\n___________________ TestFixtureMarker.test_request_is_clean ____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_request_is_clean0\ncollected 2 items\n\ntest_request_is_clean.py ..\n\n=========================== 2 passed in 0.01 seconds ===========================\n____________ TestFixtureMarker.test_parametrize_separated_lifecycle ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize_separated_lifecycle0\ncollecting ... collected 4 items\n\ntest_parametrize_separated_lifecycle.py::test_1[1] PASSED\ntest_parametrize_separated_lifecycle.py::test_2[1] PASSED\ntest_parametrize_separated_lifecycle.py::test_1[2] PASSED\ntest_parametrize_separated_lifecycle.py::test_2[2] PASSED\n\n=========================== 4 passed in 0.01 seconds ===========================\n[1, 1, 'fin1', 2, 2, 'fin2']\n_____ TestFixtureMarker.test_parametrize_function_scoped_finalizers_called _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize_function_scoped_finalizers_called0\ncollecting ... collected 5 items\n\ntest_parametrize_function_scoped_finalizers_called.py::test_1[1] PASSED  [ 20%]\ntest_parametrize_function_scoped_finalizers_called.py::test_1[2] PASSED  [ 40%]\ntest_parametrize_function_scoped_finalizers_called.py::test_2[1] PASSED  [ 60%]\ntest_parametrize_function_scoped_finalizers_called.py::test_2[2] PASSED  [ 80%]\ntest_parametrize_function_scoped_finalizers_called.py::test_3 PASSED     [100%]\n\n=========================== 5 passed in 0.01 seconds ===========================\n______ TestFixtureMarker.test_finalizer_order_on_parametrization[session] ______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_finalizer_order_on_parametrization0\ncollecting ... collected 3 items\n\ntest_finalizer_order_on_parametrization.py::test_begin PASSED\ntest_finalizer_order_on_parametrization.py::test_baz[1] PASSED\ntest_finalizer_order_on_parametrization.py::test_other PASSEDfinalizing base\n\n\n=========================== 3 passed in 0.01 seconds ===========================\n_____ TestFixtureMarker.test_finalizer_order_on_parametrization[function] ______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_finalizer_order_on_parametrization1\ncollecting ... collected 3 items\n\ntest_finalizer_order_on_parametrization.py::test_begin PASSED\ntest_finalizer_order_on_parametrization.py::test_baz[1] PASSEDfinalizing base\n\ntest_finalizer_order_on_parametrization.py::test_other PASSED\n\n=========================== 3 passed in 0.01 seconds ===========================\n______ TestFixtureMarker.test_finalizer_order_on_parametrization[module] _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_finalizer_order_on_parametrization2\ncollecting ... collected 3 items\n\ntest_finalizer_order_on_parametrization.py::test_begin PASSED\ntest_finalizer_order_on_parametrization.py::test_baz[1] PASSED\ntest_finalizer_order_on_parametrization.py::test_other PASSEDfinalizing base\n\n\n=========================== 3 passed in 0.01 seconds ===========================\n_________ TestFixtureMarker.test_class_scope_parametrization_ordering __________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_class_scope_parametrization_ordering0\ncollected 6 items\n\ntest_class_scope_parametrization_ordering.py ......                      [100%]\n\n=========================== 6 passed in 0.01 seconds ===========================\n______________ TestFixtureMarker.test_parametrize_setup_function _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_parametrize_setup_function0\ncollecting ... collected 6 items\n\ntest_parametrize_setup_function.py::test_1[1] PASSED                     [ 16%]\ntest_parametrize_setup_function.py::test_2[1] PASSED                     [ 33%]\ntest_parametrize_setup_function.py::test_3[1] PASSED                     [ 50%]\ntest_parametrize_setup_function.py::test_1[2] PASSED                     [ 66%]\ntest_parametrize_setup_function.py::test_2[2] PASSED                     [ 83%]\ntest_parametrize_setup_function.py::test_3[2] PASSED                     [100%]\n\n=========================== 6 passed in 0.01 seconds ===========================\n_____ TestFixtureMarker.test_fixture_marked_function_not_collected_as_test _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_fixture_marked_function_not_collected_as_test0\ncollected 1 item\n\ntest_fixture_marked_function_not_collected_as_test.py .                  [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n____________________ TestFixtureMarker.test_params_and_ids _____________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_params_and_ids0\ncollecting ... collected 2 items\n\ntest_params_and_ids.py::test_foo[alpha] PASSED                           [ 50%]\ntest_params_and_ids.py::test_foo[beta] PASSED                            [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n______________ TestFixtureMarker.test_params_and_ids_yieldfixture ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_params_and_ids_yieldfixture0\ncollecting ... collected 2 items\n\ntest_params_and_ids_yieldfixture.py::test_foo[alpha] PASSED              [ 50%]\ntest_params_and_ids_yieldfixture.py::test_foo[beta] PASSED               [100%]\n\n=========================== 2 passed in 0.01 seconds ===========================\n___________ TestFixtureMarker.test_deterministic_fixture_collection ____________\n----------------------------- Captured stdout call -----------------------------\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-0/test_deterministic_fixture_collection0/runpytest-0 -v\n     in: /tmp/pytest-of-root/pytest-0/test_deterministic_fixture_collection0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_deterministic_fixture_collection0\ncollecting ... collected 12 items\n\ntest_deterministic_fixture_collection.py::test_foo[DDDDDDDDD-A] PASSED   [  8%]\ntest_deterministic_fixture_collection.py::test_foo[EEEEEEEEEEEE-A] PASSED [ 16%]\ntest_deterministic_fixture_collection.py::test_foo[EEEEEEEEEEEE-B] PASSED [ 25%]\ntest_deterministic_fixture_collection.py::test_foo[DDDDDDDDD-B] PASSED   [ 33%]\ntest_deterministic_fixture_collection.py::test_foo[FFFFFFFFFFF-B] PASSED [ 41%]\ntest_deterministic_fixture_collection.py::test_foo[FFFFFFFFFFF-A] PASSED [ 50%]\ntest_deterministic_fixture_collection.py::test_foo[FFFFFFFFFFF-C] PASSED [ 58%]\ntest_deterministic_fixture_collection.py::test_foo[EEEEEEEEEEEE-C] PASSED [ 66%]\ntest_deterministic_fixture_collection.py::test_foo[DDDDDDDDD-C] PASSED   [ 75%]\ntest_deterministic_fixture_collection.py::test_foo[banansda-C] PASSED    [ 83%]\ntest_deterministic_fixture_collection.py::test_foo[banansda-B] PASSED    [ 91%]\ntest_deterministic_fixture_collection.py::test_foo[banansda-A] PASSED    [100%]\n\n========================== 12 passed in 0.02 seconds ===========================\nrunning: /opt/miniconda3/envs/testbed/bin/python -mpytest --basetemp=/tmp/pytest-of-root/pytest-0/test_deterministic_fixture_collection0/runpytest-1 -v\n     in: /tmp/pytest-of-root/pytest-0/test_deterministic_fixture_collection0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_deterministic_fixture_collection0\ncollecting ... collected 12 items\n\ntest_deterministic_fixture_collection.py::test_foo[DDDDDDDDD-A] PASSED   [  8%]\ntest_deterministic_fixture_collection.py::test_foo[EEEEEEEEEEEE-A] PASSED [ 16%]\ntest_deterministic_fixture_collection.py::test_foo[EEEEEEEEEEEE-B] PASSED [ 25%]\ntest_deterministic_fixture_collection.py::test_foo[DDDDDDDDD-B] PASSED   [ 33%]\ntest_deterministic_fixture_collection.py::test_foo[FFFFFFFFFFF-B] PASSED [ 41%]\ntest_deterministic_fixture_collection.py::test_foo[FFFFFFFFFFF-A] PASSED [ 50%]\ntest_deterministic_fixture_collection.py::test_foo[FFFFFFFFFFF-C] PASSED [ 58%]\ntest_deterministic_fixture_collection.py::test_foo[EEEEEEEEEEEE-C] PASSED [ 66%]\ntest_deterministic_fixture_collection.py::test_foo[DDDDDDDDD-C] PASSED   [ 75%]\ntest_deterministic_fixture_collection.py::test_foo[banansda-C] PASSED    [ 83%]\ntest_deterministic_fixture_collection.py::test_foo[banansda-B] PASSED    [ 91%]\ntest_deterministic_fixture_collection.py::test_foo[banansda-A] PASSED    [100%]\n\n========================== 12 passed in 0.02 seconds ===========================\n___ TestRequestScopeAccess.test_setup[session--fspath class function module] ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup0\ncollected 1 item\n\ntest_setup.py .                                                          [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_____ TestRequestScopeAccess.test_setup[module-module fspath-cls function] _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup1\ncollected 1 item\n\ntest_setup.py .                                                          [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n_____ TestRequestScopeAccess.test_setup[class-module fspath cls-function] ______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup2\ncollected 1 item\n\ntest_setup.py .                                                          [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n___ TestRequestScopeAccess.test_setup[function-module fspath cls function-] ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup3\ncollected 1 item\n\ntest_setup.py .                                                          [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n__ TestRequestScopeAccess.test_funcarg[session--fspath class function module] __\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg0\ncollected 1 item\n\ntest_funcarg.py .                                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n____ TestRequestScopeAccess.test_funcarg[module-module fspath-cls function] ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg1\ncollected 1 item\n\ntest_funcarg.py .                                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n____ TestRequestScopeAccess.test_funcarg[class-module fspath cls-function] _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg2\ncollected 1 item\n\ntest_funcarg.py .                                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n__ TestRequestScopeAccess.test_funcarg[function-module fspath cls function-] ___\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_funcarg3\ncollected 1 item\n\ntest_funcarg.py .                                                        [100%]\n\n=========================== 1 passed in 0.01 seconds ===========================\n__________________ TestErrors.test_subfactory_missing_funcarg __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_subfactory_missing_funcarg0\ncollected 1 item\n\ntest_subfactory_missing_funcarg.py E                                     [100%]\n\n==================================== ERRORS ====================================\n_______________________ ERROR at setup of test_something _______________________\nfile /tmp/pytest-of-root/pytest-0/test_subfactory_missing_funcarg0/test_subfactory_missing_funcarg.py, line 5\n  def test_something(gen):\nfile /tmp/pytest-of-root/pytest-0/test_subfactory_missing_funcarg0/test_subfactory_missing_funcarg.py, line 2\n  @pytest.fixture()\n  def gen(qwe123):\nE       fixture 'qwe123' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, gen, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_subfactory_missing_funcarg0/test_subfactory_missing_funcarg.py:2\n=========================== 1 error in 0.01 seconds ============================\n______________ TestErrors.test_issue498_fixture_finalizer_failing ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_issue498_fixture_finalizer_failing0\ncollected 3 items\n\ntest_issue498_fixture_finalizer_failing.py .E.E.                         [100%]\n\n==================================== ERRORS ====================================\n_________________________ ERROR at teardown of test_1 __________________________\n\n    def f():\n>       raise KeyError\nE       KeyError\n\ntest_issue498_fixture_finalizer_failing.py:5: KeyError\n_________________________ ERROR at teardown of test_2 __________________________\n\n    def f():\n>       raise KeyError\nE       KeyError\n\ntest_issue498_fixture_finalizer_failing.py:5: KeyError\n====================== 3 passed, 2 error in 0.01 seconds =======================\n__________________ TestErrors.test_setupfunc_missing_funcarg ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setupfunc_missing_funcarg0\ncollected 1 item\n\ntest_setupfunc_missing_funcarg.py E                                      [100%]\n\n==================================== ERRORS ====================================\n_______________________ ERROR at setup of test_something _______________________\nfile /tmp/pytest-of-root/pytest-0/test_setupfunc_missing_funcarg0/test_setupfunc_missing_funcarg.py, line 5\n  def test_something():\nfile /tmp/pytest-of-root/pytest-0/test_setupfunc_missing_funcarg0/test_setupfunc_missing_funcarg.py, line 2\n  @pytest.fixture(autouse=True)\n  def gen(qwe123):\nE       fixture 'qwe123' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, gen, monkeypatch, pytestconfig, record_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/tmp/pytest-of-root/pytest-0/test_setupfunc_missing_funcarg0/test_setupfunc_missing_funcarg.py:2\n=========================== 1 error in 0.01 seconds ============================\n_____________________ TestShowFixtures.test_show_fixtures ______________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures0\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n========================= no tests ran in 0.00 seconds =========================\n_________________ TestShowFixtures.test_show_fixtures_verbose __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1 -- /opt/miniconda3/envs/testbed/bin/python\ncachedir: .pytest_cache\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_verbose0\ncollected 0 items\ncache -- /testbed/src/_pytest/cacheprovider.py:376\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys -- /testbed/src/_pytest/capture.py:264\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary -- /testbed/src/_pytest/capture.py:277\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd -- /testbed/src/_pytest/capture.py:294\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary -- /testbed/src/_pytest/capture.py:311\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope] -- /testbed/src/_pytest/doctest.py:568\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope] -- /testbed/src/_pytest/fixtures.py:1065\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property -- /testbed/src/_pytest/junitxml.py:300\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute -- /testbed/src/_pytest/junitxml.py:321\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog -- /testbed/src/_pytest/logging.py:333\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch -- /testbed/src/_pytest/monkeypatch.py:22\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn -- /testbed/src/_pytest/recwarn.py:21\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope] -- /testbed/src/_pytest/tmpdir.py:149\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope] -- /testbed/src/_pytest/tmpdir.py:156\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir -- /testbed/src/_pytest/tmpdir.py:171\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path -- /testbed/src/_pytest/tmpdir.py:184\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n========================= no tests ran in 0.00 seconds =========================\n________________ TestShowFixtures.test_show_fixtures_testmodule ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_testmodule0\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------- fixtures defined from test_show_fixtures_testmodule --------------\narg1\n    hello world\n\n\n========================= no tests ran in 0.00 seconds =========================\n______________ TestShowFixtures.test_show_fixtures_conftest[True] ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_conftest0\ncollected 1 item\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------------------ fixtures defined from conftest ------------------------\narg1\n    hello world\n\n\n========================= no tests ran in 0.00 seconds =========================\n_____________ TestShowFixtures.test_show_fixtures_conftest[False] ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_conftest1\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------------------ fixtures defined from conftest ------------------------\narg1\n    hello world\n\n\n========================= no tests ran in 0.00 seconds =========================\n_______________ TestShowFixtures.test_show_fixtures_trimmed_doc ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_trimmed_doc0\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------- fixtures defined from test_show_fixtures_trimmed_doc -------------\narg2\n    line1\n    line2\n\narg1\n    line1\n    line2\n\n\n========================= no tests ran in 0.00 seconds =========================\n_______________ TestShowFixtures.test_show_fixtures_indented_doc _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_indented_doc0\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------ fixtures defined from test_show_fixtures_indented_doc -------------\nfixture1\n    line1\n        indented line\n\n\n========================= no tests ran in 0.00 seconds =========================\n____ TestShowFixtures.test_show_fixtures_indented_doc_first_line_unindented ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_indented_doc_first_line_unindented0\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n- fixtures defined from test_show_fixtures_indented_doc_first_line_unindented --\nfixture1\n    line1\n    line2\n        indented line\n\n\n========================= no tests ran in 0.00 seconds =========================\n____________ TestShowFixtures.test_show_fixtures_indented_in_class _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_indented_in_class0\ncollected 0 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n---------- fixtures defined from test_show_fixtures_indented_in_class ----------\nfixture1\n    line1\n    line2\n        indented line\n\n\n========================= no tests ran in 0.01 seconds =========================\n_____________ TestShowFixtures.test_show_fixtures_different_files ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_different_files0\ncollected 2 items\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------------------- fixtures defined from test_a -------------------------\nfix_a\n    Fixture A\n\n\n------------------------- fixtures defined from test_b -------------------------\nfix_b\n    Fixture B\n\n\n========================= no tests ran in 0.01 seconds =========================\n______________ TestShowFixtures.test_show_fixtures_with_same_name ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_show_fixtures_with_same_name0\ncollected 1 item\ncache\n    Return a cache object that can persist state between testing sessions.\n    \n    cache.get(key, default)\n    cache.set(key, value)\n    \n    Keys must be a ``/`` separated value, where the first part is usually the\n    name of your plugin or application to avoid clashes with other cache users.\n    \n    Values can be any object handled by the json stdlib module.\n\ncapsys\n    Enable text capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsys.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapsysbinary\n    Enable bytes capturing of writes to ``sys.stdout`` and ``sys.stderr``.\n    \n    The captured output is made available via ``capsysbinary.readouterr()``\n    method calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``bytes`` objects.\n\ncapfd\n    Enable text capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``text`` objects.\n\ncapfdbinary\n    Enable bytes capturing of writes to file descriptors ``1`` and ``2``.\n    \n    The captured output is made available via ``capfd.readouterr()`` method\n    calls, which return a ``(out, err)`` namedtuple.\n    ``out`` and ``err`` will be ``byte`` objects.\n\ndoctest_namespace [session scope]\n    Fixture that returns a :py:class:`dict` that will be injected into the namespace of doctests.\n\npytestconfig [session scope]\n    Session-scoped fixture that returns the :class:`_pytest.config.Config` object.\n    \n    Example::\n    \n        def test_foo(pytestconfig):\n            if pytestconfig.getoption(\"verbose\") > 0:\n                ...\n\nrecord_property\n    Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n    \n    Example::\n    \n        def test_function(record_property):\n            record_property(\"example_key\", 1)\n\nrecord_xml_attribute\n    Add extra xml attributes to the tag for the calling test.\n    The fixture is callable with ``(name, value)``, with value being\n    automatically xml-encoded\n\ncaplog\n    Access and control log capturing.\n    \n    Captured logs are available through the following properties/methods::\n    \n    * caplog.text            -> string containing formatted log output\n    * caplog.records         -> list of logging.LogRecord instances\n    * caplog.record_tuples   -> list of (logger_name, level, message) tuples\n    * caplog.clear()         -> clear captured records and formatted log output string\n\nmonkeypatch\n    The returned ``monkeypatch`` fixture provides these\n    helper methods to modify objects, dictionaries or os.environ::\n    \n        monkeypatch.setattr(obj, name, value, raising=True)\n        monkeypatch.delattr(obj, name, raising=True)\n        monkeypatch.setitem(mapping, name, value)\n        monkeypatch.delitem(obj, name, raising=True)\n        monkeypatch.setenv(name, value, prepend=False)\n        monkeypatch.delenv(name, raising=True)\n        monkeypatch.syspath_prepend(path)\n        monkeypatch.chdir(path)\n    \n    All modifications will be undone after the requesting\n    test function or fixture has finished. The ``raising``\n    parameter determines if a KeyError or AttributeError\n    will be raised if the set/deletion operation has no target.\n\nrecwarn\n    Return a :class:`WarningsRecorder` instance that records all warnings emitted by test functions.\n    \n    See http://docs.python.org/library/warnings.html for information\n    on warning categories.\n\ntmpdir_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.\n\ntmp_path_factory [session scope]\n    Return a :class:`_pytest.tmpdir.TempPathFactory` instance for the test session.\n\ntmpdir\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a `py.path.local`_\n    path object.\n    \n    .. _`py.path.local`: https://py.readthedocs.io/en/latest/path.html\n\ntmp_path\n    Return a temporary directory path object\n    which is unique to each test function invocation,\n    created as a sub directory of the base temporary\n    directory.  The returned object is a :class:`pathlib.Path`\n    object.\n    \n    .. note::\n    \n        in python < 3.6 this is a pathlib2.Path\n\n\n------------------------ fixtures defined from conftest ------------------------\narg1\n    Hello World in conftest.py\n\n\n----------- fixtures defined from test_show_fixtures_with_same_name ------------\narg1\n    Hi from test module\n\n\n========================= no tests ran in 0.01 seconds =========================\n_____________ TestContextManagerFixtureFuncs.test_simple[fixture] ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_simple0\ncollected 2 items\n\ntest_simple.py setup\ntest1 1\n.teardown\nsetup\ntest2 1\nFteardown\n\n\n=================================== FAILURES ===================================\n____________________________________ test_2 ____________________________________\n\narg1 = 1\n\n    def test_2(arg1):\n        print(\"test2\", arg1)\n>       assert 0\nE       assert 0\n\ntest_simple.py:12: AssertionError\n====================== 1 failed, 1 passed in 0.01 seconds ======================\n__________ TestContextManagerFixtureFuncs.test_simple[yield_fixture] ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_simple1\ncollected 2 items\n\ntest_simple.py setup\ntest1 1\n.teardown\nsetup\ntest2 1\nFteardown\n\n\n=================================== FAILURES ===================================\n____________________________________ test_2 ____________________________________\n\narg1 = 1\n\n    def test_2(arg1):\n        print(\"test2\", arg1)\n>       assert 0\nE       assert 0\n\ntest_simple.py:12: AssertionError\n====================== 1 failed, 1 passed in 0.01 seconds ======================\n_____________ TestContextManagerFixtureFuncs.test_scoped[fixture] ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scoped0\ncollected 2 items\n\ntest_scoped.py setup\ntest1 1\n.test2 1\n.teardown\n\n\n=========================== 2 passed in 0.01 seconds ===========================\n__________ TestContextManagerFixtureFuncs.test_scoped[yield_fixture] ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_scoped1\ncollected 2 items\n\ntest_scoped.py setup\ntest1 1\n.test2 1\n.teardown\n\n\n=========================== 2 passed in 0.01 seconds ===========================\n_________ TestContextManagerFixtureFuncs.test_setup_exception[fixture] _________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup_exception0\ncollected 1 item\n\ntest_setup_exception.py E\n\n==================================== ERRORS ====================================\n___________________________ ERROR at setup of test_1 ___________________________\n\n    @fixture(scope=\"module\")\n    def arg1():\n>       pytest.fail(\"setup\")\nE       NameError: name 'pytest' is not defined\n\ntest_setup_exception.py:4: NameError\n=========================== 1 error in 0.01 seconds ============================\n______ TestContextManagerFixtureFuncs.test_setup_exception[yield_fixture] ______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_setup_exception1\ncollected 1 item\n\ntest_setup_exception.py E\n\n==================================== ERRORS ====================================\n___________________________ ERROR at setup of test_1 ___________________________\n\n    @fixture(scope=\"module\")\n    def arg1():\n>       pytest.fail(\"setup\")\nE       NameError: name 'pytest' is not defined\n\ntest_setup_exception.py:4: NameError\n=========================== 1 error in 0.01 seconds ============================\n_______ TestContextManagerFixtureFuncs.test_teardown_exception[fixture] ________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_teardown_exception0\ncollected 1 item\n\ntest_teardown_exception.py .E\n\n==================================== ERRORS ====================================\n_________________________ ERROR at teardown of test_1 __________________________\n\n    @fixture(scope=\"module\")\n    def arg1():\n        yield 1\n>       pytest.fail(\"teardown\")\nE       NameError: name 'pytest' is not defined\n\ntest_teardown_exception.py:5: NameError\n====================== 1 passed, 1 error in 0.01 seconds =======================\n____ TestContextManagerFixtureFuncs.test_teardown_exception[yield_fixture] _____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_teardown_exception1\ncollected 1 item\n\ntest_teardown_exception.py .E\n\n==================================== ERRORS ====================================\n_________________________ ERROR at teardown of test_1 __________________________\n\n    @fixture(scope=\"module\")\n    def arg1():\n        yield 1\n>       pytest.fail(\"teardown\")\nE       NameError: name 'pytest' is not defined\n\ntest_teardown_exception.py:5: NameError\n====================== 1 passed, 1 error in 0.01 seconds =======================\n______ TestContextManagerFixtureFuncs.test_yields_more_than_one[fixture] _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_yields_more_than_one0\ncollected 1 item\n\ntest_yields_more_than_one.py .E\n\n==================================== ERRORS ====================================\n_________________________ ERROR at teardown of test_1 __________________________\nyield_fixture function has more than one 'yield':\n\n    @fixture(scope=\"module\")\n    def arg1():\n        yield 1\n        yield 2\n/tmp/pytest-of-root/pytest-0/test_yields_more_than_one0/test_yields_more_than_one.py:2\n====================== 1 passed, 1 error in 0.01 seconds =======================\n___ TestContextManagerFixtureFuncs.test_yields_more_than_one[yield_fixture] ____\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_yields_more_than_one1\ncollected 1 item\n\ntest_yields_more_than_one.py .E\n\n==================================== ERRORS ====================================\n_________________________ ERROR at teardown of test_1 __________________________\nyield_fixture function has more than one 'yield':\n\n    @fixture(scope=\"module\")\n    def arg1():\n        yield 1\n        yield 2\n/tmp/pytest-of-root/pytest-0/test_yields_more_than_one1/test_yields_more_than_one.py:2\n====================== 1 passed, 1 error in 0.01 seconds =======================\n___________ TestContextManagerFixtureFuncs.test_custom_name[fixture] ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_custom_name0\ncollected 1 item\n\ntest_custom_name.py mew\n.\n\n=========================== 1 passed in 0.01 seconds ===========================\n________ TestContextManagerFixtureFuncs.test_custom_name[yield_fixture] ________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_custom_name1\ncollected 1 item\n\ntest_custom_name.py mew\n.\n\n=========================== 1 passed in 0.01 seconds ===========================\n______________ TestParameterizedSubRequest.test_call_from_fixture ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_call_from_fixture0\ncollected 1 item\n\ntest_call_from_fixture.py E                                              [100%]\n\n==================================== ERRORS ====================================\n__________________________ ERROR at setup of test_foo __________________________\nThe requested fixture has no parameter defined for test:\n    test_call_from_fixture.py::test_foo\n\nRequested fixture 'fix_with_param' defined in:\ntest_call_from_fixture.py:4\n\nRequested here:\ntest_call_from_fixture.py:9\n=========================== 1 error in 0.01 seconds ============================\n_______________ TestParameterizedSubRequest.test_call_from_test ________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_call_from_test0\ncollected 1 item\n\ntest_call_from_test.py F                                                 [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\nThe requested fixture has no parameter defined for test:\n    test_call_from_test.py::test_foo\n\nRequested fixture 'fix_with_param' defined in:\ntest_call_from_test.py:4\n\nRequested here:\ntest_call_from_test.py:8\n=========================== 1 failed in 0.01 seconds ===========================\n______________ TestParameterizedSubRequest.test_external_fixture _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_external_fixture0\ncollected 1 item\n\ntest_external_fixture.py F                                               [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\nThe requested fixture has no parameter defined for test:\n    test_external_fixture.py::test_foo\n\nRequested fixture 'fix_with_param' defined in:\nconftest.py:4\n\nRequested here:\ntest_external_fixture.py:2\n=========================== 1 failed in 0.01 seconds ===========================\n______________ TestParameterizedSubRequest.test_non_relative_path ______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_non_relative_path0/tests\ncollected 1 item\n\ntest_foos.py F                                                           [100%]\n\n=================================== FAILURES ===================================\n___________________________________ test_foo ___________________________________\nThe requested fixture has no parameter defined for test:\n    test_foos.py::test_foo\n\nRequested fixture 'fix_with_param' defined in:\n/tmp/pytest-of-root/pytest-0/test_non_relative_path0/fixtures/fix.py:4\n\nRequested here:\ntest_foos.py:4\n=========================== 1 failed in 0.01 seconds ===========================\n______________ test_pytest_fixture_setup_and_post_finalizer_hook _______________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_pytest_fixture_setup_and_post_finalizer_hook0\ncollected 1 item\n\ntests/test_hooks.py TESTS setup hook called for my_fixture from test_func\nROOT setup hook called for my_fixture from test_func\nTEST test_func\n.TESTS finalizer hook called for my_fixture from test_func\nROOT finalizer hook called for my_fixture from test_func\n\n\n=========================== 1 passed in 0.01 seconds ===========================\n____________ TestScopeOrdering.test_func_closure_module_auto[mark] _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_module_auto0\ncollected 1 item\n<Module test_func_closure_module_auto.py>\n  <Function test_func>\n\n========================= no tests ran in 0.00 seconds =========================\n___________ TestScopeOrdering.test_func_closure_module_auto[autouse] ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_module_auto1\ncollected 1 item\n<Module test_func_closure_module_auto.py>\n  <Function test_func>\n\n========================= no tests ran in 0.00 seconds =========================\n___________ TestScopeOrdering.test_func_closure_with_native_fixtures ___________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_with_native_fixtures0\ncollected 1 item\n<Module test_func_closure_with_native_fixtures.py>\n  <Function test_foo>\n\n========================= no tests ran in 0.00 seconds =========================\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_with_native_fixtures0\ncollected 1 item\n\ntest_func_closure_with_native_fixtures.py .                              [100%]\n\n=========================== 1 passed in 0.00 seconds ===========================\n__________________ TestScopeOrdering.test_func_closure_module __________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_module0\ncollected 1 item\n<Module test_func_closure_module.py>\n  <Function test_func>\n\n========================= no tests ran in 0.00 seconds =========================\n_____________ TestScopeOrdering.test_func_closure_scopes_reordered _____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_scopes_reordered0\ncollected 1 item\n<Module test_func_closure_scopes_reordered.py>\n  <Class Test>\n      <Function test_func>\n\n========================= no tests ran in 0.01 seconds =========================\n_______ TestScopeOrdering.test_func_closure_same_scope_closer_root_first _______\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_same_scope_closer_root_first0\ncollected 1 item\n<Package /tmp/pytest-of-root/pytest-0/test_func_closure_same_scope_closer_root_first0/sub>\n  <Module test_func.py>\n    <Function test_func>\n\n========================= no tests ran in 0.01 seconds =========================\n____________ TestScopeOrdering.test_func_closure_all_scopes_complex ____________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_func_closure_all_scopes_complex0\ncollected 1 item\n<Package /tmp/pytest-of-root/pytest-0/test_func_closure_all_scopes_complex0>\n  <Module test_func_closure_all_scopes_complex.py>\n    <Class Test>\n        <Function test_func>\n\n========================= no tests ran in 0.01 seconds =========================\n___________________ TestScopeOrdering.test_multiple_packages ___________________\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-4.4.2.dev174+g4a2fdce62.d20220101, py-1.11.0, pluggy-0.13.1\nrootdir: /tmp/pytest-of-root/pytest-0/test_multiple_packages0\ncollected 2 items\n\nroot/sub1/test_1.py .                                                    [ 50%]\nroot/sub2/test_2.py .                                                    [100%]\n\n=========================== 2 passed in 0.02 seconds ===========================\n=========================== short test summary info ============================\nXFAIL testing/python/fixtures.py::TestAutouseDiscovery::test_setup_enabled_functionnode\n  'enabled' feature not implemented\nPASSED testing/python/fixtures.py::test_getfuncargnames\nPASSED testing/python/fixtures.py::TestFillFixtures::test_fillfuncargs_exposed\nPASSED testing/python/fixtures.py::TestShowFixtures::test_fixture_disallow_twice\nPASSED testing/python/fixtures.py::test_call_fixture_function_error\nPASSED testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookupfails\nPASSED testing/python/fixtures.py::TestFillFixtures::test_detect_recursive_dependency_error\nPASSED testing/python/fixtures.py::TestFillFixtures::test_funcarg_basic\nPASSED testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_modulelevel\nPASSED testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_classlevel\nPASSED testing/python/fixtures.py::TestFillFixtures::test_conftest_funcargs_only_available_in_subdir\nPASSED testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_module_class\nPASSED testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_module\nPASSED testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_conftest\nPASSED testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_plugin\nPASSED testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_plugin_plugin\nPASSED testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_module\nPASSED testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_conftest\nPASSED testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_module\nPASSED testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_conftest\nPASSED testing/python/fixtures.py::TestFillFixtures::test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest\nPASSED testing/python/fixtures.py::TestFillFixtures::test_autouse_fixture_plugin\nPASSED testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_error\nPASSED testing/python/fixtures.py::TestFillFixtures::test_fixture_excinfo_leak\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_attributes\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_attributes_method\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_contains_funcarg_arg2fixturedefs\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_garbage\nPASSED testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_recursive\nPASSED testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_teardown\nPASSED testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfixturevalue]\nPASSED testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfuncargvalue]\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup_module\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_partial_setup_failure\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_subrequest_addfinalizer_exceptions\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_getmodulepath\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames\nPASSED testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames_dynamic_fixture\nPASSED testing/python/fixtures.py::TestRequestBasic::test_funcargnames_compatattr\nPASSED testing/python/fixtures.py::TestRequestBasic::test_setupdecorator_and_xunit\nPASSED testing/python/fixtures.py::TestRequestBasic::test_fixtures_sub_subdir_normalize_sep\nPASSED testing/python/fixtures.py::TestRequestBasic::test_show_fixtures_color_yes\nPASSED testing/python/fixtures.py::TestRequestBasic::test_newstyle_with_request\nPASSED testing/python/fixtures.py::TestRequestBasic::test_setupcontext_no_param\nPASSED testing/python/fixtures.py::TestRequestMarking::test_applymarker\nPASSED testing/python/fixtures.py::TestRequestMarking::test_accesskeywords\nPASSED testing/python/fixtures.py::TestRequestMarking::test_accessmarker_dynamic\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_noargfixturedec\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch_issue660\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_invalid_scope\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_funcarg_parametrized_and_used_twice\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_factory_uses_unknown_funcarg_as_dependency_error\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_factory_setup_as_classes_fails\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_request_can_be_overridden\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_marker\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_ini\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_seen_in_showmarkers\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_request_instance_issue203\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_fixture_parametrized_with_iterator\nPASSED testing/python/fixtures.py::TestFixtureUsages::test_setup_functions_as_fixtures\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_evil_objects_issue214\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest_and_module_and_class\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_relative_node_ids\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_xunit_fixture\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_fixture_complex\nPASSED testing/python/fixtures.py::TestFixtureManagerParseFactories::test_collect_custom_items\nPASSED testing/python/fixtures.py::TestAutouseDiscovery::test_parsefactories_conftest\nPASSED testing/python/fixtures.py::TestAutouseDiscovery::test_two_classes_separated_autouse\nPASSED testing/python/fixtures.py::TestAutouseDiscovery::test_setup_at_classlevel\nPASSED testing/python/fixtures.py::TestAutouseDiscovery::test_callables_nocode\nPASSED testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_conftests\nPASSED testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_module_and_two_classes\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_autouse_conftest_mid_directory\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_funcarg_and_setup\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_uses_parametrized_resource\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_session_parametrized_function\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_class_function_parametrization_finalization\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_scope_ordering\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_parametrization_setup_teardown_ordering\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_ordering_autouse_before_explicit\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p00]\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p01]\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p00]\nPASSED testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p01]\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_multiple_parametrization_issue_736\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt, val']\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,val']\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[['fixt', 'val']]\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[('fixt', 'val')]\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_session\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc_two_fix\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_exc\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_module_uses_session\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_module_and_finalizer\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch_various\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_register_only_with_mark\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize_and_scope\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_module_parametrized_ordering\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_dynamic_parametrized_ordering\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_class_ordering\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order_higher_scope_first\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrized_fixture_teardown_order\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_fixture_finalizer\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_class_scope_with_normal_tests\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_request_is_clean\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_lifecycle\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize_function_scoped_finalizers_called\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[session]\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[function]\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[module]\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_class_scope_parametrization_ordering\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_parametrize_setup_function\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_fixture_marked_function_not_collected_as_test\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids_yieldfixture\nPASSED testing/python/fixtures.py::TestFixtureMarker::test_deterministic_fixture_collection\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_setup[session--fspath class function module]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_setup[module-module fspath-cls function]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_setup[class-module fspath cls-function]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_setup[function-module fspath cls function-]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[session--fspath class function module]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[module-module fspath-cls function]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[class-module fspath cls-function]\nPASSED testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[function-module fspath cls function-]\nPASSED testing/python/fixtures.py::TestErrors::test_subfactory_missing_funcarg\nPASSED testing/python/fixtures.py::TestErrors::test_issue498_fixture_finalizer_failing\nPASSED testing/python/fixtures.py::TestErrors::test_setupfunc_missing_funcarg\nPASSED testing/python/fixtures.py::TestShowFixtures::test_funcarg_compat\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_verbose\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_testmodule\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[True]\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[False]\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_trimmed_doc\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc_first_line_unindented\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_in_class\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_different_files\nPASSED testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_with_same_name\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[yield_fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[yield_fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[yield_fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[yield_fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[yield_fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[fixture]\nPASSED testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[yield_fixture]\nPASSED testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_fixture\nPASSED testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_test\nPASSED testing/python/fixtures.py::TestParameterizedSubRequest::test_external_fixture\nPASSED testing/python/fixtures.py::TestParameterizedSubRequest::test_non_relative_path\nPASSED testing/python/fixtures.py::test_pytest_fixture_setup_and_post_finalizer_hook\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[mark]\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[autouse]\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_with_native_fixtures\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_scopes_reordered\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_same_scope_closer_root_first\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_func_closure_all_scopes_complex\nPASSED testing/python/fixtures.py::TestScopeOrdering::test_multiple_packages\n==================== 172 passed, 1 xfailed in 5.91 seconds =====================\n", {"testing/python/fixtures.py::test_getfuncargnames": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_fillfuncargs_exposed": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_fixture_disallow_twice": "PASSED", "testing/python/fixtures.py::test_call_fixture_function_error": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookupfails": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_detect_recursive_dependency_error": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_basic": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_modulelevel": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_classlevel": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_conftest_funcargs_only_available_in_subdir": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_module_class": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_module": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_conftest": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_plugin": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_plugin_plugin": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_module": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_conftest": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_module": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_conftest": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_autouse_fixture_plugin": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_error": "PASSED", "testing/python/fixtures.py::TestFillFixtures::test_fixture_excinfo_leak": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_attributes": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_attributes_method": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_contains_funcarg_arg2fixturedefs": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_garbage": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_recursive": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_teardown": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfixturevalue]": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfuncargvalue]": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup_module": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_partial_setup_failure": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_subrequest_addfinalizer_exceptions": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_getmodulepath": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames_dynamic_fixture": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_funcargnames_compatattr": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_setupdecorator_and_xunit": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_fixtures_sub_subdir_normalize_sep": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_show_fixtures_color_yes": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_newstyle_with_request": "PASSED", "testing/python/fixtures.py::TestRequestBasic::test_setupcontext_no_param": "PASSED", "testing/python/fixtures.py::TestRequestMarking::test_applymarker": "PASSED", "testing/python/fixtures.py::TestRequestMarking::test_accesskeywords": "PASSED", "testing/python/fixtures.py::TestRequestMarking::test_accessmarker_dynamic": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_noargfixturedec": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch_issue660": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_invalid_scope": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_funcarg_parametrized_and_used_twice": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_factory_uses_unknown_funcarg_as_dependency_error": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_factory_setup_as_classes_fails": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_request_can_be_overridden": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_marker": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_ini": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_seen_in_showmarkers": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_request_instance_issue203": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_fixture_parametrized_with_iterator": "PASSED", "testing/python/fixtures.py::TestFixtureUsages::test_setup_functions_as_fixtures": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_evil_objects_issue214": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest_and_module_and_class": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_relative_node_ids": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_xunit_fixture": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_fixture_complex": "PASSED", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_collect_custom_items": "PASSED", "testing/python/fixtures.py::TestAutouseDiscovery::test_parsefactories_conftest": "PASSED", "testing/python/fixtures.py::TestAutouseDiscovery::test_two_classes_separated_autouse": "PASSED", "testing/python/fixtures.py::TestAutouseDiscovery::test_setup_at_classlevel": "PASSED", "testing/python/fixtures.py::TestAutouseDiscovery::test_callables_nocode": "PASSED", "testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_conftests": "PASSED", "testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_module_and_two_classes": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_autouse_conftest_mid_directory": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_funcarg_and_setup": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_uses_parametrized_resource": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_session_parametrized_function": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_class_function_parametrization_finalization": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_scope_ordering": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_parametrization_setup_teardown_ordering": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_autouse_before_explicit": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p00]": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p01]": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p00]": "PASSED", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p01]": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_multiple_parametrization_issue_736": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,val']": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[['fixt',": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[('fixt',": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_session": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc_two_fix": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_exc": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_module_uses_session": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_module_and_finalizer": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch_various": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_register_only_with_mark": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_and_scope": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_module_parametrized_ordering": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_dynamic_parametrized_ordering": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_class_ordering": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order_higher_scope_first": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrized_fixture_teardown_order": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_fixture_finalizer": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_class_scope_with_normal_tests": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_request_is_clean": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_lifecycle": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_function_scoped_finalizers_called": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[session]": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[function]": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[module]": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_class_scope_parametrization_ordering": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_setup_function": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_fixture_marked_function_not_collected_as_test": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids_yieldfixture": "PASSED", "testing/python/fixtures.py::TestFixtureMarker::test_deterministic_fixture_collection": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[session--fspath": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[module-module": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[class-module": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[function-module": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[session--fspath": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[module-module": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[class-module": "PASSED", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[function-module": "PASSED", "testing/python/fixtures.py::TestErrors::test_subfactory_missing_funcarg": "PASSED", "testing/python/fixtures.py::TestErrors::test_issue498_fixture_finalizer_failing": "PASSED", "testing/python/fixtures.py::TestErrors::test_setupfunc_missing_funcarg": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_funcarg_compat": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_verbose": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_testmodule": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[True]": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[False]": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_trimmed_doc": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc_first_line_unindented": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_in_class": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_different_files": "PASSED", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_with_same_name": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[yield_fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[yield_fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[yield_fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[yield_fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[yield_fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[fixture]": "PASSED", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[yield_fixture]": "PASSED", "testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_fixture": "PASSED", "testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_test": "PASSED", "testing/python/fixtures.py::TestParameterizedSubRequest::test_external_fixture": "PASSED", "testing/python/fixtures.py::TestParameterizedSubRequest::test_non_relative_path": "PASSED", "testing/python/fixtures.py::test_pytest_fixture_setup_and_post_finalizer_hook": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[mark]": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[autouse]": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_with_native_fixtures": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_scopes_reordered": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_same_scope_closer_root_first": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_all_scopes_complex": "PASSED", "testing/python/fixtures.py::TestScopeOrdering::test_multiple_packages": "PASSED"}]