[{"repo": "sympy/sympy", "instance_id": "sympy__sympy-16281", "base_commit": "41490b75f3621408e0468b0e7b6dc409601fc6ff", "patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -491,10 +491,9 @@ def _print_Product(self, expr):\n \n         for lim in expr.limits:\n             width = (func_height + 2) * 5 // 3 - 2\n-            sign_lines = []\n-            sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n+            sign_lines = [horizontal_chr + corner_chr + (horizontal_chr * (width-2)) + corner_chr + horizontal_chr]\n+            for _ in range(func_height + 1):\n+                sign_lines.append(' ' + vertical_chr + (' ' * (width-2)) + vertical_chr + ' ')\n \n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n", "test_patch": "diff --git a/sympy/printing/pretty/tests/test_pretty.py b/sympy/printing/pretty/tests/test_pretty.py\n--- a/sympy/printing/pretty/tests/test_pretty.py\n+++ b/sympy/printing/pretty/tests/test_pretty.py\n@@ -2054,51 +2054,48 @@ def test_pretty_product():\n     unicode_str = \\\n u(\"\"\"\\\n     l           \\n\\\n-\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c      \\n\\\n-\u2502        \u2502  \u239b 2\u239e\\n\\\n-\u2502        \u2502  \u239cn \u239f\\n\\\n-\u2502        \u2502 f\u239c\u2500\u2500\u239f\\n\\\n-\u2502        \u2502  \u239d9 \u23a0\\n\\\n-\u2502        \u2502      \\n\\\n+\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500      \\n\\\n+ \u2502      \u2502   \u239b 2\u239e\\n\\\n+ \u2502      \u2502   \u239cn \u239f\\n\\\n+ \u2502      \u2502  f\u239c\u2500\u2500\u239f\\n\\\n+ \u2502      \u2502   \u239d9 \u23a0\\n\\\n+ \u2502      \u2502       \\n\\\n        2        \\n\\\n   n = k         \"\"\")\n     ascii_str = \\\n \"\"\"\\\n     l           \\n\\\n __________      \\n\\\n-|        |  / 2\\\\\\n\\\n-|        |  |n |\\n\\\n-|        | f|--|\\n\\\n-|        |  \\\\9 /\\n\\\n-|        |      \\n\\\n+ |      |   / 2\\\\\\n\\\n+ |      |   |n |\\n\\\n+ |      |  f|--|\\n\\\n+ |      |   \\\\9 /\\n\\\n+ |      |       \\n\\\n        2        \\n\\\n   n = k         \"\"\"\n \n-    assert pretty(expr) == ascii_str\n-    assert upretty(expr) == unicode_str\n-\n     expr = Product(f((n/3)**2), (n, k**2, l), (l, 1, m))\n \n     unicode_str = \\\n u(\"\"\"\\\n     m          l           \\n\\\n-\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c \u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c      \\n\\\n-\u2502        \u2502 \u2502        \u2502  \u239b 2\u239e\\n\\\n-\u2502        \u2502 \u2502        \u2502  \u239cn \u239f\\n\\\n-\u2502        \u2502 \u2502        \u2502 f\u239c\u2500\u2500\u239f\\n\\\n-\u2502        \u2502 \u2502        \u2502  \u239d9 \u23a0\\n\\\n-\u2502        \u2502 \u2502        \u2502      \\n\\\n+\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500 \u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500      \\n\\\n+ \u2502      \u2502   \u2502      \u2502   \u239b 2\u239e\\n\\\n+ \u2502      \u2502   \u2502      \u2502   \u239cn \u239f\\n\\\n+ \u2502      \u2502   \u2502      \u2502  f\u239c\u2500\u2500\u239f\\n\\\n+ \u2502      \u2502   \u2502      \u2502   \u239d9 \u23a0\\n\\\n+ \u2502      \u2502   \u2502      \u2502       \\n\\\n   l = 1           2        \\n\\\n              n = k         \"\"\")\n     ascii_str = \\\n \"\"\"\\\n     m          l           \\n\\\n __________ __________      \\n\\\n-|        | |        |  / 2\\\\\\n\\\n-|        | |        |  |n |\\n\\\n-|        | |        | f|--|\\n\\\n-|        | |        |  \\\\9 /\\n\\\n-|        | |        |      \\n\\\n+ |      |   |      |   / 2\\\\\\n\\\n+ |      |   |      |   |n |\\n\\\n+ |      |   |      |  f|--|\\n\\\n+ |      |   |      |   \\\\9 /\\n\\\n+ |      |   |      |       \\n\\\n   l = 1           2        \\n\\\n              n = k         \"\"\"\n \n@@ -5514,19 +5511,19 @@ def test_issue_6359():\n            2\n /  2      \\\\ \\n\\\n |______   | \\n\\\n-||    |  2| \\n\\\n-||    | x | \\n\\\n-||    |   | \\n\\\n+| |  |   2| \\n\\\n+| |  |  x | \\n\\\n+| |  |    | \\n\\\n \\\\x = 1    / \\\n \"\"\"\n     assert upretty(Product(x**2, (x, 1, 2))**2) == \\\n u(\"\"\"\\\n            2\n \u239b  2      \u239e \\n\\\n-\u239c\u252c\u2500\u2500\u2500\u2500\u252c   \u239f \\n\\\n-\u239c\u2502    \u2502  2\u239f \\n\\\n-\u239c\u2502    \u2502 x \u239f \\n\\\n-\u239c\u2502    \u2502   \u239f \\n\\\n+\u239c\u2500\u252c\u2500\u2500\u252c\u2500   \u239f \\n\\\n+\u239c \u2502  \u2502   2\u239f \\n\\\n+\u239c \u2502  \u2502  x \u239f \\n\\\n+\u239c \u2502  \u2502    \u239f \\n\\\n \u239dx = 1    \u23a0 \\\n \"\"\")\n \n", "problem_statement": "Product pretty print could be improved\nThis is what the pretty printing for `Product` looks like:\r\n\r\n```\r\n>>> pprint(Product(1, (n, 1, oo)))\r\n  \u221e\r\n\u252c\u2500\u2500\u2500\u252c\r\n\u2502   \u2502 1\r\n\u2502   \u2502\r\nn = 1\r\n>>> pprint(Product(1/n, (n, 1, oo)))\r\n   \u221e\r\n\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\r\n\u2502      \u2502 1\r\n\u2502      \u2502 \u2500\r\n\u2502      \u2502 n\r\n\u2502      \u2502\r\n n = 1\r\n>>> pprint(Product(1/n**2, (n, 1, oo)))\r\n    \u221e\r\n\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\r\n\u2502        \u2502 1\r\n\u2502        \u2502 \u2500\u2500\r\n\u2502        \u2502  2\r\n\u2502        \u2502 n\r\n\u2502        \u2502\r\n  n = 1\r\n>>> pprint(Product(1, (n, 1, oo)), use_unicode=False)\r\n  oo\r\n_____\r\n|   | 1\r\n|   |\r\nn = 1\r\n>>> pprint(Product(1/n, (n, 1, oo)), use_unicode=False)\r\n   oo\r\n________\r\n|      | 1\r\n|      | -\r\n|      | n\r\n|      |\r\n n = 1\r\n>>> pprint(Product(1/n**2, (n, 1, oo)), use_unicode=False)\r\n    oo\r\n__________\r\n|        | 1\r\n|        | --\r\n|        |  2\r\n|        | n\r\n|        |\r\n  n = 1\r\n```\r\n\r\n(if those don't look good in your browser copy paste them into the terminal)\r\n\r\nThis could be improved:\r\n\r\n- Why is there always an empty line at the bottom of the \u220f? Keeping everything below the horizontal line is good, but the bottom looks asymmetric, and it makes the \u220f bigger than it needs to be.\r\n\r\n- The \u220f is too fat IMO. \r\n\r\n- It might look better if we extended the top bar. I'm unsure about this. \r\n\r\nCompare this\r\n\r\n```\r\n    \u221e\r\n\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\r\n \u2502     \u2502  1\r\n \u2502     \u2502  \u2500\u2500\r\n \u2502     \u2502   2\r\n \u2502     \u2502  n\r\n  n = 1\r\n```\r\n\r\nThat's still almost twice as wide as the equivalent Sum, but if you make it much skinnier it starts to look bad.\r\n\r\n```\r\n  \u221e\r\n ____\r\n \u2572\r\n  \u2572   1\r\n   \u2572  \u2500\u2500\r\n   \u2571   2\r\n  \u2571   n\r\n \u2571\r\n \u203e\u203e\u203e\u203e\r\nn = 1\r\n```\n", "hints_text": "", "created_at": "2019-03-16T19:37:33Z", "version": "1.4", "FAIL_TO_PASS": "[\"test_pretty_product\", \"test_issue_6359\"]", "PASS_TO_PASS": "[\"test_pretty_ascii_str\", \"test_pretty_unicode_str\", \"test_upretty_greek\", \"test_upretty_multiindex\", \"test_upretty_sub_super\", \"test_upretty_subs_missing_in_24\", \"test_missing_in_2X_issue_9047\", \"test_upretty_modifiers\", \"test_pretty_Cycle\", \"test_pretty_basic\", \"test_negative_fractions\", \"test_issue_5524\", \"test_pretty_ordering\", \"test_EulerGamma\", \"test_GoldenRatio\", \"test_pretty_relational\", \"test_Assignment\", \"test_AugmentedAssignment\", \"test_issue_7117\", \"test_pretty_rational\", \"test_pretty_functions\", \"test_pretty_sqrt\", \"test_pretty_sqrt_char_knob\", \"test_pretty_sqrt_longsymbol_no_sqrt_char\", \"test_pretty_KroneckerDelta\", \"test_pretty_lambda\", \"test_pretty_order\", \"test_pretty_derivatives\", \"test_pretty_integrals\", \"test_pretty_matrix\", \"test_pretty_ndim_arrays\", \"test_tensor_TensorProduct\", \"test_diffgeom_print_WedgeProduct\", \"test_Adjoint\", \"test_pretty_Trace_issue_9044\", \"test_MatrixExpressions\", \"test_pretty_dotproduct\", \"test_pretty_piecewise\", \"test_pretty_ITE\", \"test_pretty_seq\", \"test_any_object_in_sequence\", \"test_print_builtin_set\", \"test_pretty_sets\", \"test_pretty_SetExpr\", \"test_pretty_ImageSet\", \"test_pretty_ConditionSet\", \"test_pretty_ComplexRegion\", \"test_pretty_Union_issue_10414\", \"test_pretty_Intersection_issue_10414\", \"test_ProductSet_paranthesis\", \"test_ProductSet_prod_char_issue_10413\", \"test_pretty_sequences\", \"test_pretty_FourierSeries\", \"test_pretty_FormalPowerSeries\", \"test_pretty_limits\", \"test_pretty_ComplexRootOf\", \"test_pretty_RootSum\", \"test_GroebnerBasis\", \"test_pretty_Boolean\", \"test_pretty_Domain\", \"test_pretty_prec\", \"test_pprint\", \"test_pretty_class\", \"test_pretty_no_wrap_line\", \"test_settings\", \"test_pretty_sum\", \"test_units\", \"test_pretty_Subs\", \"test_gammas\", \"test_beta\", \"test_function_subclass_different_name\", \"test_SingularityFunction\", \"test_deltas\", \"test_hyper\", \"test_meijerg\", \"test_noncommutative\", \"test_pretty_special_functions\", \"test_pretty_geometry\", \"test_expint\", \"test_elliptic_functions\", \"test_RandomDomain\", \"test_PrettyPoly\", \"test_issue_6285\", \"test_issue_6739\", \"test_complicated_symbol_unchanged\", \"test_categories\", \"test_PrettyModules\", \"test_QuotientRing\", \"test_Homomorphism\", \"test_Tr\", \"test_pretty_Add\", \"test_issue_7179\", \"test_issue_7180\", \"test_pretty_Complement\", \"test_pretty_SymmetricDifference\", \"test_pretty_Contains\", \"test_issue_4335\", \"test_issue_6324\", \"test_issue_7927\", \"test_issue_6134\", \"test_issue_9877\", \"test_issue_13651\", \"test_pretty_primenu\", \"test_pretty_primeomega\", \"test_pretty_Mod\", \"test_issue_11801\", \"test_pretty_UnevaluatedExpr\", \"test_issue_10472\", \"test_MatrixElement_printing\", \"test_issue_12675\", \"test_MatrixSymbol_printing\", \"test_degree_printing\", \"test_vector_expr_pretty_printing\", \"test_pretty_print_tensor_expr\", \"test_pretty_print_tensor_partial_deriv\", \"test_issue_15560\", \"test_print_lerchphi\", \"test_issue_15583\", \"test_matrixSymbolBold\", \"test_center_accent\"]", "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004"}, "On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   sympy/printing/pretty/pretty.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 41490b75f3621408e0468b0e7b6dc409601fc6ff\nMerge: 1399d01273 ba47896656\nAuthor: Chris Smith <smichr@gmail.com>\nDate:   Sat Mar 16 11:31:29 2019 -0500\n\n    Merge pull request #16274 from oscargus/mathmlfunctions2\n    \n    MathML printing of matrix functions, constants and SingularityFunction\n\ndiff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 6d3cc05bd3..83031f1440 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -491,10 +491,9 @@ def _print_Product(self, expr):\n \n         for lim in expr.limits:\n             width = (func_height + 2) * 5 // 3 - 2\n-            sign_lines = []\n-            sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n+            sign_lines = [horizontal_chr + corner_chr + (horizontal_chr * (width-2)) + corner_chr + horizontal_chr]\n+            for _ in range(func_height + 1):\n+                sign_lines.append(' ' + vertical_chr + (' ' * (width-2)) + vertical_chr + ' ')\n \n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\nObtaining file:///testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nRequirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.4.dev0) (1.3.0)\nInstalling collected packages: sympy\n  Attempting uninstall: sympy\n    Found existing installation: sympy 1.4.dev0\n    Uninstalling sympy-1.4.dev0:\n      Successfully uninstalled sympy-1.4.dev0\n  Running setup.py develop for sympy\nSuccessfully installed sympy\n============================= test process starts ==============================\nexecutable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]\narchitecture:       64-bit\ncache:              no\nground types:       python \nnumpy:              None\nrandom seed:        65780665\nhash randomization: off\n\nsympy/printing/pretty/tests/test_pretty.py[125] \ntest_pretty_ascii_str ok\ntest_pretty_unicode_str ok\ntest_upretty_greek ok\ntest_upretty_multiindex ok\ntest_upretty_sub_super ok\ntest_upretty_subs_missing_in_24 ok\ntest_missing_in_2X_issue_9047 ok\ntest_upretty_modifiers ok\ntest_pretty_Cycle ok\ntest_pretty_basic ok\ntest_negative_fractions ok\ntest_issue_5524 ok\ntest_pretty_ordering ok\ntest_EulerGamma ok\ntest_GoldenRatio ok\ntest_pretty_relational ok\ntest_Assignment ok\ntest_AugmentedAssignment ok\ntest_issue_7117 ok\ntest_pretty_rational ok\ntest_pretty_functions ok\ntest_pretty_sqrt ok\ntest_pretty_sqrt_char_knob ok\ntest_pretty_sqrt_longsymbol_no_sqrt_char ok\ntest_pretty_KroneckerDelta ok\ntest_pretty_product ok\ntest_pretty_lambda ok\ntest_pretty_order ok\ntest_pretty_derivatives ok\ntest_pretty_integrals ok\ntest_pretty_matrix ok\ntest_pretty_ndim_arrays ok\ntest_tensor_TensorProduct ok\ntest_diffgeom_print_WedgeProduct ok\ntest_Adjoint ok\ntest_pretty_Trace_issue_9044 ok\ntest_MatrixExpressions ok\ntest_pretty_dotproduct ok\ntest_pretty_piecewise ok\ntest_pretty_ITE ok\ntest_pretty_seq ok\ntest_any_object_in_sequence ok\ntest_print_builtin_set ok\ntest_pretty_sets ok\ntest_pretty_SetExpr ok\ntest_pretty_ImageSet ok\ntest_pretty_ConditionSet ok\ntest_pretty_ComplexRegion ok\ntest_pretty_Union_issue_10414 ok\ntest_pretty_Intersection_issue_10414 ok\ntest_ProductSet_paranthesis ok\ntest_ProductSet_prod_char_issue_10413 ok\ntest_pretty_sequences ok\ntest_pretty_FourierSeries ok\ntest_pretty_FormalPowerSeries ok\ntest_pretty_limits ok\ntest_pretty_ComplexRootOf ok\ntest_pretty_RootSum ok\ntest_GroebnerBasis ok\ntest_pretty_Boolean ok\ntest_pretty_Domain ok\ntest_pretty_prec ok\ntest_pprint ok\ntest_pretty_class ok\ntest_pretty_no_wrap_line ok\ntest_settings ok\ntest_pretty_sum ok\ntest_units ok\ntest_pretty_Subs ok\ntest_gammas ok\ntest_beta ok\ntest_function_subclass_different_name ok\ntest_SingularityFunction ok\ntest_deltas ok\ntest_hyper ok\ntest_meijerg ok\ntest_noncommutative ok\ntest_pretty_special_functions ok\ntest_pretty_geometry ok\ntest_expint ok\ntest_elliptic_functions ok\ntest_RandomDomain ok\ntest_PrettyPoly ok\ntest_issue_6285 ok\ntest_issue_6359 ok\ntest_issue_6739 ok\ntest_complicated_symbol_unchanged ok\ntest_categories ok\ntest_PrettyModules ok\ntest_QuotientRing ok\ntest_Homomorphism ok\ntest_Tr ok\ntest_pretty_Add ok\ntest_issue_7179 ok\ntest_issue_7180 ok\ntest_pretty_Complement ok\ntest_pretty_SymmetricDifference ok\ntest_pretty_Contains ok\ntest_issue_8292 E\ntest_issue_4335 ok\ntest_issue_8344 E\ntest_issue_6324 ok\ntest_issue_7927 ok\ntest_issue_6134 ok\ntest_issue_9877 ok\ntest_issue_13651 ok\ntest_pretty_primenu ok\ntest_pretty_primeomega ok\ntest_pretty_Mod ok\ntest_issue_11801 ok\ntest_pretty_UnevaluatedExpr ok\ntest_issue_10472 ok\ntest_MatrixElement_printing ok\ntest_issue_12675 ok\ntest_MatrixSymbol_printing ok\ntest_degree_printing ok\ntest_vector_expr_pretty_printing ok\ntest_pretty_print_tensor_expr ok\ntest_pretty_print_tensor_partial_deriv ok\ntest_issue_15560 ok\ntest_print_lerchphi ok\ntest_issue_15583 ok\ntest_matrixSymbolBold ok\ntest_center_accent ok\ntest_imaginary_unit ok                                                    [FAIL]\n\n\n________________________________________________________________________________\n__________ sympy/printing/pretty/tests/test_pretty.py:test_issue_8292 __________\nTraceback (most recent call last):\n  File \"/testbed/sympy/printing/pretty/tests/test_pretty.py\", line 5859, in test_issue_8292\n    e = sympify('((x+x**4)/(x-1))-(2*(x-1)**4/(x-1)**4)', evaluate=False)\n  File \"/testbed/sympy/core/sympify.py\", line 384, in sympify\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n  File \"/testbed/sympy/parsing/sympy_parser.py\", line 964, in parse_expr\n    code = compile(evaluateFalse(code), '<string>', 'eval')\nValueError: Name node can't be used with 'False' constant\n________________________________________________________________________________\n__________ sympy/printing/pretty/tests/test_pretty.py:test_issue_8344 __________\nTraceback (most recent call last):\n  File \"/testbed/sympy/printing/pretty/tests/test_pretty.py\", line 5901, in test_issue_8344\n    e = sympify('2*x*y**2/1**2 + 1', evaluate=False)\n  File \"/testbed/sympy/core/sympify.py\", line 384, in sympify\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n  File \"/testbed/sympy/parsing/sympy_parser.py\", line 964, in parse_expr\n    code = compile(evaluateFalse(code), '<string>', 'eval')\nValueError: Name node can't be used with 'False' constant\n\n========== tests finished: 123 passed, 2 exceptions, in 5.64 seconds ===========\nDO *NOT* COMMIT!\n", {"sympy/printing/pretty/tests/test_pretty.py:test_issue_8292": "FAILED", "sympy/printing/pretty/tests/test_pretty.py:test_issue_8344": "FAILED", "test_pretty_ascii_str": "PASSED", "test_pretty_unicode_str": "PASSED", "test_upretty_greek": "PASSED", "test_upretty_multiindex": "PASSED", "test_upretty_sub_super": "PASSED", "test_upretty_subs_missing_in_24": "PASSED", "test_missing_in_2X_issue_9047": "PASSED", "test_upretty_modifiers": "PASSED", "test_pretty_Cycle": "PASSED", "test_pretty_basic": "PASSED", "test_negative_fractions": "PASSED", "test_issue_5524": "PASSED", "test_pretty_ordering": "PASSED", "test_EulerGamma": "PASSED", "test_GoldenRatio": "PASSED", "test_pretty_relational": "PASSED", "test_Assignment": "PASSED", "test_AugmentedAssignment": "PASSED", "test_issue_7117": "PASSED", "test_pretty_rational": "PASSED", "test_pretty_functions": "PASSED", "test_pretty_sqrt": "PASSED", "test_pretty_sqrt_char_knob": "PASSED", "test_pretty_sqrt_longsymbol_no_sqrt_char": "PASSED", "test_pretty_KroneckerDelta": "PASSED", "test_pretty_product": "PASSED", "test_pretty_lambda": "PASSED", "test_pretty_order": "PASSED", "test_pretty_derivatives": "PASSED", "test_pretty_integrals": "PASSED", "test_pretty_matrix": "PASSED", "test_pretty_ndim_arrays": "PASSED", "test_tensor_TensorProduct": "PASSED", "test_diffgeom_print_WedgeProduct": "PASSED", "test_Adjoint": "PASSED", "test_pretty_Trace_issue_9044": "PASSED", "test_MatrixExpressions": "PASSED", "test_pretty_dotproduct": "PASSED", "test_pretty_piecewise": "PASSED", "test_pretty_ITE": "PASSED", "test_pretty_seq": "PASSED", "test_any_object_in_sequence": "PASSED", "test_print_builtin_set": "PASSED", "test_pretty_sets": "PASSED", "test_pretty_SetExpr": "PASSED", "test_pretty_ImageSet": "PASSED", "test_pretty_ConditionSet": "PASSED", "test_pretty_ComplexRegion": "PASSED", "test_pretty_Union_issue_10414": "PASSED", "test_pretty_Intersection_issue_10414": "PASSED", "test_ProductSet_paranthesis": "PASSED", "test_ProductSet_prod_char_issue_10413": "PASSED", "test_pretty_sequences": "PASSED", "test_pretty_FourierSeries": "PASSED", "test_pretty_FormalPowerSeries": "PASSED", "test_pretty_limits": "PASSED", "test_pretty_ComplexRootOf": "PASSED", "test_pretty_RootSum": "PASSED", "test_GroebnerBasis": "PASSED", "test_pretty_Boolean": "PASSED", "test_pretty_Domain": "PASSED", "test_pretty_prec": "PASSED", "test_pprint": "PASSED", "test_pretty_class": "PASSED", "test_pretty_no_wrap_line": "PASSED", "test_settings": "PASSED", "test_pretty_sum": "PASSED", "test_units": "PASSED", "test_pretty_Subs": "PASSED", "test_gammas": "PASSED", "test_beta": "PASSED", "test_function_subclass_different_name": "PASSED", "test_SingularityFunction": "PASSED", "test_deltas": "PASSED", "test_hyper": "PASSED", "test_meijerg": "PASSED", "test_noncommutative": "PASSED", "test_pretty_special_functions": "PASSED", "test_pretty_geometry": "PASSED", "test_expint": "PASSED", "test_elliptic_functions": "PASSED", "test_RandomDomain": "PASSED", "test_PrettyPoly": "PASSED", "test_issue_6285": "PASSED", "test_issue_6359": "PASSED", "test_issue_6739": "PASSED", "test_complicated_symbol_unchanged": "PASSED", "test_categories": "PASSED", "test_PrettyModules": "PASSED", "test_QuotientRing": "PASSED", "test_Homomorphism": "PASSED", "test_Tr": "PASSED", "test_pretty_Add": "PASSED", "test_issue_7179": "PASSED", "test_issue_7180": "PASSED", "test_pretty_Complement": "PASSED", "test_pretty_SymmetricDifference": "PASSED", "test_pretty_Contains": "PASSED", "test_issue_8292": "ERROR", "test_issue_4335": "PASSED", "test_issue_8344": "ERROR", "test_issue_6324": "PASSED", "test_issue_7927": "PASSED", "test_issue_6134": "PASSED", "test_issue_9877": "PASSED", "test_issue_13651": "PASSED", "test_pretty_primenu": "PASSED", "test_pretty_primeomega": "PASSED", "test_pretty_Mod": "PASSED", "test_issue_11801": "PASSED", "test_pretty_UnevaluatedExpr": "PASSED", "test_issue_10472": "PASSED", "test_MatrixElement_printing": "PASSED", "test_issue_12675": "PASSED", "test_MatrixSymbol_printing": "PASSED", "test_degree_printing": "PASSED", "test_vector_expr_pretty_printing": "PASSED", "test_pretty_print_tensor_expr": "PASSED", "test_pretty_print_tensor_partial_deriv": "PASSED", "test_issue_15560": "PASSED", "test_print_lerchphi": "PASSED", "test_issue_15583": "PASSED", "test_matrixSymbolBold": "PASSED", "test_center_accent": "PASSED"}]