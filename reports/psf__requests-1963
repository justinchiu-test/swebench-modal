[{"repo": "psf/requests", "instance_id": "psf__requests-1963", "base_commit": "110048f9837f8441ea536804115e80b69f400277", "patch": "diff --git a/requests/sessions.py b/requests/sessions.py\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -168,8 +168,11 @@ def resolve_redirects(self, resp, req, stream=False, timeout=None,\n             if new_auth is not None:\n                 prepared_request.prepare_auth(new_auth)\n \n+            # Override the original request.\n+            req = prepared_request\n+\n             resp = self.send(\n-                prepared_request,\n+                req,\n                 stream=stream,\n                 timeout=timeout,\n                 verify=verify,\n", "test_patch": "diff --git a/test_requests.py b/test_requests.py\n--- a/test_requests.py\n+++ b/test_requests.py\n@@ -8,6 +8,7 @@\n import os\n import pickle\n import unittest\n+import collections\n \n import requests\n import pytest\n@@ -18,6 +19,7 @@\n from requests.cookies import cookiejar_from_dict, morsel_to_cookie\n from requests.exceptions import InvalidURL, MissingSchema\n from requests.structures import CaseInsensitiveDict\n+from requests.sessions import SessionRedirectMixin\n \n try:\n     import StringIO\n@@ -1187,5 +1189,64 @@ def test_stream_timeout(self):\n             assert 'Read timed out' in e.args[0].args[0]\n \n \n+SendCall = collections.namedtuple('SendCall', ('args', 'kwargs'))\n+\n+\n+class RedirectSession(SessionRedirectMixin):\n+    def __init__(self, order_of_redirects):\n+        self.redirects = order_of_redirects\n+        self.calls = []\n+        self.max_redirects = 30\n+        self.cookies = {}\n+        self.trust_env = False\n+\n+    def send(self, *args, **kwargs):\n+        self.calls.append(SendCall(args, kwargs))\n+        return self.build_response()\n+\n+    def build_response(self):\n+        request = self.calls[-1].args[0]\n+        r = requests.Response()\n+\n+        try:\n+            r.status_code = int(self.redirects.pop(0))\n+        except IndexError:\n+            r.status_code = 200\n+\n+        r.headers = CaseInsensitiveDict({'Location': '/'})\n+        r.raw = self._build_raw()\n+        r.request = request\n+        return r\n+\n+    def _build_raw(self):\n+        string = StringIO.StringIO('')\n+        setattr(string, 'release_conn', lambda *args: args)\n+        return string\n+\n+\n+class TestRedirects:\n+    default_keyword_args = {\n+        'stream': False,\n+        'verify': True,\n+        'cert': None,\n+        'timeout': None,\n+        'allow_redirects': False,\n+        'proxies': None,\n+    }\n+\n+    def test_requests_are_updated_each_time(self):\n+        session = RedirectSession([303, 307])\n+        prep = requests.Request('POST', 'http://httpbin.org/post').prepare()\n+        r0 = session.send(prep)\n+        assert r0.request.method == 'POST'\n+        assert session.calls[-1] == SendCall((r0.request,), {})\n+        redirect_generator = session.resolve_redirects(r0, prep)\n+        for response in redirect_generator:\n+            assert response.request.method == 'GET'\n+            send_call = SendCall((response.request,),\n+                                 TestRedirects.default_keyword_args)\n+            assert session.calls[-1] == send_call\n+\n+\n if __name__ == '__main__':\n     unittest.main()\n", "problem_statement": "`Session.resolve_redirects` copies the original request for all subsequent requests, can cause incorrect method selection\nConsider the following redirection chain:\n\n```\nPOST /do_something HTTP/1.1\nHost: server.example.com\n...\n\nHTTP/1.1 303 See Other\nLocation: /new_thing_1513\n\nGET /new_thing_1513\nHost: server.example.com\n...\n\nHTTP/1.1 307 Temporary Redirect\nLocation: //failover.example.com/new_thing_1513\n```\n\nThe intermediate 303 See Other has caused the POST to be converted to\na GET.  The subsequent 307 should preserve the GET.  However, because\n`Session.resolve_redirects` starts each iteration by copying the _original_\nrequest object, Requests will issue a POST!\n\n", "hints_text": "Uh, yes, that's a bug. =D\n\nThis is also a good example of something that there's no good way to write a test for with httpbin as-is.\n\nThis can be tested though, without httpbin, and I'll tackle this one tonight or this weekend. I've tinkered with `resolve_redirects` enough to be certain enough that I caused this. As such I feel its my responsibility to fix it.\n", "created_at": "2014-03-15T17:42:11Z", "version": "2.3", "FAIL_TO_PASS": "[\"test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE\", \"test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET\", \"test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE\", \"test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET\", \"test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA\", \"test_requests.py::RequestsTestCase::test_param_cookiejar_works\", \"test_requests.py::TestRedirects::test_requests_are_updated_each_time\"]", "PASS_TO_PASS": "[\"test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET\", \"test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES\", \"test_requests.py::RequestsTestCase::test_DIGEST_STREAM\", \"test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE\", \"test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS\", \"test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS\", \"test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD\", \"test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT\", \"test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET\", \"test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES\", \"test_requests.py::RequestsTestCase::test_autoset_header_values_are_native\", \"test_requests.py::RequestsTestCase::test_basic_building\", \"test_requests.py::RequestsTestCase::test_basicauth_with_netrc\", \"test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files\", \"test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests\", \"test_requests.py::RequestsTestCase::test_cookie_as_dict_items\", \"test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items\", \"test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len\", \"test_requests.py::RequestsTestCase::test_cookie_as_dict_keys\", \"test_requests.py::RequestsTestCase::test_cookie_as_dict_values\", \"test_requests.py::RequestsTestCase::test_cookie_parameters\", \"test_requests.py::RequestsTestCase::test_cookie_persists_via_api\", \"test_requests.py::RequestsTestCase::test_cookie_quote_wrapped\", \"test_requests.py::RequestsTestCase::test_cookie_removed_on_expire\", \"test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect\", \"test_requests.py::RequestsTestCase::test_custom_content_type\", \"test_requests.py::RequestsTestCase::test_decompress_gzip\", \"test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post\", \"test_requests.py::RequestsTestCase::test_entry_points\", \"test_requests.py::RequestsTestCase::test_fixes_1329\", \"test_requests.py::RequestsTestCase::test_generic_cookiejar_works\", \"test_requests.py::RequestsTestCase::test_get_auth_from_url\", \"test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes\", \"test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces\", \"test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces\", \"test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars\", \"test_requests.py::RequestsTestCase::test_header_keys_are_native\", \"test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive\", \"test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent\", \"test_requests.py::RequestsTestCase::test_hook_receives_request_arguments\", \"test_requests.py::RequestsTestCase::test_http_error\", \"test_requests.py::RequestsTestCase::test_invalid_url\", \"test_requests.py::RequestsTestCase::test_links\", \"test_requests.py::RequestsTestCase::test_long_authinfo_in_url\", \"test_requests.py::RequestsTestCase::test_no_content_length\", \"test_requests.py::RequestsTestCase::test_oddball_schemes_dont_check_URLs\", \"test_requests.py::RequestsTestCase::test_params_are_added_before_fragment\", \"test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive\", \"test_requests.py::RequestsTestCase::test_path_is_not_double_encoded\", \"test_requests.py::RequestsTestCase::test_prepared_from_session\", \"test_requests.py::RequestsTestCase::test_prepared_request_hook\", \"test_requests.py::RequestsTestCase::test_pyopenssl_redirect\", \"test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable\", \"test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie\", \"test_requests.py::RequestsTestCase::test_request_cookies_not_persisted\", \"test_requests.py::RequestsTestCase::test_request_ok_set\", \"test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden\", \"test_requests.py::RequestsTestCase::test_response_is_iterable\", \"test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks\", \"test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks\", \"test_requests.py::RequestsTestCase::test_session_pickling\", \"test_requests.py::RequestsTestCase::test_set_cookie_on_301\", \"test_requests.py::RequestsTestCase::test_status_raising\", \"test_requests.py::RequestsTestCase::test_time_elapsed_blank\", \"test_requests.py::RequestsTestCase::test_transport_adapter_ordering\", \"test_requests.py::RequestsTestCase::test_unicode_get\", \"test_requests.py::RequestsTestCase::test_unicode_header_name\", \"test_requests.py::RequestsTestCase::test_unicode_method_name\", \"test_requests.py::RequestsTestCase::test_unicode_multipart_post\", \"test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames\", \"test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect\", \"test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param\", \"test_requests.py::RequestsTestCase::test_user_agent_transfers\", \"test_requests.py::TestContentEncodingDetection::test_html4_pragma\", \"test_requests.py::TestContentEncodingDetection::test_html_charset\", \"test_requests.py::TestContentEncodingDetection::test_none\", \"test_requests.py::TestContentEncodingDetection::test_precedence\", \"test_requests.py::TestContentEncodingDetection::test_xhtml_pragma\", \"test_requests.py::TestContentEncodingDetection::test_xml\", \"test_requests.py::TestCaseInsensitiveDict::test_contains\", \"test_requests.py::TestCaseInsensitiveDict::test_delitem\", \"test_requests.py::TestCaseInsensitiveDict::test_docstring_example\", \"test_requests.py::TestCaseInsensitiveDict::test_equality\", \"test_requests.py::TestCaseInsensitiveDict::test_fixes_649\", \"test_requests.py::TestCaseInsensitiveDict::test_get\", \"test_requests.py::TestCaseInsensitiveDict::test_getitem\", \"test_requests.py::TestCaseInsensitiveDict::test_iter\", \"test_requests.py::TestCaseInsensitiveDict::test_iterable_init\", \"test_requests.py::TestCaseInsensitiveDict::test_kwargs_init\", \"test_requests.py::TestCaseInsensitiveDict::test_len\", \"test_requests.py::TestCaseInsensitiveDict::test_lower_items\", \"test_requests.py::TestCaseInsensitiveDict::test_mapping_init\", \"test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case\", \"test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case\", \"test_requests.py::TestCaseInsensitiveDict::test_setdefault\", \"test_requests.py::TestCaseInsensitiveDict::test_update\", \"test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged\", \"test_requests.py::UtilsTestCase::test_address_in_network\", \"test_requests.py::UtilsTestCase::test_dotted_netmask\", \"test_requests.py::UtilsTestCase::test_get_auth_from_url\", \"test_requests.py::UtilsTestCase::test_get_environ_proxies\", \"test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges\", \"test_requests.py::UtilsTestCase::test_is_ipv4_address\", \"test_requests.py::UtilsTestCase::test_is_valid_cidr\", \"test_requests.py::UtilsTestCase::test_super_len_io_streams\", \"test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int\", \"test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str\", \"test_requests.py::TestMorselToCookieExpires::test_expires_none\", \"test_requests.py::TestMorselToCookieExpires::test_expires_valid_str\", \"test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str\", \"test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int\", \"test_requests.py::TestTimeout::test_stream_timeout\"]", "environment_setup_commit": "3eb69be879063de4803f7f0152b83738a1c95ca4"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   requests/sessions.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 110048f9837f8441ea536804115e80b69f400277\nMerge: 4112b8f1 a59fac5e\nAuthor: Kenneth Reitz <me@kennethreitz.org>\nDate:   Wed Mar 12 16:37:27 2014 -0400\n\n    Merge pull request #1916 from schlamar/accept-encoding\n    \n    Fix Accept-Encoding in default headers\n\ndiff --git a/requests/sessions.py b/requests/sessions.py\nindex 425db22c..fc5b0ffa 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -168,8 +168,11 @@ class SessionRedirectMixin(object):\n             if new_auth is not None:\n                 prepared_request.prepare_auth(new_auth)\n \n+            # Override the original request.\n+            req = prepared_request\n+\n             resp = self.send(\n-                prepared_request,\n+                req,\n                 stream=stream,\n                 timeout=timeout,\n                 verify=verify,\nProcessing /testbed\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nBuilding wheels for collected packages: requests\n  Building wheel for requests (setup.py): started\n  Building wheel for requests (setup.py): finished with status 'done'\n  Created wheel for requests: filename=requests-2.3.0-py2.py3-none-any.whl size=441563 sha256=9094985174f0998a45da20c88c8f43397849386dc7d9f11cfc1b2cbcf6294189\n  Stored in directory: /tmp/pip-ephem-wheel-cache-c6kbdpg5/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4\nSuccessfully built requests\nInstalling collected packages: requests\n  Attempting uninstall: requests\n    Found existing installation: requests 2.3.0\n    Uninstalling requests-2.3.0:\n      Successfully uninstalled requests-2.3.0\nSuccessfully installed requests-2.3.0\n============================= test session starts ==============================\nplatform linux -- Python 3.9.20, pytest-7.4.4, pluggy-1.0.0\nrootdir: /testbed\ncollected 121 items\n\ntest_requests.py ....................F.................................. [ 45%]\n..................................................................       [100%]\n\n=================================== FAILURES ===================================\n________________ RequestsTestCase.test_conflicting_post_params _________________\n\nself = <test_requests.RequestsTestCase testMethod=test_conflicting_post_params>\n\n    def test_conflicting_post_params(self):\n        url = httpbin('post')\n        with open('requirements.txt') as f:\n>           pytest.raises(ValueError, \"requests.post(url, data='[{\\\"some\\\": \\\"data\\\"}]', files={'some': f})\")\nE           TypeError: 'requests.post(url, data=\\'[{\"some\": \"data\"}]\\', files={\\'some\\': f})' object (type: <class 'str'>) must be callable\n\ntest_requests.py:397: TypeError\n=============================== warnings summary ===============================\nrequests/packages/urllib3/_collections.py:7\n  /testbed/requests/packages/urllib3/_collections.py:7: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n    from collections import MutableMapping\n\nrequests/sessions.py:12\n  /testbed/requests/sessions.py:12: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n    from collections import Mapping\n\ntest_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET\n  /testbed/requests/models.py:164: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n    if isinstance(hook, collections.Callable):\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n==================================== PASSES ====================================\n=========================== short test summary info ============================\nPASSED test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET\nPASSED test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE\nPASSED test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET\nPASSED test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE\nPASSED test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES\nPASSED test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET\nPASSED test_requests.py::RequestsTestCase::test_DIGEST_STREAM\nPASSED test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE\nPASSED test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS\nPASSED test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS\nPASSED test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD\nPASSED test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT\nPASSED test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET\nPASSED test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES\nPASSED test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA\nPASSED test_requests.py::RequestsTestCase::test_autoset_header_values_are_native\nPASSED test_requests.py::RequestsTestCase::test_basic_building\nPASSED test_requests.py::RequestsTestCase::test_basicauth_with_netrc\nPASSED test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files\nPASSED test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests\nPASSED test_requests.py::RequestsTestCase::test_cookie_as_dict_items\nPASSED test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items\nPASSED test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len\nPASSED test_requests.py::RequestsTestCase::test_cookie_as_dict_keys\nPASSED test_requests.py::RequestsTestCase::test_cookie_as_dict_values\nPASSED test_requests.py::RequestsTestCase::test_cookie_parameters\nPASSED test_requests.py::RequestsTestCase::test_cookie_persists_via_api\nPASSED test_requests.py::RequestsTestCase::test_cookie_quote_wrapped\nPASSED test_requests.py::RequestsTestCase::test_cookie_removed_on_expire\nPASSED test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect\nPASSED test_requests.py::RequestsTestCase::test_custom_content_type\nPASSED test_requests.py::RequestsTestCase::test_decompress_gzip\nPASSED test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post\nPASSED test_requests.py::RequestsTestCase::test_entry_points\nPASSED test_requests.py::RequestsTestCase::test_fixes_1329\nPASSED test_requests.py::RequestsTestCase::test_generic_cookiejar_works\nPASSED test_requests.py::RequestsTestCase::test_get_auth_from_url\nPASSED test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes\nPASSED test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces\nPASSED test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces\nPASSED test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars\nPASSED test_requests.py::RequestsTestCase::test_header_keys_are_native\nPASSED test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive\nPASSED test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent\nPASSED test_requests.py::RequestsTestCase::test_hook_receives_request_arguments\nPASSED test_requests.py::RequestsTestCase::test_http_error\nPASSED test_requests.py::RequestsTestCase::test_invalid_url\nPASSED test_requests.py::RequestsTestCase::test_links\nPASSED test_requests.py::RequestsTestCase::test_long_authinfo_in_url\nPASSED test_requests.py::RequestsTestCase::test_mixed_case_scheme_acceptable\nPASSED test_requests.py::RequestsTestCase::test_no_content_length\nPASSED test_requests.py::RequestsTestCase::test_oddball_schemes_dont_check_URLs\nPASSED test_requests.py::RequestsTestCase::test_param_cookiejar_works\nPASSED test_requests.py::RequestsTestCase::test_params_are_added_before_fragment\nPASSED test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive\nPASSED test_requests.py::RequestsTestCase::test_path_is_not_double_encoded\nPASSED test_requests.py::RequestsTestCase::test_prepared_from_session\nPASSED test_requests.py::RequestsTestCase::test_prepared_request_hook\nPASSED test_requests.py::RequestsTestCase::test_pyopenssl_redirect\nPASSED test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable\nPASSED test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie\nPASSED test_requests.py::RequestsTestCase::test_request_cookies_not_persisted\nPASSED test_requests.py::RequestsTestCase::test_request_ok_set\nPASSED test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden\nPASSED test_requests.py::RequestsTestCase::test_response_is_iterable\nPASSED test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks\nPASSED test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks\nPASSED test_requests.py::RequestsTestCase::test_session_pickling\nPASSED test_requests.py::RequestsTestCase::test_set_cookie_on_301\nPASSED test_requests.py::RequestsTestCase::test_status_raising\nPASSED test_requests.py::RequestsTestCase::test_time_elapsed_blank\nPASSED test_requests.py::RequestsTestCase::test_transport_adapter_ordering\nPASSED test_requests.py::RequestsTestCase::test_unicode_get\nPASSED test_requests.py::RequestsTestCase::test_unicode_header_name\nPASSED test_requests.py::RequestsTestCase::test_unicode_method_name\nPASSED test_requests.py::RequestsTestCase::test_unicode_multipart_post\nPASSED test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames\nPASSED test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect\nPASSED test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param\nPASSED test_requests.py::RequestsTestCase::test_user_agent_transfers\nPASSED test_requests.py::TestContentEncodingDetection::test_html4_pragma\nPASSED test_requests.py::TestContentEncodingDetection::test_html_charset\nPASSED test_requests.py::TestContentEncodingDetection::test_none\nPASSED test_requests.py::TestContentEncodingDetection::test_precedence\nPASSED test_requests.py::TestContentEncodingDetection::test_xhtml_pragma\nPASSED test_requests.py::TestContentEncodingDetection::test_xml\nPASSED test_requests.py::TestCaseInsensitiveDict::test_contains\nPASSED test_requests.py::TestCaseInsensitiveDict::test_delitem\nPASSED test_requests.py::TestCaseInsensitiveDict::test_docstring_example\nPASSED test_requests.py::TestCaseInsensitiveDict::test_equality\nPASSED test_requests.py::TestCaseInsensitiveDict::test_fixes_649\nPASSED test_requests.py::TestCaseInsensitiveDict::test_get\nPASSED test_requests.py::TestCaseInsensitiveDict::test_getitem\nPASSED test_requests.py::TestCaseInsensitiveDict::test_iter\nPASSED test_requests.py::TestCaseInsensitiveDict::test_iterable_init\nPASSED test_requests.py::TestCaseInsensitiveDict::test_kwargs_init\nPASSED test_requests.py::TestCaseInsensitiveDict::test_len\nPASSED test_requests.py::TestCaseInsensitiveDict::test_lower_items\nPASSED test_requests.py::TestCaseInsensitiveDict::test_mapping_init\nPASSED test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case\nPASSED test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case\nPASSED test_requests.py::TestCaseInsensitiveDict::test_setdefault\nPASSED test_requests.py::TestCaseInsensitiveDict::test_update\nPASSED test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged\nPASSED test_requests.py::UtilsTestCase::test_address_in_network\nPASSED test_requests.py::UtilsTestCase::test_dotted_netmask\nPASSED test_requests.py::UtilsTestCase::test_get_auth_from_url\nPASSED test_requests.py::UtilsTestCase::test_get_environ_proxies\nPASSED test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges\nPASSED test_requests.py::UtilsTestCase::test_is_ipv4_address\nPASSED test_requests.py::UtilsTestCase::test_is_valid_cidr\nPASSED test_requests.py::UtilsTestCase::test_super_len_io_streams\nPASSED test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int\nPASSED test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str\nPASSED test_requests.py::TestMorselToCookieExpires::test_expires_none\nPASSED test_requests.py::TestMorselToCookieExpires::test_expires_valid_str\nPASSED test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str\nPASSED test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int\nPASSED test_requests.py::TestTimeout::test_stream_timeout\nPASSED test_requests.py::TestRedirects::test_requests_are_updated_each_time\nFAILED test_requests.py::RequestsTestCase::test_conflicting_post_params - Typ...\n================== 1 failed, 120 passed, 3 warnings in 8.88s ===================\n", {"test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET": "PASSED", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE": "PASSED", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET": "PASSED", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE": "PASSED", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES": "PASSED", "test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET": "PASSED", "test_requests.py::RequestsTestCase::test_DIGEST_STREAM": "PASSED", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE": "PASSED", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS": "PASSED", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS": "PASSED", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD": "PASSED", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT": "PASSED", "test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET": "PASSED", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES": "PASSED", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA": "PASSED", "test_requests.py::RequestsTestCase::test_autoset_header_values_are_native": "PASSED", "test_requests.py::RequestsTestCase::test_basic_building": "PASSED", "test_requests.py::RequestsTestCase::test_basicauth_with_netrc": "PASSED", "test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files": "PASSED", "test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_as_dict_items": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keys": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_as_dict_values": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_parameters": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_persists_via_api": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_quote_wrapped": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_removed_on_expire": "PASSED", "test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect": "PASSED", "test_requests.py::RequestsTestCase::test_custom_content_type": "PASSED", "test_requests.py::RequestsTestCase::test_decompress_gzip": "PASSED", "test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post": "PASSED", "test_requests.py::RequestsTestCase::test_entry_points": "PASSED", "test_requests.py::RequestsTestCase::test_fixes_1329": "PASSED", "test_requests.py::RequestsTestCase::test_generic_cookiejar_works": "PASSED", "test_requests.py::RequestsTestCase::test_get_auth_from_url": "PASSED", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes": "PASSED", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces": "PASSED", "test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces": "PASSED", "test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars": "PASSED", "test_requests.py::RequestsTestCase::test_header_keys_are_native": "PASSED", "test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive": "PASSED", "test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent": "PASSED", "test_requests.py::RequestsTestCase::test_hook_receives_request_arguments": "PASSED", "test_requests.py::RequestsTestCase::test_http_error": "PASSED", "test_requests.py::RequestsTestCase::test_invalid_url": "PASSED", "test_requests.py::RequestsTestCase::test_links": "PASSED", "test_requests.py::RequestsTestCase::test_long_authinfo_in_url": "PASSED", "test_requests.py::RequestsTestCase::test_mixed_case_scheme_acceptable": "PASSED", "test_requests.py::RequestsTestCase::test_no_content_length": "PASSED", "test_requests.py::RequestsTestCase::test_oddball_schemes_dont_check_URLs": "PASSED", "test_requests.py::RequestsTestCase::test_param_cookiejar_works": "PASSED", "test_requests.py::RequestsTestCase::test_params_are_added_before_fragment": "PASSED", "test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive": "PASSED", "test_requests.py::RequestsTestCase::test_path_is_not_double_encoded": "PASSED", "test_requests.py::RequestsTestCase::test_prepared_from_session": "PASSED", "test_requests.py::RequestsTestCase::test_prepared_request_hook": "PASSED", "test_requests.py::RequestsTestCase::test_pyopenssl_redirect": "PASSED", "test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable": "PASSED", "test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie": "PASSED", "test_requests.py::RequestsTestCase::test_request_cookies_not_persisted": "PASSED", "test_requests.py::RequestsTestCase::test_request_ok_set": "PASSED", "test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden": "PASSED", "test_requests.py::RequestsTestCase::test_response_is_iterable": "PASSED", "test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks": "PASSED", "test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks": "PASSED", "test_requests.py::RequestsTestCase::test_session_pickling": "PASSED", "test_requests.py::RequestsTestCase::test_set_cookie_on_301": "PASSED", "test_requests.py::RequestsTestCase::test_status_raising": "PASSED", "test_requests.py::RequestsTestCase::test_time_elapsed_blank": "PASSED", "test_requests.py::RequestsTestCase::test_transport_adapter_ordering": "PASSED", "test_requests.py::RequestsTestCase::test_unicode_get": "PASSED", "test_requests.py::RequestsTestCase::test_unicode_header_name": "PASSED", "test_requests.py::RequestsTestCase::test_unicode_method_name": "PASSED", "test_requests.py::RequestsTestCase::test_unicode_multipart_post": "PASSED", "test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames": "PASSED", "test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect": "PASSED", "test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param": "PASSED", "test_requests.py::RequestsTestCase::test_user_agent_transfers": "PASSED", "test_requests.py::TestContentEncodingDetection::test_html4_pragma": "PASSED", "test_requests.py::TestContentEncodingDetection::test_html_charset": "PASSED", "test_requests.py::TestContentEncodingDetection::test_none": "PASSED", "test_requests.py::TestContentEncodingDetection::test_precedence": "PASSED", "test_requests.py::TestContentEncodingDetection::test_xhtml_pragma": "PASSED", "test_requests.py::TestContentEncodingDetection::test_xml": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_contains": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_delitem": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_docstring_example": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_equality": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_fixes_649": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_get": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_getitem": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_iter": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_iterable_init": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_kwargs_init": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_len": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_lower_items": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_mapping_init": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_setdefault": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_update": "PASSED", "test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged": "PASSED", "test_requests.py::UtilsTestCase::test_address_in_network": "PASSED", "test_requests.py::UtilsTestCase::test_dotted_netmask": "PASSED", "test_requests.py::UtilsTestCase::test_get_auth_from_url": "PASSED", "test_requests.py::UtilsTestCase::test_get_environ_proxies": "PASSED", "test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges": "PASSED", "test_requests.py::UtilsTestCase::test_is_ipv4_address": "PASSED", "test_requests.py::UtilsTestCase::test_is_valid_cidr": "PASSED", "test_requests.py::UtilsTestCase::test_super_len_io_streams": "PASSED", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int": "PASSED", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str": "PASSED", "test_requests.py::TestMorselToCookieExpires::test_expires_none": "PASSED", "test_requests.py::TestMorselToCookieExpires::test_expires_valid_str": "PASSED", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str": "PASSED", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int": "PASSED", "test_requests.py::TestTimeout::test_stream_timeout": "PASSED", "test_requests.py::TestRedirects::test_requests_are_updated_each_time": "PASSED", "test_requests.py::RequestsTestCase::test_conflicting_post_params": "FAILED"}]