[{"repo": "django/django", "instance_id": "django__django-15061", "base_commit": "2c01ebb4be5d53cbf6450f356c10e436025d6d07", "patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -849,9 +849,7 @@ def get_context(self, name, value, attrs):\n         return context\n \n     def id_for_label(self, id_):\n-        if id_:\n-            id_ += '_0'\n-        return id_\n+        return ''\n \n     def value_from_datadict(self, data, files, name):\n         return [\n", "test_patch": "diff --git a/tests/forms_tests/field_tests/test_multivaluefield.py b/tests/forms_tests/field_tests/test_multivaluefield.py\n--- a/tests/forms_tests/field_tests/test_multivaluefield.py\n+++ b/tests/forms_tests/field_tests/test_multivaluefield.py\n@@ -141,7 +141,7 @@ def test_form_as_table(self):\n         self.assertHTMLEqual(\n             form.as_table(),\n             \"\"\"\n-            <tr><th><label for=\"id_field1_0\">Field1:</label></th>\n+            <tr><th><label>Field1:</label></th>\n             <td><input type=\"text\" name=\"field1_0\" id=\"id_field1_0\" required>\n             <select multiple name=\"field1_1\" id=\"id_field1_1\" required>\n             <option value=\"J\">John</option>\n@@ -164,7 +164,7 @@ def test_form_as_table_data(self):\n         self.assertHTMLEqual(\n             form.as_table(),\n             \"\"\"\n-            <tr><th><label for=\"id_field1_0\">Field1:</label></th>\n+            <tr><th><label>Field1:</label></th>\n             <td><input type=\"text\" name=\"field1_0\" value=\"some text\" id=\"id_field1_0\" required>\n             <select multiple name=\"field1_1\" id=\"id_field1_1\" required>\n             <option value=\"J\" selected>John</option>\ndiff --git a/tests/forms_tests/field_tests/test_splitdatetimefield.py b/tests/forms_tests/field_tests/test_splitdatetimefield.py\n--- a/tests/forms_tests/field_tests/test_splitdatetimefield.py\n+++ b/tests/forms_tests/field_tests/test_splitdatetimefield.py\n@@ -1,7 +1,7 @@\n import datetime\n \n from django.core.exceptions import ValidationError\n-from django.forms import SplitDateTimeField\n+from django.forms import Form, SplitDateTimeField\n from django.forms.widgets import SplitDateTimeWidget\n from django.test import SimpleTestCase\n \n@@ -60,3 +60,16 @@ def test_splitdatetimefield_changed(self):\n         self.assertTrue(f.has_changed(datetime.datetime(2008, 5, 6, 12, 40, 00), ['2008-05-06', '12:40:00']))\n         self.assertFalse(f.has_changed(datetime.datetime(2008, 5, 6, 12, 40, 00), ['06/05/2008', '12:40']))\n         self.assertTrue(f.has_changed(datetime.datetime(2008, 5, 6, 12, 40, 00), ['06/05/2008', '12:41']))\n+\n+    def test_form_as_table(self):\n+        class TestForm(Form):\n+            datetime = SplitDateTimeField()\n+\n+        f = TestForm()\n+        self.assertHTMLEqual(\n+            f.as_table(),\n+            '<tr><th><label>Datetime:</label></th><td>'\n+            '<input type=\"text\" name=\"datetime_0\" required id=\"id_datetime_0\">'\n+            '<input type=\"text\" name=\"datetime_1\" required id=\"id_datetime_1\">'\n+            '</td></tr>',\n+        )\ndiff --git a/tests/postgres_tests/test_ranges.py b/tests/postgres_tests/test_ranges.py\n--- a/tests/postgres_tests/test_ranges.py\n+++ b/tests/postgres_tests/test_ranges.py\n@@ -665,7 +665,7 @@ class SplitForm(forms.Form):\n         self.assertHTMLEqual(str(form), '''\n             <tr>\n                 <th>\n-                <label for=\"id_field_0\">Field:</label>\n+                <label>Field:</label>\n                 </th>\n                 <td>\n                     <input id=\"id_field_0_0\" name=\"field_0_0\" type=\"text\">\n@@ -700,7 +700,7 @@ class DateTimeRangeForm(forms.Form):\n             form.as_table(),\n             \"\"\"\n             <tr><th>\n-            <label for=\"id_datetime_field_0\">Datetime field:</label>\n+            <label>Datetime field:</label>\n             </th><td>\n             <input type=\"text\" name=\"datetime_field_0\" id=\"id_datetime_field_0\">\n             <input type=\"text\" name=\"datetime_field_1\" id=\"id_datetime_field_1\">\n@@ -717,7 +717,7 @@ class DateTimeRangeForm(forms.Form):\n             form.as_table(),\n             \"\"\"\n             <tr><th>\n-            <label for=\"id_datetime_field_0\">Datetime field:</label>\n+            <label>Datetime field:</label>\n             </th><td>\n             <input type=\"text\" name=\"datetime_field_0\"\n             value=\"2010-01-01 11:13:00\" id=\"id_datetime_field_0\">\n@@ -754,7 +754,7 @@ class RangeForm(forms.Form):\n \n         self.assertHTMLEqual(str(RangeForm()), '''\n         <tr>\n-            <th><label for=\"id_ints_0\">Ints:</label></th>\n+            <th><label>Ints:</label></th>\n             <td>\n                 <input id=\"id_ints_0\" name=\"ints_0\" type=\"number\">\n                 <input id=\"id_ints_1\" name=\"ints_1\" type=\"number\">\n", "problem_statement": "Remove \"for = ...\" from MultiWidget's <label>.\nDescription\n\t\nThe instance from Raw MultiWidget class generate id_for_label like f'{id_}0'\nIt has not sense.\nFor example ChoiceWidget has self.add_id_index and I can decide it myself, how I will see label_id - with or without index.\nI think, it is better to remove completely id_for_label method from MultiWidget Class.\n", "hints_text": "I agree that we should remove for from MultiWidget's <label> but not because \"It has not sense\" but to improve accessibility when using a screen reader, see also #32338. It should be enough to return an empty string: def id_for_label(self, id_): return ''\n\u200bPR", "created_at": "2021-11-04T17:15:53Z", "version": "4.1", "FAIL_TO_PASS": "[\"test_form_as_table (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_form_as_table_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_form_as_table (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)\"]", "PASS_TO_PASS": "[\"test_bad_choice (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_disabled_has_changed (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"Test when the first widget's data has changed.\", \"Test when the last widget's data has changed. This ensures that it is\", \"test_has_changed_no_initial (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_has_changed_same (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"If insufficient data is provided, None is substituted.\", \"test_render_required_attributes (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)\", \"test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)\", \"test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)\", \"test_splitdatetimefield_changed (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)\"]", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9"}, "On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/forms/widgets.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 2c01ebb4be5d53cbf6450f356c10e436025d6d07\nAuthor: Carlton Gibson <carlton.gibson@noumenal.es>\nDate:   Thu Nov 4 15:12:08 2021 +0100\n\n    Refs #33263 -- Expanded release notes for DeleteView adopting FormMixin.\n\ndiff --git a/docs/releases/4.0.txt b/docs/releases/4.0.txt\nindex 9089117215..7e6c4f62cc 100644\n--- a/docs/releases/4.0.txt\n+++ b/docs/releases/4.0.txt\n@@ -273,6 +273,10 @@ Generic Views\n   deletion. In addition, this allows ``DeleteView`` to function with\n   :class:`django.contrib.messages.views.SuccessMessageMixin`.\n \n+  In accordance with ``FormMixin``, object deletion for POST requests is\n+  handled in ``form_valid()``. Custom delete logic in ``delete()`` handlers\n+  should be moved to ``form_valid()``, or a shared helper method, as needed.\n+\n Logging\n ~~~~~~~\n \n@@ -477,6 +481,14 @@ As a side-effect, running ``makemigrations`` might generate no-op\n ``AlterField`` operations for ``ManyToManyField`` and ``ForeignKey`` fields in\n some cases.\n \n+``DeleteView`` changes\n+----------------------\n+\n+:class:`~django.views.generic.edit.DeleteView` now uses\n+:class:`~django.views.generic.edit.FormMixin` to handle POST requests. As a\n+consequence, any custom deletion logic in ``delete()`` handlers should be\n+moved to ``form_valid()``, or a shared helper method, if required.\n+\n Miscellaneous\n -------------\n \ndiff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex 00c19e2c55..386b0e7c3f 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -849,9 +849,7 @@ class MultiWidget(Widget):\n         return context\n \n     def id_for_label(self, id_):\n-        if id_:\n-            id_ += '_0'\n-        return id_\n+        return ''\n \n     def value_from_datadict(self, data, files, name):\n         return [\nObtaining file:///testbed\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Getting requirements to build editable: started\n  Getting requirements to build editable: finished with status 'done'\n  Preparing editable metadata (pyproject.toml): started\n  Preparing editable metadata (pyproject.toml): finished with status 'done'\nRequirement already satisfied: asgiref>=3.3.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20211105082253) (3.8.1)\nRequirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20211105082253) (0.5.1)\nRequirement already satisfied: typing-extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from asgiref>=3.3.2->Django==4.1.dev20211105082253) (4.12.2)\nBuilding wheels for collected packages: Django\n  Building editable for Django (pyproject.toml): started\n  Building editable for Django (pyproject.toml): finished with status 'done'\n  Created wheel for Django: filename=Django-4.1.dev20211105082253-0.editable-py3-none-any.whl size=26776 sha256=0796ac3d58f30db7d8a8225525e39240007328507f640503146f5c1a27b9d7bd\n  Stored in directory: /tmp/pip-ephem-wheel-cache-n0fcyq0d/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4\nSuccessfully built Django\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 4.1.dev20211105082253\n    Uninstalling Django-4.1.dev20211105082253:\n      Successfully uninstalled Django-4.1.dev20211105082253\nSuccessfully installed Django-4.1.dev20211105082253\nTesting against Django installed in '/testbed/django'\nImporting application postgres_tests\nImporting application forms_tests\nFound 116 test(s).\nSkipping setup of unused database(s): other.\nOperations to perform:\n  Synchronize unmigrated apps: auth, contenttypes, forms_tests, messages, sessions, staticfiles\n  Apply all migrations: admin, postgres_tests, sites\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_content_type\n    Creating table auth_permission\n    Creating table auth_group\n    Creating table auth_user\n    Creating table django_session\n    Creating table forms_tests_boundarymodel\n    Creating table forms_tests_defaults\n    Creating table forms_tests_choicemodel\n    Creating table forms_tests_choiceoptionmodel\n    Creating table forms_tests_choicefieldmodel\n    Creating table forms_tests_optionalmultichoicemodel\n    Creating table forms_tests_filemodel\n    Creating table forms_tests_article\n    Running deferred SQL...\nRunning migrations:\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying postgres_tests.0001_setup_extensions... OK\n  Applying postgres_tests.0002_create_test_models... OK\n  Applying sites.0001_initial... OK\n  Applying sites.0002_alter_domain_unique... OK\nSystem check identified no issues (0 silenced).\n", {}]